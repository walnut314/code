M:\code\buspy>term3.py
Buspirate terminal emulator. version 2.0.4
:Serial<id=0x22eae10, open=True>(port='com13', baudrate=115200, bytesize=8, parity='N', stopbits=1, timeout=None, xonxof
f=False, rtscts=False, dsrdtr=False)


HiZ>
HiZ>?
?
General                                 Protocol interaction
---------------------------------------------------------------------------
?       This help                       (0)     List current macros
=X/|X   Converts X/reverse X            (x)     Macro x
~       Selftest                        [       Start
#       Reset                           ]       Stop
$       Jump to bootloader              {       Start with read
&/%     Delay 1 us/ms                   }       Stop
a/A/@   AUXPIN (low/HI/READ)            "abc"   Send string
b       Set baudrate                    123
c/C     AUX assignment (aux/CS)         0x123
d/D     Measure ADC (once/CONT.)        0b110   Send value
f       Measure frequency               r       Read
g/S     Generate PWM/Servo              /       CLK hi
h       Commandhistory                  \       CLK lo
i       Versioninfo/statusinfo          ^       CLK tick
l/L     Bitorder (msb/LSB)              -       DAT hi
m       Change mode                     _       DAT lo
o       Set output type                 .       DAT read
p/P     Pullup resistors (off/ON)       !       Bit read
s       Script engine                   :       Repeat e.g. r:10
v       Show volts/states               .       Bits to read/write e.g. 0x55.2
w/W     PSU (off/ON)            <x>/<x= >/<0>   Usermacro x/assign x/list all
HiZ>
HiZ>m
m
1. HiZ
2. 1-WIRE
3. UART
4. I2C
5. SPI
6. 2WIRE
7. 3WIRE
8. LCD
9. DIO
x. exit(without change)

(1)>
Ready
HiZ>m4
m4
Set speed:
 1. ~5KHz
 2. ~50KHz
 3. ~100KHz
 4. ~400KHz

(1)>
Ready
I2C>1
1
WRITE: 0x01 ACK
I2C>
I2C>W
W
Power supplies ON
I2C>
I2C>P
P
Pull-up resistors ON
I2C>
I2C>(1)
(1)
Searching I2C address space. Found devices at:
0x90(0x48 W) 0x91(0x48 R)

I2C>
I2C>[0x90 0x07]
[0x90 0x07]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
I2C STOP BIT
I2C>
I2C>[0x91 r]
[0x91 r]
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07]
[0x90 0x07]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 0x42]
[0x90 0x07 0x42]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
WRITE: 0x42 ACK
I2C STOP BIT
I2C>
I2C>[0x91 r]
[0x91 r]
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 0x42]
[0x90 0x07 0x42]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
WRITE: 0x42 ACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07]
[0x90 0x07]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
I2C STOP BIT
I2C>
I2C>[0x91 r]
[0x91 r]
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07[0x91 r]]
[0x90 0x07[0x91 r]]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C STOP BIT
I2C>
I2C>?
?
General                                 Protocol interaction
---------------------------------------------------------------------------
?       This help                       (0)     List current macros
=X/|X   Converts X/reverse X            (x)     Macro x
~       Selftest                        [       Start
#       Reset                           ]       Stop
$       Jump to bootloader              {       Start with read
&/%     Delay 1 us/ms                   }       Stop
a/A/@   AUXPIN (low/HI/READ)            "abc"   Send string
b       Set baudrate                    123
c/C     AUX assignment (aux/CS)         0x123
d/D     Measure ADC (once/CONT.)        0b110   Send value
f       Measure frequency               r       Read
g/S     Generate PWM/Servo              /       CLK hi
h       Commandhistory                  \       CLK lo
i       Versioninfo/statusinfo          ^       CLK tick
l/L     Bitorder (msb/LSB)              -       DAT hi
m       Change mode                     _       DAT lo
o       Set output type                 .       DAT read
p/P     Pullup resistors (off/ON)       !       Bit read
s       Script engine                   :       Repeat e.g. r:10
v       Show volts/states               .       Bits to read/write e.g. 0x55.2
w/W     PSU (off/ON)            <x>/<x= >/<0>   Usermacro x/assign x/list all
I2C>
I2C>[0x90 0x07 { 0x91 r ]
[0x90 0x07 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 { 0x91 r ]
[0x90 0x07 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 { 0x91 r ]
[0x90 0x07 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 { 0x91 r ]
[0x90 0x07 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 { 0x91 r ]
[0x90 0x07 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 0x42]
[0x90 0x07 0x42]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
WRITE: 0x42 ACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 { 0x91 r ]
[0x90 0x07 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x0D { 0x91 r ]
[0x90 0x0D { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x0D ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x01 { 0x91 r ]
[0x90 0x01 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x01 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x12
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x01 { 0x91 r ]
[0x90 0x01 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x01 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x12
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x00 { 0x91 r ]
[0x90 0x00 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x00 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x12
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x02 { 0x91 r ]
[0x90 0x02 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x02 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x03 { 0x91 r ]
[0x90 0x03 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x03 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x04 { 0x91 r ]
[0x90 0x04 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x04 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x05 { 0x91 r ]
[0x90 0x05 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x05 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x06 { 0x91 r ]
[0x90 0x06 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x06 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 { 0x91 r ]
[0x90 0x07 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x08 { 0x91 r ]
[0x90 0x08 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x08 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x09 { 0x91 r ]
[0x90 0x09 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x09 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x0a { 0x91 r ]
[0x90 0x0a { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x0A ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x0b { 0x91 r ]
[0x90 0x0b { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x0B ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x0c { 0x91 r ]
[0x90 0x0c { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x0C ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x0d { 0x91 r ]
[0x90 0x0d { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x0D ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x0e { 0x91 r ]
[0x90 0x0e { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x0E ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x0f { 0x91 r ]
[0x90 0x0f { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x0F ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 0x42]
[0x90 0x07 0x42]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
WRITE: 0x42 ACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 { 0x91 r ]
[0x90 0x07 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 0x42]
[0x90 0x07 0x42]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
WRITE: 0x42 ACK
I2C STOP BIT
I2C>
I2C>[0x90 0x00 0x42]
[0x90 0x00 0x42]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x00 ACK
WRITE: 0x42 ACK
I2C STOP BIT
I2C>
I2C>[0x90 0x00 { 0x91 r ]
[0x90 0x00 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x00 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x12
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x01 0x42]
[0x90 0x01 0x42]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x01 ACK
WRITE: 0x42 ACK
I2C STOP BIT
I2C>
I2C>[0x90 0x01 { 0x91 r ]
[0x90 0x01 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x01 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x12
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x03 0x42]
[0x90 0x03 0x42]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x03 ACK
WRITE: 0x42 ACK
I2C STOP BIT
I2C>
I2C>[0x90 0x03 { 0x91 r ]
[0x90 0x03 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x03 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 0x42]
[0x90 0x07 0x42]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
WRITE: 0x42 ACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 0x42]
[0x90 0x07 0x42]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
WRITE: 0x42 ACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 { 0x91 r ]
[0x90 0x07 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 0x42]
[0x90 0x07 0x42]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
WRITE: 0x42 ACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 { 0x91 r ]
[0x90 0x07 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 0x42]
[0x90 0x07 0x42]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
WRITE: 0x42 ACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 { 0x91 r ]
[0x90 0x07 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 { 0x91 r ]
[0x90 0x07 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 { 0x91 r ]
[0x90 0x07 { 0x91 r ]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
I2C START BIT
WRITE: 0x91 ACK
READ: 0x00
NACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 0x42]
[0x90 0x07 0x42]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
WRITE: 0x42 ACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 0x42]
[0x90 0x07 0x42]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
WRITE: 0x42 ACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 0x42]
[0x90 0x07 0x42]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
WRITE: 0x42 ACK
I2C STOP BIT
I2C>
I2C>[0x90 0x07 0x42]
[0x90 0x07 0x42]
I2C START BIT
WRITE: 0x90 ACK
WRITE: 0x07 ACK
WRITE: 0x42 ACK
I2C STOP BIT
I2C>
I2C>Traceback (most recent call last):
  File "M:\code\buspy\term3.py", line 22, in <module>
    input = raw_input(out)
KeyboardInterrupt

M:\code\buspy>upr
'upr' is not recognized as an internal or external command,
operable program or batch file.

M:\code\buspy>
