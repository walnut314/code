[color]
    ui = auto
[core]
    pager = less -FMRiX
    excludesfile = C:/Users/thedude/.gitignore
    eol = lf
#   autocrlf = false
[push]
    default = simple
[alias]
    go = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold black)%ci %C(bold blue)%ae <%an>%Creset' --decorate --abbrev-commit --author-date-order --all
    gof = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold black)%ci %C(bold blue)%ae <%an>%Creset' --decorate --abbrev-commit --author-date-order
    god = log --graph --pretty=format:'%Cred%H%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold black)%ci %C(bold blue)%ae <%an>%Creset' --decorate --abbrev-commit --author-date-order --all
    godf = log --graph --pretty=format:'%Cred%H%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold black)%ci %C(bold blue)%ae <%an>%Creset' --decorate --abbrev-commit --author-date-order
#   dagg = log --graph --format='format:%C(yellow)%h%C(reset) %C(blue)\"%an\" <%ae>%C(reset) %C(magenta)%cr%C(reset)%C(auto)%d%C(reset)%n%s' --date-order
    gbd = log --graph --simplify-by-decoration --pretty=format:'%C(yellow)%h%C(white)%d %C(bold black)%ai %C(reset)%n' --all
    gb = log --graph --simplify-by-decoration --pretty=format:'%C(yellow)%h%C(white)%d %C(bold black)%ar %C(reset)%n' --all
    g5 = log --graph --abbrev-commit --decorate --all --format=format:\"%C(bold blue)%h%C(reset) %C(bold cyan)%aD%C(dim white) %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)\"
    glong = log --stat --decorate --graph
    logMerges = log --first-parent --graph
    ll = log --pretty=format:\"%C(bold blue)%h %C(red)%d %C(white bold)%s %Cgreen(%cr) %C(blue)<%an>%Creset %n\" --decorate --stat --graph
    #graph with diffs, useful for tracking one file history
    gdiff = log --oneline --decorate --graph --full-history -p  -c --color-words -b
    gdifff = log --oneline --decorate --graph --follow --full-history -p  -c --color-words -b
    gldiff = log --format=medium --decorate --graph -p  -c
    gldifff = log --format=medium --decorate --graph --follow -p  -c
    # https://salferrarello.com/using-vim-view-git-commits/
    # View commit with K (upper case k)
    vim = "!git log --graph --oneline --decorate --all --pretty=format:'%h %d %s <%an>' | vim -R -c \"set filetype=git nowrap\" -"
    gvim = "!git log --graph --oneline --decorate --all --pretty=format:'%h %d %s <%an>' | gvim -R -c \"set filetype=git nowrap\" -"

    aliases = "!git config -l | grep alias | cut -c 7-"
    lasttag = describe --tags --abbrev=0
    mcu-push = "!f(){ git fetch $2 && git subtree push --prefix=$1 $2 $3; };f"
    mcu-pull-2019 = "!f(){ git subtree pull --prefix=$1 $2 product/CHAMP/RTM --squash; };f"
    mcu-pull = "!f(){ git subtree pull --prefix=$1 $2 master --squash; };f"
    mcu-push-all = "!f(){ git mcu-push OS repoOS $1 ; git mcu-push Platform repoPlatform $1; git mcu-push Utilities repoUtilities $1; git mcu-push Application repoApplication $1; git mcu-push Bootloader repoBootloader $1; git mcu-push Build repoBuild $1; };f"
    mcu-pull-all = "!f(){ git mcu-pull OS repoOS ; git mcu-pull Platform repoPlatform ; git mcu-pull Utilities repoUtilities ; git mcu-pull Application repoApplication ; git mcu-pull Bootloader repoBootloader ; git mcu-pull Build repoBuild; };f"
    mcu-pull-all-2019 = "!f(){ git mcu-pull-2019 OS repoOS ; git mcu-pull-2019 Platform repoPlatform ; git mcu-pull-2019 Utilities repoUtilities ; git mcu-pull-2019 Application repoApplication ; git mcu-pull-2019 Bootloader repoBootloader ; git mcu-pull-2019 Build repoBuild; };f"
[diff]
    tool = gvimdiff
[difftool]
    prompt = false
[merge]
    tool = gvimdiff
    conflictstyle = diff3
[grep]
    extendRegexp = true
    lineNumber = true
[rebase]
    autostash = true
[user]
    name = The Dude
    email = thedude@yahoo.com
