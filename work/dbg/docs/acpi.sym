Opened log file 'C:\sandbox\dumps\Bug_2005370\acpi.sym'
2: kd> x acpi!*
fffff802`373f2800 ACPI!gDebugger = struct _dbgr
fffff802`373fc420 ACPI!HalDispatchTable = 0xfffff802`34e00a60
fffff802`373f32b8 ACPI!AcpiPccSciReferenceCount = 0n0
fffff802`373f2ab8 ACPI!AcpiHalDispatchTable = struct ACPI_HAL_DISPATCH_TABLE
fffff802`373e2f98 ACPI!WPP_c0e337b8db3d3f7e68015837118db5e6_Traceguids = struct _GUID [1]
fffff802`373dffa8 ACPI!GUID_PCC_INTERFACE_INTERNAL = {7CCE62CE-C189-4814-A6A7-12112089E938}
fffff802`373dea40 ACPI!AcpiExperienceButtonIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`373dfde0 ACPI!GUID_EM_RULE_AMLI_USE_NAMESPACE_OVERRIDE = {FB1B8E3C-DF94-4722-AD5E-9E655C33B984}
fffff802`373e0710 ACPI!ACPIFixedButtonId = char [17] "ACPI\FixedButton"
fffff802`373e3400 ACPI!WPP_c59ebad4ba4237f8565ac470111a8bba_Traceguids = struct _GUID [1]
fffff802`373deb40 ACPI!AcpiFanIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`373f2b10 ACPI!gpBadIOAddressList = 0xffff8e87`af486b90
fffff802`373dff58 ACPI!GUID_PCI_BUS_INTERFACE_STANDARD2 = {DE94E966-FDFF-4C9C-9998-6747B150E74C}
fffff802`373f3148 ACPI!ghMutexObject = struct _evhandle
fffff802`373e0090 ACPI!GUID_EM_RULE_ACPI_SWALLOW_OBJECT_CRS = {862CE9AC-7BB8-4BC6-A46C-C4ADA0B41F95}
fffff802`373eff00 ACPI!atRefOf = struct _amlterm
fffff802`373deff0 ACPI!AcpiDevicePowerProcessPhase1Table1 = <function> *[6]
fffff802`373def00 ACPI!AcpiDevicePowerProcessPhase2Table2 = <function> *[6]
fffff802`373dede0 ACPI!AcpiDevicePowerProcessPhase5Table5 = <function> *[6]
fffff802`373f32c8 ACPI!AcpiHiddenProcessorApicIds = 0x00000000`00000000
fffff802`373ef2b8 ACPI!AcpiDevicePowerProcessPhase2Dispatch = <function> **[6]
fffff802`373de940 ACPI!AcpiGenericBusIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`373f1ea0 ACPI!AcpiFatalContext = struct _ACPI_FATAL_ERROR_CONTEXT
fffff802`373ef010 ACPI!ACPIDispatchPnpTableNames = char *[27]
fffff802`373f2190 ACPI!AcpiPowerWaitWakeList = struct _LIST_ENTRY [ 0xffff8e87`b99b1920 - 0xffff8e87`b99b02a0 ]
fffff802`373f1358 ACPI!__security_cookie_complement = 0xffff3026`4e63d572
fffff802`373f2b00 ACPI!g_SimulatorCallbackObject = 0x00000000`00000000
fffff802`373de2c8 ACPI!ReenumerateSelfInterface = struct _REENUMERATE_SELF_INTERFACE_STANDARD
fffff802`373f2030 ACPI!ExternalTranslationInterface = 0xffffe38c`2cffe2a0
fffff802`373e0518 ACPI!WPP_f6167ec5c23d3e6afd934d9207ac58f7_Traceguids = struct _GUID [1]
fffff802`373e33f0 ACPI!WPP_3ad0379a4aff33c3a6e5470e3717ea43_Traceguids = struct _GUID [1]
fffff802`373f34a4 ACPI!ProcessorVectorColumnBias = 0
fffff802`373f2a70 ACPI!GpeComplete = 0xffff8e87`af5f6f30 ""
fffff802`373e2f18 ACPI!GUID_DOCK_INTERFACE = {A9956FF5-13DA-11D3-97DB-00A0C940522E}
fffff802`373f0678 ACPI!atEvent = struct _amlterm
fffff802`373f2740 ACPI!HotPatchSpareGlobal6 = 0x00000000`00000000
fffff802`373e05e8 ACPI!WPP_3f059b4445c33feb0bcb2acb2d7cf140_Traceguids = struct _GUID [1]
fffff802`373dfdd0 ACPI!GUID_EM_RULE_AMLI_MULTITHREADED_EXECUTION = {AA88AE27-E5EB-4298-A844-017B7EB1DE96}
fffff802`373f1b20 ACPI!AcpiProcessorStartupLock = struct _FAST_MUTEX
fffff802`373dd690 ACPI!AcpiBuildPowerResourceDispatch = <function> *[7]
fffff802`373e0818 ACPI!GUID_EM_RULE_ACPI_DISABLE_S1 = {FF69173C-2834-4E0C-B76B-D6E8D4D08976}
fffff802`373dfe40 ACPI!THERMAL_POLLING_ETW_PROVIDER = {E8A7C168-81EE-465C-8E8E-D39A2AC1CA41}
fffff802`373dff08 ACPI!GUID_DEVICE_RESET_INTERFACE_STANDARD = {649FDF26-3BC0-4813-AD24-7E0C1EDA3FA3}
fffff802`373ef598 ACPI!atMid = struct _amlterm
fffff802`373a1e80 ACPI!_guard_dispatch_icall_nop = 0xff ''
fffff802`373df510 ACPI!WPP_6388804bb8c533865278dc0c88026078_Traceguids = struct _GUID [1]
fffff802`373e13b0 ACPI!GUID_EM_ACPI_NSOBJ_TYPE = {9AD56063-6B5D-4378-92A6-B4A8CA5B2616}
fffff802`373f1e80 ACPI!gPreAllocPciPoolSpinLock = 0
fffff802`373ef640 ACPI!atToInteger = struct _amlterm
fffff802`373ef560 ACPI!atContinue = struct _amlterm
fffff802`373f1580 ACPI!ProcessorByNtNumber = 0xffffe38c`2e067d00
fffff802`373e25e0 ACPI!_TraceLoggingMetadata = struct _TraceLoggingMetadata_t
fffff802`373f19b0 ACPI!AcpiThermalLock = 0
fffff802`373f32d0 ACPI!GpeVectorTableSize = 0
fffff802`373f19c0 ACPI!AcpiThermalList = struct _LIST_ENTRY [ 0xfffff802`373f19c0 - 0xfffff802`373f19c0 ]
fffff802`373f0410 ACPI!atRelease = struct _amlterm
fffff802`373e0798 ACPI!GUID_EM_RULE_ACPI_PLATFORM_CHECK_FAIL_RESET_ON_OPEN_HANDLES = {BE2DD198-7FD6-4FDF-8B5A-61778CED9C35}
fffff802`373df050 ACPI!AcpiDevicePowerProcessPhase0Table1 = <function> *[6]
fffff802`373deed0 ACPI!AcpiDevicePowerProcessPhase2Table3 = <function> *[6]
fffff802`373dee10 ACPI!AcpiDevicePowerProcessPhase5Table4 = <function> *[6]
fffff802`373e0660 ACPI!ACPI_ETW_EVENT_DEVICE_ACTIVE_COOLING = struct _EVENT_DESCRIPTOR
fffff802`373f2c00 ACPI!AMLIContextLookAsideList = struct _NPAGED_LOOKASIDE_LIST
fffff802`373f2c80 ACPI!BuildRequestLookAsideList = struct _NPAGED_LOOKASIDE_LIST
fffff802`373f2608 ACPI!AcpiDiagThermalTelemetryInterval = 0n0
fffff802`373f10a0 ACPI!ArgsHelp = struct _cmdarg [2]
fffff802`373f1588 ACPI!ProcessorReserveIdtEntries = 0xfffff802`37410690
fffff802`373f1f90 ACPI!GpeTableSize = 0x150
fffff802`373e2fb8 ACPI!rgHexDigit = unsigned char [17] "0123456789ABCDEF"
fffff802`373e1370 ACPI!GUID_EM_ACPI_DEVICE_MATCH_CALLBACK = {33204598-9949-4AD1-B41E-A4A0F705DC12}
fffff802`373f21b0 ACPI!AcpiPowerNodeList = struct _LIST_ENTRY [ 0xffff8e87`b1a68c40 - 0xffff8e87`b18fc780 ]
fffff802`373f1bc0 ACPI!AcpiPlExtNativeMethodInterface = struct _PLEXT_NATIVE_METHOD_INTERFACE
fffff802`373f1af1 ACPI!AcpiProcessorContainerHierarchyEvaluated = 0x00 ''
fffff802`373f17f0 ACPI!gdwGContextSpinLock = 0
fffff802`373f3298 ACPI!gdwfAMLI = 0
fffff802`373df548 ACPI!INTERRUPT_CONNECTION_DATA_PKEY = struct _DEVPROPKEY
fffff802`373f34a0 ACPI!IrqLibGicVersion = 0
fffff802`373e3068 ACPI!WPP_8cd4999731163fb3621cd0c511e30926_Traceguids = struct _GUID [1]
fffff802`373f2520 ACPI!ACPIFastIoDispatch = struct _FAST_IO_DISPATCH
fffff802`373f2ae4 ACPI!AcpiHiddenProcessorCount = 0
fffff802`373f32b0 ACPI!EcExtensionList = 0x00000000`00000000
fffff802`373f2480 ACPI!AcpiBuildThermalZoneList = struct _LIST_ENTRY [ 0xfffff802`373f2480 - 0xfffff802`373f2480 ]
fffff802`373f2600 ACPI!AcpiDiagThermalPollingInterval = 0n0
fffff802`373df4b0 ACPI!WPP_dae7fe894c7e323433b1d18b69ca790c_Traceguids = struct _GUID [1]
fffff802`373df818 ACPI!DEVPKEY_Device_InstanceId = struct _DEVPROPKEY
fffff802`373f3108 ACPI!ghNativeMethodEvalObject = struct _evhandle
fffff802`373f2770 ACPI!HotPatchSpareGlobal7 = 0x00000000`00000000
fffff802`373dd600 ACPI!AcpiBuildThermalZoneDispatch = <function> *[8]
fffff802`373df0a0 ACPI!AcpiSurpriseRemovedPdoIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`373f30e8 ACPI!AcpiDynamicDataBlockTableList = struct _LIST_ENTRY [ 0xffff8e87`af5f7a80 - 0xffff8e87`af5f7cc0 ]
fffff802`373df620 ACPI!WPP_46fdfefd1e063d3591824ef1bcf3110e_Traceguids = struct _GUID [1]
fffff802`373f0018 ACPI!atBuffer = struct _amlterm
fffff802`373f2a68 ACPI!GpeMap = 0xffff8e87`af5f6f60 ""
fffff802`3742a620 ACPI!ACPIDispatchDockPnpTable = <function> *[27]
fffff802`373fc8b0 ACPI!__guard_dispatch_icall_fptr = 0xfffff802`373a1e80
fffff802`373dd7f0 ACPI!OpcodeTable = struct _amlterm *[256]
fffff802`373f2440 ACPI!AcpiBuildPowerResourceList = struct _LIST_ENTRY [ 0xfffff802`373f2440 - 0xfffff802`373f2440 ]
fffff802`373e2a78 ACPI!AcpiArbiterResourceTypes = int [3]
fffff802`373ef4f0 ACPI!atElse = struct _amlterm
fffff802`373e2990 ACPI!AcpiDiagThermalPollingIntervals = struct _THERMAL_POLLING_INTERVAL [5]
fffff802`373e0058 ACPI!WPP_ec0197110b243600652482d802840487_Traceguids = struct _GUID [1]
fffff802`373f31c8 ACPI!ghNotify = struct _evhandle
fffff802`373e1380 ACPI!GUID_EM_ACPI_NSOBJ_MATCH_CALLBACK = {C2569BEF-5980-4120-8582-9D0774DCF86D}
fffff802`373f1960 ACPI!gDebuggingDevicesInUse = struct _UNICODE_STRING [2]
fffff802`373debc0 ACPI!AcpiRealTimeClockIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`373ef0e8 ACPI!_TlgAcpiTraceHandleProv = struct _tlgProvider_t
fffff802`373ef9f8 ACPI!atIndex = struct _amlterm
fffff802`373f20e0 ACPI!AcpiPowerLock = 0
fffff802`373f136b ACPI!AcpiRootLpiCapableHypervisor = 0x00 ''
fffff802`373fc030 ACPI!KdHvComPortInUse = 0xfffff802`34ef4c78
fffff802`373f2200 ACPI!AcpiSurpriseRemovedDeviceExtensions = struct _DEVICE_EXTENSION *[32]
fffff802`3742a7e0 ACPI!ACPIDepFilterPnpTable = <function> *[27]
fffff802`373f2400 ACPI!AcpiBuildQueueLock = 0
fffff802`373ef380 ACPI!glistCtxtHead = struct _LIST_ENTRY [ 0xffff8e87`c3359020 - 0xffff8e87`c3359020 ]
fffff802`373df020 ACPI!AcpiDevicePowerProcessPhase0Table2 = <function> *[6]
fffff802`373def90 ACPI!AcpiDevicePowerProcessPhase1Table3 = <function> *[6]
fffff802`373f2b38 ACPI!gdwfAMLIInit = 0
fffff802`373ef320 ACPI!AcpiDevicePowerProcessPhase0Dispatch = <function> **[5]
fffff802`373f1554 ACPI!IrqArbGlobalDistributionDisposition = DistributionDispositionDontCare (0n0)
fffff802`373deb00 ACPI!AcpiPowerButtonIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`373f1af0 ACPI!AcpiProcessorContainerHierarchyLocked = 0x00 ''
fffff802`373e31b8 ACPI!WPP_95ceafb9c956380d4634093f153ba036_Traceguids = struct _GUID [1]
fffff802`373e1aa0 ACPI!DEVPKEY_Device_PhysicalDeviceLocationJoint = struct _DEVPROPKEY
fffff802`373e07a8 ACPI!GUID_EM_RULE_ACPI_PLATFORM_CHECK_D3COLD_ON_SURPRISE_REMOVAL = {14B9611E-EBAE-4D74-9231-43A8EFC37CDA}
fffff802`373f0560 ACPI!atStall = struct _amlterm
fffff802`373dd2d0 ACPI!ExOpcodeTable = struct _opcodemap [29]
fffff802`373f20e8 ACPI!AcpiPowerQueueLock = 0
fffff802`373e3cf8 ACPI!HTOALookupTable = unsigned char [16] "0123456789ABCDEF%I64x"
fffff802`373f31a8 ACPI!ghGlobalLock = struct _evhandle
fffff802`373f1890 ACPI!ACPIWorkQueue = struct _LIST_ENTRY [ 0xfffff802`373f1890 - 0xfffff802`373f1890 ]
fffff802`373e2f38 ACPI!GUID_APPLAUNCH_BUTTON = {1A689231-7399-4E9A-8F99-B71F999DB3FA}
fffff802`373f1860 ACPI!ACPIProcessWorkQueueEvent = struct _KEVENT
fffff802`373e1af8 ACPI!SystemPowerStateTranslation = _SYSTEM_POWER_STATE [6]
fffff802`373f2700 ACPI!HotPatchSpareGlobal4 = 0x00000000`00000000
fffff802`373dffc8 ACPI!GUID_DMA_CACHE_COHERENCY_INTERFACE = {B520F7FA-8A5A-4E40-A3F6-6BE1E162D935}
fffff802`373f0598 ACPI!atLoad = struct _amlterm
fffff802`373e2fa8 ACPI!WPP_1c376abaf53c383d7a89b72da0be5001_Traceguids = struct _GUID [1]
fffff802`373e0778 ACPI!GUID_EM_RULE_ACPI_DEVICE_IGNORE_STA_ON_FILTER_ATTACH = {2AC1066F-55A9-4E21-97CF-ACB5F50CBE2B}
fffff802`373dd590 ACPI!AcpiSurpriseRemovedFilterIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`373e07f8 ACPI!GUID_EM_RULE_ACPI_DISABLE_S3 = {D55820C4-D4A9-44D1-AD2E-8BBCEF3664A8}
fffff802`373e1350 ACPI!SB_OSC_IOV_UUID = {8CEF6809-8350-46A0-A946-F6874EDFFC1B}
fffff802`373e0868 ACPI!DEVPKEY_PciDevice_OnPostPath = struct _DEVPROPKEY
fffff802`373f2620 ACPI!AcpiDiagThermalPollingHandle = 0xffff8e87`b13fa710
fffff802`373f1370 ACPI!IsaVectorOverrides = struct ISA_VECTOR_OVERRIDES [16]
fffff802`373f3350 ACPI!gpnsNameSpaceOverrideRoot = 0x00000000`00000000
fffff802`373f2a58 ACPI!GpeSavedWakeStatus = 0xffff8e87`af5f6f50 ""
fffff802`373f1610 ACPI!LinkNodeListHead = struct _LIST_ENTRY [ 0xfffff802`373f1610 - 0xfffff802`373f1610 ]
fffff802`373f18a0 ACPI!ACPIDeviceWorkQueue = struct _LIST_ENTRY [ 0xfffff802`373f18a0 - 0xfffff802`373f18a0 ]
fffff802`373de900 ACPI!AcpiBusFilterIrpDispatchSucceedCreate = struct IRP_DISPATCH_TABLE
fffff802`373f0640 ACPI!atCondRefOf = struct _amlterm
fffff802`373f1aec ACPI!AcpiProcessorContainerCount = 0
fffff802`373f14a8 ACPI!atDataObj = struct _amlterm
fffff802`373dea80 ACPI!AcpiSleepButtonIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`373df500 ACPI!GUID_DEVICE_FAN = {05ECD13D-81DA-4A2A-8A4C-524F23DD4DC9}
fffff802`373dfef8 ACPI!GUID_PNP_LOCATION_INTERFACE = {70211B0E-0AFB-47DB-AFC1-410BF842497A}
fffff802`373e0838 ACPI!GUID_GLOBAL_USER_PRESENCE = {786E8A1D-B427-4344-9207-09E70BDCBEA9}
fffff802`373defc0 ACPI!AcpiDevicePowerProcessPhase1Table2 = <function> *[6]
fffff802`373def30 ACPI!AcpiDevicePowerProcessPhase2Table1 = <function> *[6]
fffff802`373dedb0 ACPI!AcpiDevicePowerProcessPhase5Table6 = <function> *[6]
fffff802`373f0288 ACPI!atOpRegion = struct _amlterm
fffff802`373e0028 ACPI!ACPI_ETW_EVENT_TEMPERATURE_CHANGE = struct _EVENT_DESCRIPTOR
fffff802`373ef2e8 ACPI!AcpiDevicePowerProcessPhase1Dispatch = <function> **[7]
fffff802`373e1a48 ACPI!OSIAML = unsigned char [3] "???"
fffff802`373f2a18 ACPI!pfnWppGetVersion = 0xfffff802`3457cb90
fffff802`373f0528 ACPI!atSleep = struct _amlterm
fffff802`373e3398 ACPI!WPP_f8b46c04efd331199758d8633b6695d8_Traceguids = struct _GUID [1]
fffff802`373f2511 ACPI!AcpiSecureKernelRunning = 0x00 ''
fffff802`373df4e0 ACPI!WPP_3f41a75ade0b3c322354d339e206c4ba_Traceguids = struct _GUID [1]
fffff802`373f2e00 ACPI!RequestDependencyLookAsideList = struct _NPAGED_LOOKASIDE_LIST
fffff802`373e2fd8 ACPI!WPP_1dc68f7f758f380608aba8924886457d_Traceguids = struct _GUID [1]
fffff802`373f32a8 ACPI!gECDTContext = 0x00000000`00000000
fffff802`373e0278 ACPI!GUID_EM_RULE_AMLI_ALLOW_INVALID_RECLAIM_MEMORY_MAP_ON_LOAD = {1098C26E-851A-48F8-8CDE-954C17BCB184}
fffff802`373de890 ACPI!AcpiRawDeviceIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`373e2918 ACPI!ACPI_PLD_INTERFACE_INSTANCE_GUID_BUFFER_GUID = {1FACE9DB-2530-4248-8EE3-51053AEF47C2}
fffff802`373e0898 ACPI!GUID_LOW_POWER_EPOCH = {E1233993-EAA4-470F-9DE7-A351C1B6FB71}
fffff802`373f3208 ACPI!PciRoutingInterfaceCount = 0n1
fffff802`373e0118 ACPI!WPP_93e06651ed773e0c6f8a5613c80b6645_Traceguids = struct _GUID [1]
fffff802`373e0218 ACPI!GUID_EM_RULE_AMLI_ALLOW_INVALID_RECLAIM_MEMORY_MAP_ON_EVAL = {14FA4A80-6397-4A1F-B0AE-2B211AC898E4}
fffff802`373f1a80 ACPI!AcpiAmliPreDefinedRootAcpiObjects = struct _NSObjRef *[5]
fffff802`373f2758 ACPI!HotPatchSpareGlobal5 = 0x00000000`00000000
fffff802`373df5f0 ACPI!WPP_3a81a75478543d9133d658d0ebd9234d_Traceguids = struct _GUID [1]
fffff802`373ef7c8 ACPI!atLNot = struct _amlterm
fffff802`373f2ae8 ACPI!AcpiBootProcessorCount = 8
fffff802`373f1fb0 ACPI!AcpiFanList = struct _LIST_ENTRY [ 0xfffff802`373f1fb0 - 0xfffff802`373f1fb0 ]
fffff802`373f2d80 ACPI!ObjectDataLookAsideList = struct _NPAGED_LOOKASIDE_LIST
fffff802`373dd000 ACPI!ACPIInterfaceTable2 = struct ACPI_INTERFACE_STANDARD2
fffff802`373f1fa0 ACPI!AcpiFanLock = 0
fffff802`373f2610 ACPI!AcpiDiagThermalTelemetryEnabled = 0x00 ''
fffff802`373dd1f0 ACPI!ACPIInterfaceTable = struct _ACPI_INTERFACE_STANDARD
fffff802`373e0808 ACPI!GUID_EM_RULE_ACPI_DISABLE_S2 = {4AA37704-2809-4574-B73C-6CB649822C5C}
fffff802`373f00f8 ACPI!AcpiInformation = 0xfffff802`373f3210
fffff802`373e2938 ACPI!ACPI_PLD_JOINT_BUFFER_GUID = {F01CFC40-3C75-4523-9E44-215CB154BDA6}
fffff802`373f1520 ACPI!IrqArbInterruptLimit = 0x800
fffff802`373e0410 ACPI!WPP_4db1834495f43b1f112ef69394eefce4_Traceguids = struct _GUID [1]
fffff802`373f2120 ACPI!AcpiPowerBlockedOnPhase3List = struct _LIST_ENTRY [ 0xfffff802`373f2120 - 0xfffff802`373f2120 ]
fffff802`373f1560 ACPI!ProcessorGroupListHead = struct _LIST_ENTRY [ 0xffffe38c`2cf92590 - 0xffffe38c`2cf92590 ]
fffff802`373f2b68 ACPI!InterruptRouting = 0xffff8e87`b1af96a0
fffff802`373e3e70 ACPI!WPP_ec78af13b68e37cf6b2ef574fd633333_Traceguids = struct _GUID [1]
fffff802`3742a000 ACPI!ACPIDispatchInternalDevicePnpTable = <function> *[27]
fffff802`373f2180 ACPI!AcpiPowerPhase5List = struct _LIST_ENTRY [ 0xffff8e87`b99b38a0 - 0xffff8e87`b99b38a0 ]
fffff802`373f2330 ACPI!AcpiRegistryPath = "\Registry\Machine\System\CurrentControlSet\Services\ACPI"
fffff802`373f2bd0 ACPI!ACPINamespaceLock = 0n0
fffff802`373e2190 ACPI!HexDigit = unsigned char [17] "0123456789ABCDEF"
fffff802`373f24c0 ACPI!WPP_MAIN_CB = union WPP_PROJECT_CONTROL_BLOCK [1]
fffff802`373efde8 ACPI!atDecrement = struct _amlterm
fffff802`373f2170 ACPI!AcpiPowerPhase4List = struct _LIST_ENTRY [ 0xfffff802`373f2170 - 0xfffff802`373f2170 ]
fffff802`373e2f28 ACPI!GUID_BUS_TYPE_ISAPNP = {E676F854-D87D-11D0-92B2-00A0C9055FC5}
fffff802`373e0048 ACPI!ACPI_ETW_EVENT_TRIP_POINT_NOTIFICATION = struct _EVENT_DESCRIPTOR
fffff802`373efbf0 ACPI!atXOr = struct _amlterm
fffff802`373f2afc ACPI!AcpiTableLoadDelta = 0n0
fffff802`373f2420 ACPI!AcpiBuildDelayedDependencyList = struct _LIST_ENTRY [ 0xfffff802`373f2420 - 0xfffff802`373f2420 ]
fffff802`373deea0 ACPI!AcpiDevicePowerProcessPhase5Table1 = <function> *[6]
fffff802`373f2b40 ACPI!gdwCtxtBlkSize = 0x800
fffff802`373f3324 ACPI!AcpiPccSubspaceCount = 0
fffff802`373f2a80 ACPI!GpePending = 0xffff8e87`af5f6f10 ""
fffff802`373efe58 ACPI!atSubtract = struct _amlterm
fffff802`373e2868 ACPI!ACPI_ETW_EVENT_THERMAL_ZONE_RUNDOWN = struct _EVENT_DESCRIPTOR
fffff802`373f1ac0 ACPI!AcpiAmliPreDefinedRootNativeHandles = void *[5]
fffff802`373f2110 ACPI!AcpiPowerBlockedOnDependencyList = struct _LIST_ENTRY [ 0xfffff802`373f2110 - 0xfffff802`373f2110 ]
fffff802`373e0650 ACPI!GUID_PNP_EXTENDED_ADDRESS_INTERFACE = {B8E992EC-A797-4DC4-8846-84D041707446}
fffff802`373f26c8 ACPI!AcpiGetLock = 0
fffff802`373ef8a8 ACPI!atObjType = struct _amlterm
fffff802`373f2140 ACPI!AcpiPowerPhase1List = struct _LIST_ENTRY [ 0xfffff802`373f2140 - 0xfffff802`373f2140 ]
fffff802`373f13f8 ACPI!AcpiRootFeaturesSupported = struct _SB_OSC_SUPPORT_FIELD
fffff802`373f2ab0 ACPI!gAMLIInitFlags = 0
fffff802`373f2130 ACPI!AcpiPowerPhase0List = struct _LIST_ENTRY [ 0xfffff802`373f2130 - 0xfffff802`373f2130 ]
fffff802`373e30c0 ACPI!HOT_REPLACE_DSM_GUID = {6831B330-1AA3-402C-BCF3-064877A5A43A}
fffff802`373f26f8 ACPI!HotPatchSpareGlobal2 = 0x00000000`00000000
fffff802`373e0228 ACPI!ACPI_ETW_EVENT_AML_METHOD_TRACE = struct _EVENT_DESCRIPTOR
fffff802`373e06e0 ACPI!GUID_NULL = {00000000-0000-0000-0000-000000000000}
fffff802`373df1c0 ACPI!ResourceHubDriver = "\Registry\Machine\System\CurrentControlSet\Services\acpiex"
fffff802`373de8d0 ACPI!ACPIDispatchBusPowerTable = <function> *[5]
fffff802`373f31b8 ACPI!ghFatal = struct _evhandle
fffff802`373e2928 ACPI!ACPI_ETW_EVENT_DEVICE_RESET = struct _EVENT_DESCRIPTOR
fffff802`373f2160 ACPI!AcpiPowerPhase3List = struct _LIST_ENTRY [ 0xfffff802`373f2160 - 0xfffff802`373f2160 ]
fffff802`373ded60 ACPI!ACPIDepPdoPowerTable = <function> *[5]
fffff802`373e0018 ACPI!GUID_DEVICE_THERMAL_ZONE = {4AFA3D51-74A7-11D0-BE5E-00A0C9062857}
fffff802`373f19f0 ACPI!AcpiThermalClientList = struct _LIST_ENTRY [ 0xfffff802`373f19f0 - 0xfffff802`373f19f0 ]
fffff802`373dd640 ACPI!AcpiBuildRunMethodDispatch = <function> *[10]
fffff802`373dff28 ACPI!GUID_SDEV_IDENTIFIER_INTERFACE = {49D67AF8-916C-4EE8-9DF1-889F17D21E91}
fffff802`373df610 ACPI!WPP_4412200d597a3c4f07f109e3f649cee5_Traceguids = struct _GUID [1]
fffff802`373ded38 ACPI!ACPIDispatchDockPowerTable = <function> *[5]
fffff802`373efd40 ACPI!atShiftLeft = struct _amlterm
fffff802`373f2150 ACPI!AcpiPowerPhase2List = struct _LIST_ENTRY [ 0xfffff802`373f2150 - 0xfffff802`373f2150 ]
fffff802`373f3338 ACPI!ACPIWmiLoggerHandle = 0
fffff802`373dd0f0 ACPI!AcpiPdoIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`373f2640 ACPI!AcpiDiagThermalPollingTimer = struct _KTIMER2
fffff802`373e0828 ACPI!GUID_EM_RULE_ACPI_SLP_WORKAROUND = {DC6A4DC4-ADCA-4D9B-A02B-4B515F742D0C}
fffff802`373dd4e0 ACPI!ResourceHubDeviceName = "\Device\RESOURCE_HUB"
fffff802`373efd78 ACPI!atDivide = struct _amlterm
fffff802`373f05d0 ACPI!atLoadTable = struct _amlterm
fffff802`373dd4a0 ACPI!AcpiFdoIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`373f13fc ACPI!AcpiRootWheaFeaturesSupported = struct _SB_OSC_WHEA_SUPPORT_FIELD
fffff802`3742a0e0 ACPI!ACPIDispatchBusFilterPnpTable = <function> *[27]
fffff802`373f3200 ACPI!gpNativeNameSpaceOwner = 0xffff8e87`b0f10900
fffff802`373f0330 ACPI!atDebugObj = struct _amlterm
fffff802`373f00c0 ACPI!atAlias = struct _amlterm
fffff802`373f3310 ACPI!g_wil_details_recordFeatureUsage = 0x00000000`00000000
fffff802`373f32d4 ACPI!GpeVectorFree = 0x00 ''
fffff802`373f18e4 ACPI!AmliWatchdogAction = 0
fffff802`373f2a38 ACPI!pfnWppQueryTraceInformation = 0xfffff802`3496c400
fffff802`373de980 ACPI!ACPIDispatchFilterPowerTable = <function> *[5]
fffff802`373e3180 ACPI!WPP_4ea83bc4352b3df9b35783bbf858603c_Traceguids = struct _GUID [1]
fffff802`373def60 ACPI!AcpiDevicePowerProcessPhase1Table4 = <function> *[6]
fffff802`373f2390 ACPI!AcpiButtonList = struct _LIST_ENTRY [ 0xffff8e87`af6ebbc8 - 0xffff8e87`af6ebbc8 ]
fffff802`373f27f0 ACPI!gdwcCTObjs = 0n1
fffff802`373f2348 ACPI!RootDeviceExtension = 0xffff8e87`af47e0d0
fffff802`373f04f0 ACPI!atAcquire = struct _amlterm
fffff802`373dffb8 ACPI!GUID_THERMAL_COOLING_INTERFACE = {ECBE47A8-C498-4BB9-BD70-E867E0940D22}
fffff802`373f1fc0 ACPI!ExternalTranslatorInterfaceLock = struct _ERESOURCE
fffff802`373e0758 ACPI!GUID_EM_RULE_ACPI_EARLY_EDGE_ENABLED = {CD3FB4D7-5128-41B9-A5E8-920A18B384C3}
fffff802`373f2368 ACPI!AcpiReadCmosRoutine = 0xfffff802`346d01b0
fffff802`373f1570 ACPI!ProcessorGroupByNumber = 0xffffe38c`2ca9b510
fffff802`373dd5d0 ACPI!AcpiBuildDelayedDependencyDispatch = <function> *[5]
fffff802`373f34a8 ACPI!ProcessorVectorRowBias = 0
fffff802`373e05f8 ACPI!ACPI_ETW_EVENT_AMLI_ERROR = struct _EVENT_DESCRIPTOR
fffff802`373f2470 ACPI!AcpiBuildSynchronizationList = struct _LIST_ENTRY [ 0xfffff802`373f2470 - 0xfffff802`373f2470 ]
fffff802`373f1ae8 ACPI!AcpiInterruptCombiningSupported = 0x00 ''
fffff802`373dec40 ACPI!AcpiFixedButtonIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`373ef720 ACPI!atLL = struct _amlterm
fffff802`373e0848 ACPI!GUID_CONSOLE_DISPLAY_STATE = {6FE69556-704A-47A0-8F24-C28D936FDA47}
fffff802`373ef608 ACPI!atToString = struct _amlterm
fffff802`373f0170 ACPI!atThermalZone = struct _amlterm
fffff802`373f2aa0 ACPI!GpeCurEnable = 0xffff8e87`af5f6eb0 ""
fffff802`373dfa18 ACPI!GUID_EM_RULE_ACPI_IRQ_DISTRIBUTION_STACK_UP = {F9C05347-E9C2-44C8-9036-A56F03B864BF}
fffff802`373f2370 ACPI!AcpiWriteCmosRoutine = 0xfffff802`346d01e0
fffff802`373e07b8 ACPI!GUID_EM_RULE_ACPI_FORCE_RUN_REG_METHOD_ON_PCI_DEVICE = {0B95EE68-3937-429D-BDF5-A0752D366D4D}
fffff802`373f2720 ACPI!HotPatchSpareGlobal3 = 0x00000000`00000000
fffff802`373f2028 ACPI!ExternalTranslatorDriverObjectReference = 0xffff8e87`af6eb6f0 Driver "\Driver\ACPI"
fffff802`373e2908 ACPI!ACPI_PLD_INTERFACE_CLASS_BUFFER_GUID = {1FACEC76-96A8-4D9E-846E-3A6D687C32FC}
fffff802`373df120 ACPI!ACPIDispatchSurpriseRemovedBusPowerTable = <function> *[5]
fffff802`373f2450 ACPI!AcpiBuildRunMethodList = struct _LIST_ENTRY [ 0xfffff802`373f2450 - 0xfffff802`373f2450 ]
fffff802`373df470 ACPI!GUID_INT_ROUTE_INTERFACE_STANDARD = {70941BF4-0073-11D1-A09E-00C04FC340B1}
fffff802`373f26d0 ACPI!AcpiIgnorePnpVetoesInPLDR = 0x01 ''
fffff802`373f32e8 ACPI!ghValidateTable = struct _evhandle
fffff802`373e1bf8 ACPI!GUID_BUS_TYPE_ACPI = {D7B46895-001A-4942-891F-A7D46610A843}
fffff802`373e1a60 ACPI!EMCA_DSM_UUID = {663E35AF-CC10-41A4-88EA-5470AF055295}
fffff802`373f23a0 ACPI!AcpiUnresolvedEjectList = struct _LIST_ENTRY [ 0xfffff802`373f23a0 - 0xfffff802`373f23a0 ]
fffff802`373ded88 ACPI!ACPIDepFilterPowerTable = <function> *[5]
fffff802`373e33a8 ACPI!WPP_7b0d4207db2a3169cd3bb4e871adee9d_Traceguids = struct _GUID [1]
fffff802`373e2070 ACPI!THERMAL_ZONE_GUID = {A1BC18C0-A7C8-11D1-BF3C-00A0C9062910}
fffff802`373f1880 ACPI!ACPIWorkerQueueSpinLock = 0
fffff802`373e2f58 ACPI!DEVPKEY_Spare_Processor_Apic_Id = struct _DEVPROPKEY
fffff802`373e3388 ACPI!SB_OSC_UUID = {0811B06E-4A27-44F9-8D60-3CBBC22E7B48}
fffff802`373e2f70 ACPI!DEVPKEY_Spare_Device = struct _DEVPROPKEY
fffff802`373f2b28 ACPI!gOverrideFlags = 0
fffff802`373f1f88 ACPI!GpeTable = 0xffff8e87`af5f6e90 ""
fffff802`373f0990 ACPI!gAmliTriageBlock = struct _AMLI_TRIAGE_BLOCK
fffff802`373df2a0 ACPI!WPP_ae57f2233dfb3a91da68ac54a8788e80_Traceguids = struct _GUID [1]
fffff802`373e0238 ACPI!ACPI_ETW_EVENT_FREQUENT_AML_METHOD = struct _EVENT_DESCRIPTOR
fffff802`373dece8 ACPI!ACPIDispatchButtonPowerTable = <function> *[5]
fffff802`373f1938 ACPI!PciPmeInterface = 0xffff8e87`b1af96f0
fffff802`373f1f70 ACPI!AcpiIgnoreResourceMapValidationList = struct _LIST_ENTRY [ 0xfffff802`373f1f70 - 0xfffff802`373f1f70 ]
fffff802`373f31e8 ACPI!gmutSleep = struct _mutex
fffff802`373de9d0 ACPI!ACPIDispatchFdoPowerTable = <function> *[5]
fffff802`373f1940 ACPI!PciPmeInterfaceInstantiated = 0x01 ''
fffff802`373dee40 ACPI!AcpiDevicePowerProcessPhase5Table3 = <function> *[6]
fffff802`373f1400 ACPI!atNameObj = struct _amlterm
fffff802`373efcd0 ACPI!atAnd = struct _amlterm
fffff802`373e16c0 ACPI!PEP_NOTIFICATIONS_DSM_UUID = {11E00D56-CE64-47CE-837B-1F898F9AA461}
fffff802`373f2a20 ACPI!pfnEtwRegisterClassicProvider = 0xfffff802`34944af0
fffff802`373f02c0 ACPI!atTimer = struct _amlterm
fffff802`373efbb8 ACPI!atNot = struct _amlterm
fffff802`373f03a0 ACPI!atToBCD = struct _amlterm
fffff802`373ef480 ACPI!atNOP = struct _amlterm
fffff802`373efc28 ACPI!atNOr = struct _amlterm
fffff802`373df450 ACPI!WPP_ThisDir_CTLGUID_AcpiTraceGuid = {03906A40-CCE8-447F-83F4-E2346215DB84}
fffff802`373f2b60 ACPI!gpnsNativeNameSpaceOverrideRoot = 0xffff8e87`b0f10950
fffff802`373f1a60 ACPI!AcpiShutdownWorkItem = struct _WORK_QUEUE_ITEM
fffff802`373f3480 ACPI!fRunningMethod = 0x00 ''
fffff802`373e1ab8 ACPI!DEVPKEY_Device_PhysicalDeviceLocationPanel = struct _DEVPROPKEY
fffff802`373e2888 ACPI!ACPI_ETW_EVENT_ACPI_OVERRIDE = struct _EVENT_DESCRIPTOR
fffff802`373f17a0 ACPI!AmliNativePreDefinedRootObjects = struct _NSObj *[5]
fffff802`373f1620 ACPI!IrqLibArbiterInstance = struct _ARBITER_INSTANCE
fffff802`373f2060 ACPI!AcpiPowerLeavingS0 = 0x00 ''
fffff802`373f2b30 ACPI!MemoryInfo = 0xffff8e87`af47402c
fffff802`373f21f0 ACPI!AcpiDeviceFirmwareLockGlobalLock = 0
fffff802`373ef800 ACPI!atLOr = struct _amlterm
fffff802`373f2d00 ACPI!DeviceExtensionLookAsideList = struct _NPAGED_LOOKASIDE_LIST
fffff802`373efaa0 ACPI!atMod = struct _amlterm
fffff802`373ef348 ACPI!ACPISymbolicLinkName = "\DosDevices\ACPI_ROOT_OBJECT"
fffff802`373ef3a0 ACPI!atBreakPoint = struct _amlterm
fffff802`373efd08 ACPI!atShiftRight = struct _amlterm
fffff802`373e28f8 ACPI!ACPI_PLD_INTERFACE_INSTANCE_UNICODE_BUFFER_GUID = {1FACE3F6-1A60-4686-9833-EC8402D43B04}
fffff802`373f2378 ACPI!CmosDeviceType = CmosTypeStdPCAT (0n0)
fffff802`373e1a80 ACPI!SB_OSC_VSM_UUID = {CEF5545F-ECEC-403F-9702-C3E1E68119D2}
fffff802`373e0730 ACPI!DEVPKEY_Device_BiosDeviceName = struct _DEVPROPKEY
fffff802`373dfee8 ACPI!GUID_D3COLD_SUPPORT_INTERFACE = {B38290E5-3CD0-4F9D-9937-F5FE2B44D47A}
fffff802`373e2978 ACPI!ACPI_PLD_INTERFACE_INSTANCE_ANSI_BUFFER_GUID = {1FACEA4B-DA66-484C-BA5B-5127E05F95B2}
fffff802`373f1550 ACPI!IrqArbGlobalStackingIrq = 0
fffff802`373f2a48 ACPI!GpeSpecialHandler = 0xffff8e87`af5f6f00 ""
fffff802`373f2af8 ACPI!AcpiNotifyOsShutdownEnabled = 0x00 ''
fffff802`373e1a70 ACPI!SB_OSC_WHEA_UUID = {ED855E0C-6C90-47BF-A62A-26DE0FC5AD5C}
fffff802`373f18d8 ACPI!ACPIThread = 0xffff8e87`b17fd040
fffff802`373f19d0 ACPI!AcpiThermalUnclaimedConstraintList = struct _LIST_ENTRY [ 0xfffff802`373f19d0 - 0xfffff802`373f19d0 ]
fffff802`373e01c0 ACPI!WPP_095c070a05c4368bad966ca54a81e920_Traceguids = struct _GUID [1]
fffff802`373f2a28 ACPI!pfnEtwUnregister = 0xfffff802`34942390
fffff802`373f2ae0 ACPI!gAcpiHonorBiosPolarities = 0x01 ''
fffff802`373e0148 ACPI!WPP_22c0b63b2f1d30c22e2e761bc8912dea_Traceguids = struct _GUID [1]
fffff802`373f32d8 ACPI!GpeVectorTable = 0x00000000`00000000
fffff802`373dfc38 ACPI!WPP_ad96225728f13e2fff5439e488fbff91_Traceguids = struct _GUID [1]
fffff802`373dee70 ACPI!AcpiDevicePowerProcessPhase5Table2 = <function> *[6]
fffff802`373ef270 ACPI!AcpiDevicePowerProcessPhase5Dispatch = <function> **[9]
fffff802`373f1470 ACPI!atArgObj = struct _amlterm
fffff802`3742aa80 ACPI!ACPIDispatchEcDevicePnpTable = <function> *[27]
fffff802`373dec80 ACPI!AcpiProcessorContainerIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`373f21c0 ACPI!AcpiDevicesWhichMightNeedEnumerationList = struct _LIST_ENTRY [ 0xfffff802`373f21c0 - 0xfffff802`373f21c0 ]
fffff802`373f2350 ACPI!AcpiDeviceTreeLock = 0
fffff802`373f2360 ACPI!AcpiProcessorAsyncStart = 0x00 ''
fffff802`373f0368 ACPI!atUnload = struct _amlterm
fffff802`373e13a0 ACPI!GUID_EM_ACPI_DEVICE_TYPE = {EB1A2D2A-DF53-42D9-A5AA-7B25D0B5712B}
fffff802`373f1bb8 ACPI!NotifyHandlerLock = 0
fffff802`373ef370 ACPI!ACPIThermalGuidList = struct _WMIGUIDREGINFO
fffff802`373f34b8 ACPI!ArbMmConfigRange = 0x00000000`00000000
fffff802`373f0138 ACPI!atIndexField = struct _amlterm
fffff802`373efb80 ACPI!atFindSetLBit = struct _amlterm
fffff802`373f2718 ACPI!HotPatchSpareGlobal1 = 0x00000000`00000000
fffff802`373f2b20 ACPI!SleepTimer = 0xffff8e87`af4a2cb0
fffff802`373f2750 ACPI!HotPatchSpareGlobal10 = 0x00000000`00000000
fffff802`373f2768 ACPI!HotPatchSpareGlobal11 = 0x00000000`00000000
fffff802`373f2710 ACPI!HotPatchSpareGlobal12 = 0x00000000`00000000
fffff802`373f2748 ACPI!HotPatchSpareGlobal13 = 0x00000000`00000000
fffff802`373f2708 ACPI!HotPatchSpareGlobal14 = 0x00000000`00000000
fffff802`373f2730 ACPI!HotPatchSpareGlobal15 = 0x00000000`00000000
fffff802`373f2760 ACPI!HotPatchSpareGlobal16 = 0x00000000`00000000
fffff802`373f1f68 ACPI!E820Info = 0xffff8e87`af47402c
fffff802`373ef390 ACPI!glistObjOwners = struct _LIST_ENTRY [ 0xffff8e87`b0f10900 - 0xffff8e87`b2a28f38 ]
fffff802`373fc8a8 ACPI!__guard_check_icall_fptr = 0xfffff802`3737c680
fffff802`373ec8b0 ACPI!$xdatasym = 0x01 ''
fffff802`373ee458 ACPI!$xdatasym = 0x01 ''
fffff802`373ee460 ACPI!$xdatasym = 0x01 ''
fffff802`373ee470 ACPI!$xdatasym = 0x01 ''
fffff802`373ee468 ACPI!$xdatasym = 0x01 ''
fffff802`373e31a8 ACPI!WPP_66d879e7691833cab0aaa4978b270939_Traceguids = struct _GUID [1]
fffff802`373dd540 ACPI!CallbackReg = struct _EM_CALLBACK_REGISTRATION [3]
fffff802`373dff78 ACPI!GUID_ARBITER_INTERFACE_STANDARD = {E644F185-8C0E-11D0-BECF-08002BE2092F}
fffff802`373df0e0 ACPI!AcpiPepIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`373e0768 ACPI!GUID_EM_RULE_ACPI_EC_BURST_DEFAULT_OVERRIDE = {2888BDE3-2897-44DB-9E50-513E197CD9A9}
fffff802`373f2a60 ACPI!GpeSavedWakeMask = 0xffff8e87`af5f6f40 ""
fffff802`373f2b18 ACPI!gDeviceLockMutexSupported = 0x01 ''
fffff802`373f2304 ACPI!AcpiRetainDebugDeviceInD0 = 0x01 ''
fffff802`373e07c8 ACPI!GUID_EM_RULE_ACPI_RESCAN_AFTER_INIT_DEPENDENCIES_SATISFIED = {59A4630F-8F16-410F-A7AD-543B29BC72BA}
fffff802`373f2a98 ACPI!GpeWakeEnable = 0xffff8e87`af5f6ee0 ""
fffff802`373dec00 ACPI!AcpiEIOBusIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`373f0f60 ACPI!ArgsNotify = struct _cmdarg [2]
fffff802`373de2f0 ACPI!AcpiInternalDeviceFlagTable = struct INTERNAL_DEVICE_FLAG_TABLE [45]
fffff802`373e01e8 ACPI!WPP_aa0188d95df637fd68421574d89cc32b_Traceguids = struct _GUID [1]
fffff802`373e2878 ACPI!ACPI_ETW_EVENT_DEVICE_COOLING_RUNDOWN = struct _EVENT_DESCRIPTOR
fffff802`373f21d4 ACPI!AcpiPowerCurrentPagingPathTransitions = 0n0
fffff802`373efe90 ACPI!atConcat = struct _amlterm
fffff802`373df2b0 ACPI!WPP_63048e4611d63d39c0d94317710a082a_Traceguids = struct _GUID [1]
fffff802`373f2b58 ACPI!gpRSAccessHead = 0xffff8e87`b18ff460
fffff802`373e1b70 ACPI!AcpiBuildDevicePowerNameLookup = unsigned long [34]
fffff802`373e1390 ACPI!GUID_EM_ACPI_DEVICE_ID_MULTI_STRING_TYPE = {B564CB1C-E06A-430F-804F-C1AEE8DB4BD1}
fffff802`373e2968 ACPI!ACPI_ETW_EVENT_PASSIVE_CONSTRAINT_RUNDOWN = struct _EVENT_DESCRIPTOR
fffff802`373e3ec8 ACPI!GUID_EM_RULE_ACPI_IRQ_ROUTING_STACK_ON_IRQ11 = {B6FDEE3C-D27A-46B6-9A70-78A1314357DA}
fffff802`373f1f80 ACPI!AcpiEmProviderHandle = 0xffffe38c`2cfa0ec0
fffff802`373e06f0 ACPI!ACPI_ETW_EVENT_ACTIVE_CONSTRAINT_CHANGE = struct _EVENT_DESCRIPTOR
fffff802`373e3090 ACPI!DEVPKEY_PciDevice_Label_Id = struct _DEVPROPKEY
fffff802`373e06a8 ACPI!WPP_e371268d4ba533618df9ec56b8c4a796_Traceguids = struct _GUID [1]
fffff802`373f2a40 ACPI!GpeWakeHandler = 0xffff8e87`af5f6ef0 ""
fffff802`373efdb0 ACPI!atMultiply = struct _amlterm
fffff802`373ef008 ACPI!WPP_GLOBAL_Control = 0xfffff802`373f24c0
fffff802`373f34ac ACPI!IrqDisableInterruptSteeringPolicy = 0x00 ''
fffff802`373f02f8 ACPI!atFatal = struct _amlterm
fffff802`373f1900 ACPI!AcpiRecordBlackboxWorkItem = struct _ACPI_BLACKBOX_WORK_ITEM
fffff802`373f1e88 ACPI!gBBNResultCacheLock = 0
fffff802`373f1c28 ACPI!AcpiKsrInProgress = 0x00 ''
fffff802`373e05b0 ACPI!WPP_3f854a48a7fd3e8a088f2c9698da0c76_Traceguids = struct _GUID [1]
fffff802`373e1ad0 ACPI!PCI_ROOT_BUS_OSC_UUID = {33DB4D5B-1FF7-401C-9657-7441C03DD766}
fffff802`373f2af0 ACPI!AcpiBootProcessorApicIds = 0xffff8e87`b46a9370
fffff802`373f3198 ACPI!ghCreate = struct _evhandle
fffff802`373de280 ACPI!AcpiIommuBusInterface = struct _IOMMU_BUS_INTERFACE
fffff802`373f3128 ACPI!ghLoadTable = struct _evhandle
fffff802`373f1980 ACPI!HalPortRangeInterface = struct _HAL_PORT_RANGE_INTERFACE
fffff802`373f3168 ACPI!ghGetAcpiTableVersion = struct _evhandle
fffff802`373f0608 ACPI!atCreateField = struct _amlterm
fffff802`373f2f80 ACPI!WakeInterruptLookAsideList = struct _NPAGED_LOOKASIDE_LIST
fffff802`373f2b70 ACPI!ProcessorInstanceCount = 8
fffff802`373f1ba0 ACPI!AcpiOpRegionHandlerList = struct _LIST_ENTRY [ 0xffff8e87`af4e6de0 - 0xffff8e87`b18ff260 ]
fffff802`373f23c0 ACPI!AcpiBuildDpc = struct _KDPC
fffff802`373ef870 ACPI!atQWordField = struct _amlterm
fffff802`373f32e4 ACPI!ACPIWmiTraceEnable = 0
fffff802`373eff70 ACPI!atMethod = struct _amlterm
fffff802`373f04b8 ACPI!atSignal = struct _amlterm
fffff802`373dea00 ACPI!AcpiDockPdoIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`373f206c ACPI!Phase3PendingOnWorkCount = 0n0
fffff802`3742a2a0 ACPI!ACPIDispatchPdoPnpTable = <function> *[27]
fffff802`373e274a ACPI!_TlgAcpiTraceHandleProv_Meta = struct <anonymous-tag>
fffff802`373f0050 ACPI!atScope = struct _amlterm
fffff802`373deac0 ACPI!AcpiLidIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`3742a380 ACPI!ACPIDispatchFdoPnpTable = <function> *[27]
fffff802`373fc328 ACPI!HalPrivateDispatchTable = 0xfffff802`34e00590
fffff802`373df600 ACPI!WPP_119e37890ca137f7027eb68f3315a26a_Traceguids = struct _GUID [1]
fffff802`373e0400 ACPI!ACPI_ETW_EVENT_UNEXPECTED_GPE = struct _EVENT_DESCRIPTOR
fffff802`373efa30 ACPI!atSizeOf = struct _amlterm
fffff802`373f2050 ACPI!ExternalTranslatorNotificationEntry = 0x00000000`00000000
fffff802`373ef918 ACPI!atByteField = struct _amlterm
fffff802`373f0e70 ACPI!ArgsOD = struct _cmdarg [2]
fffff802`373e27d9 ACPI!_TraceLoggingMetadataEnd = 0x01 ''
fffff802`373f3318 ACPI!g_wil_details_pfnFeatureLoggingHook = 0x00000000`00000000
fffff802`373f0fb0 ACPI!ArgsID = struct _cmdarg [2]
fffff802`373e3ea8 ACPI!GUID_EM_RULE_ACPI_IRQ_ROUTING_STACK_ON_IRQ10 = {99E16F7C-6E4E-4EBE-A8A8-74CA13774FAF}
fffff802`373f06b0 ACPI!atMutex = struct _amlterm
fffff802`373ef6b0 ACPI!atToDecStr = struct _amlterm
fffff802`373f14e0 ACPI!atString = struct _amlterm
fffff802`373f3158 ACPI!ghCheckOsiString = struct _evhandle
fffff802`373efb48 ACPI!atFindSetRBit = struct _amlterm
fffff802`373f2058 ACPI!AcpiDriverObject = 0xffff8e87`af6eb6f0 Driver "\Driver\ACPI"
fffff802`373f1b60 ACPI!AcpiOpRegionLock = struct _FAST_MUTEX
fffff802`373e29f0 ACPI!WPP_6625d3923c543510b1fa3235c3eeddfe_Traceguids = struct _GUID [1]
fffff802`373dd130 ACPI!AcpiDepPdoIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`373f2a78 ACPI!GpeRunMethod = 0xffff8e87`af5f6f20 ""
fffff802`373e2838 ACPI!ACPI_ETW_EVENT_ACTIVE_CONSTRAINT_RUNDOWN = struct _EVENT_DESCRIPTOR
fffff802`373f24b0 ACPI!AcpiArbiterInstanceCount = 0n0
fffff802`373f0218 ACPI!atDevice = struct _amlterm
fffff802`373f20a0 ACPI!AcpiPowerDpc = struct _KDPC
fffff802`373f0c60 ACPI!DbgCmds = struct _dbgcmd [14]
fffff802`373e0420 ACPI!GUID_ACPI_PORT_RANGES_INTERFACE_STANDARD = {F14F609B-CBBD-4957-A674-BC00213F1C97}
fffff802`373dffe8 ACPI!DEVPKEY_Device_PhysicalDeviceLocationSpatial = struct _DEVPROPKEY
fffff802`373f2080 ACPI!AcpiPauseInterpreterEntry = struct _AMLI_PAUSE_INTERPRETER_CALLBACK_ENTRY
fffff802`373e0288 ACPI!WPP_46b15d9ca9c23528b9d260ad71f05863_Traceguids = struct _GUID [1]
fffff802`373f3100 ACPI!AcpiRootWheaFeaturesControl = struct _SB_OSC_WHEA_CONTROL_FIELD
fffff802`373f1928 ACPI!AcpiWatchdogLock = 0
fffff802`373f2be8 ACPI!gmutOwnerList = struct _mutex
fffff802`373e2ea8 ACPI!GUID_EM_RULE_ACPI_DEVICE_ENABLE_D3COLD_ON_SURPRISE_REMOVAL = {2FBC3B66-A7AA-4B26-8B00-2734907189EB}
fffff802`373f24a0 ACPI!AcpiBuildDeviceList = struct _LIST_ENTRY [ 0xfffff802`373f24a0 - 0xfffff802`373f24a0 ]
fffff802`373f34b0 ACPI!PciExclusionMask = 0
fffff802`373f349c ACPI!dwCmdArg = 0
fffff802`373ded10 ACPI!ACPIDispatchLidPowerTable = <function> *[5]
fffff802`373ef160 ACPI!AcpiBuildDeviceDispatch = <function> *[34]
fffff802`373f1f98 ACPI!GpeTableLock = 0
fffff802`373f1524 ACPI!IrqMachinePolicy = 1
fffff802`373f1c40 ACPI!gPreAllocPciPool = struct _PRE_ALLOC_PCI_POOL [4]
fffff802`3742a8c0 ACPI!ACPISurpriseRemovedFilterPnPTable = <function> *[27]
fffff802`373f2490 ACPI!AcpiBuildDpcFlags = 0
fffff802`373f0448 ACPI!atReset = struct _amlterm
fffff802`373e28d8 ACPI!ACPI_PLD_SPATIAL_BUFFER_GUID = {59AF1A1F-ABA4-4BB8-81EF-55938E9BC53A}
fffff802`373dd0a0 ACPI!D3Interface = struct _D3COLD_SUPPORT_INTERFACE
fffff802`373f17e0 ACPI!RunningContextListHead = struct _LIST_ENTRY [ 0xffff8e87`c3359198 - 0xffff8e87`c3359198 ]
fffff802`373f2494 ACPI!AcpiBuildFixedButtonEnumerated = 0x01 ''
fffff802`373e1b50 ACPI!PciConfigDisallowedRanges = unsigned short [4][2]
fffff802`3742a9a0 ACPI!ACPIDispatchSurpriseRemovedBusPnpTable = <function> *[27]
fffff802`373e0700 ACPI!ACPI_ETW_EVENT_ACTIVE_COOLING_DEVICE_POWER = struct _EVENT_DESCRIPTOR
fffff802`373f21d0 ACPI!AcpiPowerDpcFlags = 3
fffff802`37431000 ACPI!__guard_fids_table = void *[]
fffff802`373ef358 ACPI!gAcpiTriageInfo = struct _ACPI_TRIAGE_INFO
fffff802`373e2848 ACPI!GUID_IPMI_WMI = {4116F60B-25B3-4662-B732-99A6111EDC0B}
fffff802`373dd6d0 ACPI!_load_config_used = struct _IMAGE_LOAD_CONFIG_DIRECTORY64
fffff802`373f1c29 ACPI!AcpiKsrUseFallback = 0x00 ''
fffff802`373f2bd8 ACPI!gmutHeap = struct _mutex
fffff802`373e3e50 ACPI!WPP_796d610f2a6632692e9ca482f2e5278e_Traceguids = struct _GUID [1]
fffff802`373f0ec0 ACPI!ArgsOW = struct _cmdarg [2]
fffff802`373f2aa8 ACPI!GpeHandlerRegistered = 0xffff8e87`af5f6e90 ""
fffff802`373e2858 ACPI!ACPI_ETW_EVENT_DEVICE_PASSIVE_COOLING = struct _EVENT_DESCRIPTOR
fffff802`373f1000 ACPI!ArgsIW = struct _cmdarg [2]
fffff802`373ef3d8 ACPI!atOSI = struct _amlterm
fffff802`373dd1b0 ACPI!AcpiBusFilterIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`373f1bb0 ACPI!AcpiRegisteredOpRegionMask = 0x3a4
fffff802`373f1ed8 ACPI!AcpiFatalOutstanding = 0x00 ''
fffff802`373dff48 ACPI!GUID_PCI_BUS_INTERFACE_STANDARD = {496B8281-6F25-11D0-BEAF-08002BE2092F}
fffff802`373f31f8 ACPI!gpheapGlobal = 0xffff8e87`b0f10000
fffff802`373f18e0 ACPI!AmliWatchdogEnabled = 0x01 ''
fffff802`373dd250 ACPI!AcpiDepFilterIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`373e0788 ACPI!GUID_EM_RULE_ACPI_PLATFORM_CHECK_IGNORE_FIXED_BUTTON = {3A490918-ABE6-4D8A-BD4A-350222A9E27E}
fffff802`373f1f62 ACPI!AcpiGpeWorkDone = 0x00 ''
fffff802`373ef678 ACPI!atToHexStr = struct _amlterm
fffff802`373f1800 ACPI!AmliGlobalPreDefinedRootObjects = struct _NSObj *[5]
fffff802`373e1ae0 ACPI!THRM_EXTENSIONS_DSM_UUID = {14D399CD-7A27-4B18-8FB4-7CB7B9F4E500}
fffff802`373e0038 ACPI!ACPI_ETW_EVENT_TEMPERATURE_NOTIFICATION = struct _EVENT_DESCRIPTOR
fffff802`373dfa08 ACPI!GUID_EM_RULE_ACPI_IRQ_DISTRIBUTION_SPREAD_OUT = {17D45795-962F-42E4-83C1-94C56280C8B3}
fffff802`373e0608 ACPI!GUID_ACPI_CMOS_INTERFACE_STANDARD = {3A8D0384-6505-40CA-BC39-56C15F8C5FED}
fffff802`373f2510 ACPI!AcpiIsBootComplete = 0x01 ''
fffff802`373f18c0 ACPI!ACPITerminateEvent = struct _KEVENT
fffff802`373f2a88 ACPI!GpeHandlerType = 0xffff8e87`af5f6ed0 ""
fffff802`3742a460 ACPI!ACPIDispatchFilterPnpTable = <function> *[27]
fffff802`373de9a8 ACPI!ACPIDispatchSurpriseRemovedFilterPowerTable = <function> *[5]
fffff802`373e00e8 ACPI!WPP_fad942c932903a636e6a214bab40d1dd_Traceguids = struct _GUID [1]
fffff802`373f2b48 ACPI!gpBadIOErrorLogDoneList = 0xffff8e87`af49b720
fffff802`373dfbb0 ACPI!rgzAcpiMultiFunctionAdapterIdentifier = wchar_t [67] "\Registry\Machine\Hardware\Description\System\MultiFunctionAdapter"
fffff802`373e2080 ACPI!DevicePowerStateTranslation = _DEVICE_POWER_STATE [4]
fffff802`373f01a8 ACPI!atPowerRes = struct _amlterm
fffff802`373f3330 ACPI!AcpiNotifyOsShutdownInProgress = 0x00 ''
fffff802`373e2090 ACPI!FirstSetLeftBit = unsigned char [256] ""
fffff802`373fc5e0 ACPI!IoFileObjectType = 0xfffff802`34efc448
fffff802`373f1930 ACPI!AmliWatchdogTimeout = 0x1e
fffff802`373f2b50 ACPI!gdwHighestOSVerQueried = 0xc
fffff802`373f1a58 ACPI!AcpiShutdownNotification = 0xffff8e87`af4a4050
fffff802`373ef410 ACPI!atBreak = struct _amlterm
fffff802`373e2958 ACPI!ACPI_ETW_EVENT_FAN_STATUS_CHANGE = struct _EVENT_DESCRIPTOR
fffff802`373f2410 ACPI!AcpiBuildQueueList = struct _LIST_ENTRY [ 0xfffff802`373f2410 - 0xfffff802`373f2410 ]
fffff802`373f1438 ACPI!atLocalObj = struct _amlterm
fffff802`373f13f4 ACPI!PciRootBusFeaturesSupported = struct _PCI_ROOT_BUS_OSC_SUPPORT_FIELD
fffff802`373f2a90 ACPI!GpeIsLevel = 0xffff8e87`af5f6ec0 ""
fffff802`3742a700 ACPI!ACPIDepPdoPnpTable = <function> *[27]
fffff802`373dff88 ACPI!GUID_PCC_INTERFACE_STANDARD = {3EE8BA63-0F59-4A24-8A45-35808BDD1249}
fffff802`373e00f8 ACPI!WPP_3d35ab1e3a8c30c2a397092d9bf7b300_Traceguids = struct _GUID [1]
fffff802`373f1e90 ACPI!gBBNResultCacheListHead = struct _LIST_ENTRY [ 0xffff8e87`b18f9c60 - 0xffff8e87`b18f9c60 ]
fffff802`373deb80 ACPI!AcpiEmbeddedControllerIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`373f1c30 ACPI!AcpiKsrContext = struct _ACPI_KSR_CONTEXT
fffff802`373ef988 ACPI!atDWordField = struct _amlterm
fffff802`373df4a0 ACPI!GUID_DEVICE_SYS_BUTTON = {4AFA3D53-74A7-11D0-BE5E-00A0C9062857}
fffff802`373f17d8 ACPI!gdwGHeapSpinLock = 0
fffff802`373e3eb8 ACPI!GUID_EM_RULE_ACPI_IRQ_ROUTING_STACK_ON_IRQ9 = {E69C3342-3297-40EC-8849-2977980FE886}
fffff802`373fc7e8 ACPI!InitSafeBootMode = 0xfffff802`34e4c09c
fffff802`373f2100 ACPI!AcpiPowerQueueList = struct _LIST_ENTRY [ 0xfffff802`373f2100 - 0xfffff802`373f2100 ]
fffff802`373f3334 ACPI!AcpiTableUnloadDelta = 0n0
fffff802`373f32e0 ACPI!ACPIWmiTraceGlobalEnable = 0
fffff802`373e2e80 ACPI!DEVPKEY_Device_Numa_Proximity_Domain = struct _DEVPROPKEY
fffff802`373decc0 ACPI!ACPIDispatchInternalDevicePowerTable = <function> *[5]
fffff802`373dffd8 ACPI!GUID_REENUMERATE_SELF_INTERFACE_STANDARD = {2AEB0243-6A6E-486B-82FC-D815F6B97006}
fffff802`373e2948 ACPI!GUID_GED_INTERFACE_STANDARD = {417C51C2-C0ED-4934-B471-6CC232E3B02B}
fffff802`373e07e8 ACPI!GUID_EM_RULE_ACPI_IGNORE_QWORD_LENGTH = {287DE373-C168-4415-B6CD-B8704C95BFEB}
fffff802`373f2618 ACPI!AcpiDiagHandle = 0xffff8e87`b13fa390
fffff802`373ef9c0 ACPI!atMatch = struct _amlterm
fffff802`373df460 ACPI!GUID_PCI_PME_INTERFACE = {AAC7E6AC-BB0B-11D2-B484-00C04F72DE8B}
fffff802`373dff68 ACPI!GUID_BUS_INTERFACE_STANDARD = {496B8280-6F25-11D0-BEAF-08002BE2092F}
fffff802`373e06c8 ACPI!ACPIThermalZoneId = char [17] "ACPI\ThermalZone"
fffff802`373f1540 ACPI!IcListHead = struct _LIST_ENTRY [ 0xffffe38c`2cb86000 - 0xffffe38c`2e0c3000 ]
fffff802`373f2bc0 ACPI!gmutCtxtList = struct _mutex
fffff802`373f1ee0 ACPI!AcpiGpeDpc = struct _KDPC
fffff802`373f3308 ACPI!ACPIEcLastActionTime = {0}
fffff802`373efc60 ACPI!atOr = struct _amlterm
fffff802`373f06f0 ACPI!gAcpiTriageBlock = struct _ACPI_TRIAGE_BLOCK
fffff802`373de040 ACPI!AcpiInternalDeviceTable = struct INTERNAL_DEVICE_TABLE [36]
fffff802`373f1840 ACPI!ACPIWorkItem = struct _WORK_QUEUE_ITEM
fffff802`373e2f88 ACPI!GUID_TARGET_DEVICE_REMOVE_COMPLETE = {CB3A4008-46F0-11D0-B08F-00609713053F}
fffff802`373e278e ACPI!_TlgIrqTraceLogHandleProv_Meta = struct <anonymous-tag>
fffff802`373effa8 ACPI!atVarPackage = struct _amlterm
fffff802`373fc038 ACPI!KdComPortInUse = 0xfffff802`34ef4c58
fffff802`373df490 ACPI!WPP_2bc47f5d635e376f4e7295df6662785e_Traceguids = struct _GUID [1]
fffff802`3742a1c0 ACPI!ACPIDispatchRawDevicePnpTable = <function> *[27]
fffff802`373dfb08 ACPI!WPP_6006670290f3383f41c779ffdcc42ff2_Traceguids = struct _GUID [1]
fffff802`373ef6e8 ACPI!atToBuffer = struct _amlterm
fffff802`373e19e0 ACPI!ProcessorIdtRowPriority = _IRQ_PRIORITY [16]
fffff802`373f2358 ACPI!AcpiGlobalFlags = 1
fffff802`373f1778 ACPI!IrqLibRealInterruptModel = 1
fffff802`373ef950 ACPI!atWordField = struct _amlterm
fffff802`373f13f0 ACPI!PciRootBusFeaturesControlRequest = struct _PCI_ROOT_BUS_OSC_CONTROL_FIELD
fffff802`373f1a20 ACPI!AcpiShutdownInProgressWorkerLock = struct _FAST_MUTEX
fffff802`373f26e0 ACPI!AcpiGetListEntry = struct _LIST_ENTRY [ 0xfffff802`373f26e0 - 0xfffff802`373f26e0 ]
fffff802`373f1878 ACPI!ACPIWorkerBusy = 0x00 ''
fffff802`373e0138 ACPI!WPP_3b815367ceb5375a01194b74e08b1a28_Traceguids = struct _GUID [1]
fffff802`373f2388 ACPI!AcpiButtonLock = 0
fffff802`373efec8 ACPI!atAdd = struct _amlterm
fffff802`373f2070 ACPI!Phase3PendingOffWorkCount = 0n0
fffff802`373eff38 ACPI!atStore = struct _amlterm
fffff802`373f32a0 ACPI!AcpiPowerSavedGpeBitsValid = 0x01 ''
fffff802`373efc98 ACPI!atNAnd = struct _amlterm
fffff802`373e0000 ACPI!DEVPKEY_Device_PhysicalDeviceLocation = struct _DEVPROPKEY
fffff802`373f2790 ACPI!gReadyQueue = struct _ctxtq
fffff802`373dfb98 ACPI!rgzAcpiBiosIdentifier = wchar_t [10] "ACPI BIOS"
fffff802`373dff38 ACPI!GUID_TRANSLATOR_INTERFACE_STANDARD = {6C154A92-AACF-11D0-8D2A-00A0C906B244}
fffff802`373f3328 ACPI!AcpiPccSubspaces = 0x00000000`00000000
fffff802`373f2a50 ACPI!GpeEnable = 0xffff8e87`af5f6ea0 ""
fffff802`373f15a0 ACPI!PciRouteInterfaceLock = struct _ERESOURCE
fffff802`373f26d8 ACPI!AcpiPm1EnableRegisterLock = 0
fffff802`373e3120 ACPI!GUID_ACPI_KSR_CONTEXT = {A9D6BA3A-9929-4D84-BE73-68E0FE516D37}
fffff802`373f32f8 ACPI!IrqPolicyRegistrySpecified = 0x00 ''
fffff802`373ef838 ACPI!atLAnd = struct _amlterm
fffff802`373f2b74 ACPI!IrqArbPciAlternativeRotation = 0x1b ''
fffff802`373df148 ACPI!DeviceResetInterface = struct _DEVICE_RESET_INTERFACE_STANDARD
fffff802`373f2040 ACPI!CurrentExternalTranslationProvider = "\Device\RESOURCE_HUB"
fffff802`373f03d8 ACPI!atFromBCD = struct _amlterm
fffff802`373f2460 ACPI!AcpiBuildSpecialSynchronizationList = struct _LIST_ENTRY [ 0xfffff802`373f2460 - 0xfffff802`373f2460 ]
fffff802`373f30e0 ACPI!PmHalDispatchTable = 0xfffff802`34205860
fffff802`373e0068 ACPI!WPP_18eab87a8b67317afec152b8fbe84dda_Traceguids = struct _GUID [1]
fffff802`373f2064 ACPI!Phase3CurrentOnResourceOrder = 0
fffff802`373ef790 ACPI!atLEq = struct _amlterm
fffff802`373f2340 ACPI!AcpiSupportedSystemStates = 0x62
fffff802`373df4c0 ACPI!GUID_DEVICE_PROCESSOR = {97FADB10-4E33-40AE-359C-8BEF029DBDD0}
fffff802`373f3340 ACPI!g_SimulatorCallbackFuncHandle = 0x00000000`00000000
fffff802`373f2778 ACPI!gpnsNameSpaceRoot = 0xffff8e87`b0f10048
fffff802`373f1350 ACPI!__security_cookie = 0x0000cfd9`b19c2a8d
fffff802`373f2068 ACPI!Phase3CurrentOffResourceOrder = 0xffffffff
fffff802`373e0888 ACPI!GUID_PDC_IDLE_RESILIENCY_ENGAGED = {307BCC77-E09B-43CE-8D97-46756FFB04A7}
fffff802`373e3078 ACPI!DEVPKEY_PciDevice_Label_String = struct _DEVPROPKEY
fffff802`373ef5d0 ACPI!atCopyObject = struct _amlterm
fffff802`373e28b8 ACPI!GUID_MSFT_VENDOR_TYPE = {F3D54460-111F-4A60-B8B0-9C2D2330DD2F}
fffff802`373fc758 ACPI!KdDebuggerEnabled = 0xfffff802`34e32138 ""
fffff802`373f3300 ACPI!AcpipExperienceButtonInstanceID = 0n0
fffff802`373df4d0 ACPI!ACPI_ETW_EVENT_FAN_POWER_STATE_CHANGE = struct _EVENT_DESCRIPTOR
fffff802`373dfe50 ACPI!ACPI_ETW_PROVIDER = {C514638F-7723-485B-BCFC-96565D735D4A}
fffff802`373df480 ACPI!WPP_52f1d9ae2bb33d21e69d5020d30b72bd_Traceguids = struct _GUID [1]
fffff802`373e01d8 ACPI!WPP_b4b4781ea129315cb23d4156eeab8ce7_Traceguids = struct _GUID [1]
fffff802`373efad8 ACPI!atConcatRes = struct _amlterm
fffff802`373f3348 ACPI!gpNameSpaceOverrideOwner = 0x00000000`00000000
fffff802`373e3e60 ACPI!WPP_d83fe99678ff30ab9ed6237ab8d0cc59_Traceguids = struct _GUID [1]
fffff802`373f1c20 ACPI!AcpiKsrCallbackObject = 0x00000000`00000000
fffff802`373e0158 ACPI!WPP_a909ee2b802d35766e487243411108b1_Traceguids = struct _GUID [1]
fffff802`373f3320 ACPI!AcpiLoadSimulatorTable = 0x00 ''
fffff802`373f0088 ACPI!atName = struct _amlterm
fffff802`373e2028 ACPI!AcpipPowerStateHandlerLookup = POWER_STATE_HANDLER_TYPE [7]
fffff802`373f1f60 ACPI!AcpiGpeDpcRunning = 0x00 ''
fffff802`373f3188 ACPI!ghDestroyObj = struct _evhandle
fffff802`373f1f64 ACPI!AMLIMaxCTObjs = 0x26
fffff802`373f1a00 ACPI!AcpiThermalZoneList = struct _LIST_ENTRY [ 0xffff8e87`af475590 - 0xffff8e87`af475590 ]
fffff802`3742a540 ACPI!ACPIDispatchEIOBusPnpTable = <function> *[27]
fffff802`373df180 ACPI!CmosTypeTranslationTable = struct CMOS_TYPE_TRANS_ENTRY [4]
fffff802`373f0f10 ACPI!ArgsO = struct _cmdarg [2]
fffff802`373f1050 ACPI!ArgsI = struct _cmdarg [2]
fffff802`373f1578 ACPI!ProcessorFindIdtEntries = 0xfffff802`37402c10
fffff802`373f2b3c ACPI!gdwGlobalHeapBlkSize = 0x80000
fffff802`373e087c ACPI!Feature_Pldr_Ignore_Vetoes_logged_traits = struct FEATURE_LOGGED_TRAITS
fffff802`373dfe60 ACPI!GUID_EM_RULE_DISABLE_PCC = {0DF3EF3B-2BFC-4B2E-84A7-07ABF2DE3BD1}
fffff802`373f0250 ACPI!atField = struct _amlterm
fffff802`373e28c8 ACPI!ACPI_PLD_CONTAINER_BUFFER_GUID = {C02FA109-6A82-4188-9F66-B190BA62DB49}
fffff802`373f19e0 ACPI!AcpiThermalConstraintLock = 0
fffff802`373df848 ACPI!rgzAcpiRegistryIdentifier = wchar_t [11] "Identifier"
fffff802`373e0128 ACPI!WPP_e31de8e794e03abc169a9744a0587e03_Traceguids = struct _GUID [1]
fffff802`373f2b08 ACPI!gdwcCTObjsMax = 0x26
fffff802`373dfed8 ACPI!GUID_ACPI_INTERFACE_STANDARD2 = {E8695F63-1831-4870-A8CF-9C2F03F9DCB5}
fffff802`373e1a90 ACPI!PCI_ROOT_BUS_DSM_UUID = {E5C937D0-3553-4D7A-9117-EA4D19C3434D}
fffff802`373f1518 ACPI!AcpiMostRecentSleepState = PowerSystemWorking (0n1)
fffff802`373dfec8 ACPI!GUID_ACPI_INTERFACE_STANDARD = {B091A08A-BA97-11D0-BD14-00AA00B7B32A}
fffff802`373f2a10 ACPI!WPPTraceSuite = WppTraceServer08 (0n4)
fffff802`373dff18 ACPI!GUID_IOMMU_BUS_INTERFACE = {1EFEE0B2-D278-4AE4-BDDC-1B34DD648043}
fffff802`373df080 ACPI!AcpiBuildOperationRegionDispatch = <function> *[4]
fffff802`373df4f0 ACPI!GUID_DEVINTERFACE_THERMAL_COOLING = {DBE4373D-3C81-40CB-ACE4-E0E5D05F0C9F}
fffff802`373e07d8 ACPI!GUID_EM_RULE_IGNORE_PCI_SEGMENTS = {A6D6FB66-5E6B-4042-9B2A-3A931BBAD09D}
fffff802`373ef448 ACPI!atReturn = struct _amlterm
fffff802`373efa68 ACPI!atNotify = struct _amlterm
fffff802`373de018 ACPI!PnpLocationInterface = struct _PNP_LOCATION_INTERFACE
fffff802`373f1530 ACPI!AcpiNotifyOsShutdownCritical = 0x01 ''
fffff802`373f31d8 ACPI!SleepQueue = struct _LIST_ENTRY [ 0xfffff802`373f31d8 - 0xfffff802`373f31d8 ]
fffff802`373f2430 ACPI!AcpiBuildOperationRegionList = struct _LIST_ENTRY [ 0xfffff802`373f2430 - 0xfffff802`373f2430 ]
fffff802`373dd290 ACPI!AcpiThermalZoneIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`373f0e20 ACPI!ArgsRunMethod = struct _cmdarg [2]
fffff802`373e2008 ACPI!AcpipPowerDisableReasonLookup = unsigned long [7]
fffff802`373f3000 ACPI!XswContextLookAsideList = struct _NPAGED_LOOKASIDE_LIST
fffff802`373e1360 ACPI!GUID_EM_ACPI_DEVICE_ID_MULTI_STRING_MATCH_CALLBACK = {C31600A9-8AED-442C-8013-8903D6E89BF8}
fffff802`373f3118 ACPI!ghUnloadTable = struct _evhandle
fffff802`373ef758 ACPI!atLG = struct _amlterm
fffff802`373efe20 ACPI!atIncrement = struct _amlterm
fffff802`373f21e0 ACPI!AcpiDeviceFirmwareLockHandlerList = struct _LIST_ENTRY [ 0xffff8e87`af49b780 - 0xffff8e87`af49b780 ]
fffff802`373e01f8 ACPI!GUID_EM_RULE_ACPI_DEVICE_IGNORE_STA_DISABLE = {BFFF4BF6-92AE-4C80-9D54-F9D209924899}
fffff802`373e2e98 ACPI!GUID_EM_RULE_ACPI_DEVICE_FAIL_RESET_ON_OPEN_HANDLES = {B54222CD-5B61-49E6-B8FC-2CFD06260F4F}
fffff802`373dfb70 ACPI!rgzAcpiConfigurationDataIdentifier = wchar_t [19] "Configuration Data"
fffff802`373f2300 ACPI!AcpiSurpriseRemovedIndex = 0
fffff802`373ef120 ACPI!_TlgIrqTraceLogHandleProv = struct _tlgProvider_t
fffff802`373f2728 ACPI!HotPatchSpareGlobal8 = 0x00000000`00000000
fffff802`373f30f8 ACPI!Feature_Pldr_Ignore_Vetoes__private_reporting = struct wil_details_FeatureReportingCache
fffff802`373dd170 ACPI!AcpiProcessorIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`373f2f00 ACPI!NotificationContextLookAsideList = struct _NPAGED_LOOKASIDE_LIST
fffff802`373e1a50 ACPI!SB_OSC_PCC_UUID = {639B2C9F-7091-491F-BB4F-A5982FA1B546}
fffff802`373e28a8 ACPI!ACPI_ETW_EVENT_PASSIVE_CONSTRAINT_CHANGE = struct _EVENT_DESCRIPTOR
fffff802`373e0748 ACPI!GUID_EM_RULE_ACPI_OVERRIDE_PRW_RES_OFF_ON_KSR = {FDF5BD8C-032E-4F91-AC60-CE0DFDEAD51D}
fffff802`373ef4b8 ACPI!atWhile = struct _amlterm
fffff802`373e30d0 ACPI!WPP_79609623c0e33e2afa48dee71fa9caab_Traceguids = struct _GUID [1]
fffff802`373dff98 ACPI!GUID_PARTITION_UNIT_INTERFACE_STANDARD = {52363F5B-D891-429B-8195-AEC5FEF6853C}
fffff802`373e06b8 ACPI!WPP_78661b2d78ff34e38fc1910a80efa3ce_Traceguids = struct _GUID [1]
fffff802`373e32f8 ACPI!INTERRUPT_DSM_GUID = {BAAEC45E-9D1E-40D1-9C56-CA1126D75B17}
fffff802`373dfe10 ACPI!GUID_EM_RULE_AMLI_RETURN_REV1 = {2A331496-B384-40CF-BB33-4307641D00A6}
fffff802`373dfe00 ACPI!GUID_EM_RULE_AMLI_RETURN_REV3 = {7E46DB74-3590-4E97-8113-5D866DDA23C7}
fffff802`373f17d0 ACPI!gAmliMethodCounter = {14435}
fffff802`373f2380 ACPI!FixedButtonDeviceObject = 0x00000000`00000000
fffff802`373e2898 ACPI!ACPI_ETW_EVENT_MEMORY_RESERVED = struct _EVENT_DESCRIPTOR
fffff802`373efb10 ACPI!atDerefOf = struct _amlterm
fffff802`373e2a00 ACPI!AcpiGenericAccessSizeTranslation = unsigned char [5] ""
fffff802`373f2310 ACPI!AcpiProcessorString = struct _STRING "GenuineIntel - Intel64 Family 6 Model 126"
fffff802`373f1f20 ACPI!AcpiGpeTimer = struct _KTIMER
fffff802`373f3138 ACPI!ghQueryDLMSupportHandler = struct _evhandle
fffff802`373f20f0 ACPI!AcpiPowerDelayedQueueList = struct _LIST_ENTRY [ 0xfffff802`373f20f0 - 0xfffff802`373f20f0 ]
fffff802`373ef528 ACPI!atIf = struct _amlterm
fffff802`373dd4f0 ACPI!EntryReg = struct _EM_ENTRY_REGISTRATION [3]
fffff802`373ef8e0 ACPI!atBitField = struct _amlterm
fffff802`373f2e80 ACPI!RequestLookAsideList = struct _NPAGED_LOOKASIDE_LIST
fffff802`373dd060 ACPI!AcpiFilterIrpDispatch = struct IRP_DISPATCH_TABLE
fffff802`373dfdf0 ACPI!GUID_EM_RULE_AMLI_IGNORE_PACKAGE_LENGTH_CHECK = {18FEB373-B259-432F-BCF5-3AB0296F8FC9}
fffff802`373f2320 ACPI!AcpiOverrideAttributes = 0x4810000
fffff802`373f1f61 ACPI!AcpiGpeDpcScheduled = 0x00 ''
fffff802`373f1780 ACPI!IrqLibSciGsiv = 9
fffff802`373effe0 ACPI!atPackage = struct _amlterm
fffff802`373f177c ACPI!IrqLibInterruptModel = 1
fffff802`373f0100 ACPI!atBankField = struct _amlterm
fffff802`373ef000 ACPI!WPP_RECORDER_INITIALIZED = 0xfffff802`373f24c0
fffff802`373e28e8 ACPI!ACPI_ETW_EVENT_FAN_RUNDOWN = struct _EVENT_DESCRIPTOR
fffff802`373e30b0 ACPI!WPP_f0951bc89be93806c5bfad28f4f33887_Traceguids = struct _GUID [1]
fffff802`373f32c0 ACPI!AcpiPccLegacySubspace = 0x00000000`00000000
fffff802`373e16e0 ACPI!AcpiSystemStateTranslation = unsigned long [7]
fffff802`373e0078 ACPI!AcpiProcessorCompatId = char [15] "ACPI\Processor"
fffff802`373f21a0 ACPI!AcpiPowerSynchronizeList = struct _LIST_ENTRY [ 0xfffff802`373f21a0 - 0xfffff802`373f21a0 ]
fffff802`373f1950 ACPI!AcpiPowerWaitWakeInterruptList = struct _LIST_ENTRY [ 0xfffff802`373f1950 - 0xfffff802`373f1950 ]
fffff802`373f01e0 ACPI!atProcessor = struct _amlterm
fffff802`373f0480 ACPI!atWait = struct _amlterm
fffff802`373e2f48 ACPI!GUID_DEVICE_APPLICATIONLAUNCH_BUTTON = {629758EE-986E-4D9E-8E47-DE27F8AB054D}
fffff802`373ddff0 ACPI!apszDefinedRootObjs = char *[5]
fffff802`373f2738 ACPI!HotPatchSpareGlobal9 = 0x00000000`00000000
fffff802`373f2a30 ACPI!pfnWppTraceMessage = 0xfffff802`344aa980
fffff802`373e2fd0 ACPI!ACPIEcWatchdogTimeout = {-50000000}
fffff802`373f1b00 ACPI!AcpiProcessorContainerRootList = struct _LIST_ENTRY [ 0xfffff802`373f1b00 - 0xfffff802`373f1b00 ]
fffff802`373f3178 ACPI!ghMapTable = struct _evhandle
fffff802`373f2b75 ACPI!IrqInterruptSteeringEnabled = 0x01 ''
fffff802`373f3210 ACPI!gAcpiInformation = struct _ACPIInformation
fffff802`373f17c8 ACPI!gAllowInvalidReclaimMemoryMap = 0n0
fffff802`3741d05c ACPI!AcpiArblibIsAliasedRangeAvailable (struct _ARBITER_INSTANCE *, struct _ARBITER_ALLOCATION_STATE *)
fffff802`373c8de8 ACPI!OSNotifyDeviceWakeByGPEEvent (unsigned long, unsigned long, unsigned long)
fffff802`373c6b24 ACPI!ACPIInternalEvaluateOST (struct _DEVICE_EXTENSION *, unsigned long, unsigned long)
fffff802`3741f240 ACPI!AcpiUpdateInterruptProperties (unsigned long, _KINTERRUPT_MODE, _KINTERRUPT_POLARITY)
fffff802`37391e34 ACPI!ParseArg (struct _ctxt *, char, struct _ObjData *, unsigned char *)
fffff802`374039f0 ACPI!PcisuppWriteIntLine (struct _DEVICE_OBJECT *, unsigned char)
fffff802`373856a0 ACPI!ACPIBuildProcessDevicePhasePrw (struct _ACPI_BUILD_REQUEST *)
fffff802`373c3ab0 ACPI!ACPIEcStartDeviceWorker (void *)
fffff802`373baea0 ACPI!WppClassicProviderCallback (struct _GUID *, unsigned char, void *, void *)
fffff802`373cb180 ACPI!AcpiNotifyDeleteDeviceSyncCompletion (void *, long, void *)
fffff802`373bece0 ACPI!ACPICMLidPowerStateCallBack (void *, void *, void *)
fffff802`37409f24 ACPI!TranslateEjectInterface (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3737e828 ACPI!LinkNodepGetFilter (struct _DEVICE_OBJECT *, struct _DEVICE_OBJECT *)
fffff802`373998f0 ACPI!DequeueAndReadyContext (struct _LIST_ENTRY *)
fffff802`37384b80 ACPI!ACPIBuildProcessDevicePhaseCid (struct _ACPI_BUILD_REQUEST *)
fffff802`373d21c0 ACPI!ACPIWakeMarkHiberPhase (void)
fffff802`374133b0 ACPI!ACPIThermalQueryWmiRegInfo (struct _DEVICE_OBJECT *, unsigned long *, struct _UNICODE_STRING *, struct _UNICODE_STRING **, struct _UNICODE_STRING *, struct _DEVICE_OBJECT **)
fffff802`3742b3c4 ACPI!ACPIInitStartACPI (struct _DEVICE_OBJECT *)
fffff802`3739def8 ACPI!ACPIBusAndFilterIrpQueryContainerId (unsigned char **, unsigned int64 *, struct _DEVICE_EXTENSION *)
fffff802`373caab4 ACPI!AcpiConvertObjDataToMethodArguments (unsigned long, struct _ObjData *, struct _ACPI_METHOD_ARGUMENT_V1 **, unsigned int64 *)
fffff802`37393768 ACPI!GetNextNameSegment (char *, unsigned long *, char **)
fffff802`373be65c ACPI!ACPIButtonCompletePendingIrps (struct _DEVICE_OBJECT *, unsigned long)
fffff802`3740ed54 ACPI!ACPISystemPowerQueryDeviceCapabilities (struct _DEVICE_EXTENSION *, struct _DEVICE_CAPABILITIES *)
fffff802`3737f6fc ACPI!WPP_RECORDER_SF_ii (void *, int64, int64)
fffff802`37405b08 ACPI!PcisuppGetBusSlotNumber (struct _DEVICE_OBJECT *, unsigned long *, unsigned long *, unsigned char *, struct _PCI_BUSMASTER_DESCRIPTOR *)
fffff802`373d1c5c ACPI!ACPIWakeEmulationDisable (struct _ACPI_POWER_REQUEST *)
fffff802`374215f4 ACPI!AcpiValidatePepDeviceControlResources (struct _IO_RESOURCE_REQUIREMENTS_LIST *)
fffff802`37413290 ACPI!ACPIThermalWmi (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373befd0 ACPI!ACPICMLidWorker (struct _DEVICE_EXTENSION *, unsigned long)
fffff802`373d3b60 ACPI!Simulator_NotifyNamespaceCollision (char *, struct _NSObj *)
fffff802`37392658 ACPI!FindOpcodeTerm (unsigned long)
fffff802`373ff8a8 ACPI!OSOpenHandle (char *, void *, void **)
fffff802`3739bf3c ACPI!AMLIRegEventHandler (unsigned long, unsigned int64, <function> *, unsigned int64)
fffff802`3737c8b0 ACPI!ACPICMButtonStartWorker (void *)
fffff802`373d04b8 ACPI!WPP_RECORDER_SF_qssdddd (void *, void *, char *, char *, int, int, int, int)
fffff802`3737ed90 ACPI!WPP_RECORDER_SF_DDqDss (void *, unsigned int, unsigned int, void *, unsigned int, char *, char *)
fffff802`37392fc0 ACPI!Alias (struct _ctxt *, struct _term *)
fffff802`373ce028 ACPI!WPP_RECORDER_SF_diiii (void *, unsigned short, int, int64, int64, int64, int64)
fffff802`3739d014 ACPI!ACPIDockFindCorrespondingDock (struct _DEVICE_EXTENSION *)
fffff802`3742d18c ACPI!ACPIInitReadRegistryKeys (void)
fffff802`373d6540 ACPI!DebugStep (struct _cmdarg *, char *, unsigned long, unsigned long)
fffff802`373cd8b4 ACPI!ACPIIgnoreResourceMapValidation (struct _IO_RESOURCE_DESCRIPTOR *)
fffff802`373cf8e0 ACPI!ACPITableUnload (unsigned long, unsigned long, void *)
fffff802`3739d280 ACPI!ACPIDeviceWorkerThread (void *)
fffff802`373d59f0 ACPI!RegOpcodeHandler (unsigned long, <function> *, unsigned int64, unsigned long)
fffff802`37392cf0 ACPI!RtlStringCchCopyA (char *, unsigned int64, char *)
fffff802`3738f5a0 ACPI!ACPIBuildProcessRunMethodPhaseRecurse (struct _ACPI_BUILD_REQUEST *)
fffff802`373bdaa0 ACPI!ACPIBusIrpSurpriseRemoval (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3741c710 ACPI!WppTraceCallback (unsigned char, void *, unsigned long, void *, void *, unsigned long *)
fffff802`373c3c60 ACPI!ACPIEcStopDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37424f10 ACPI!ACPIRootIrpStopDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`374055d0 ACPI!ProcessorGetMsiConnectionData (struct _GROUP_AFFINITY *, unsigned long, struct _INTERRUPT_CONNECTION_DATA *)
fffff802`373bc26c ACPI!ACPIBuildRegRequest (struct _DEVICE_OBJECT *, struct _IRP *, <function> *)
fffff802`3741ce8c ACPI!AcpiArblibEjectInterface (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373c3d00 ACPI!ACPIEcCompleteQueryMethod (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`373c62a8 ACPI!ACPIInitDeleteDeviceExtension (struct _DEVICE_EXTENSION *)
fffff802`373a0678 ACPI!LinkNodeAddLinkNode (struct _DEVICE_EXTENSION *)
fffff802`37395894 ACPI!ACPIBuildRunMethodRequest (struct _DEVICE_EXTENSION *, <function> *, void *, unsigned long, unsigned long, unsigned char)
fffff802`373cf0c0 ACPI!AcpiShutdownNotificationTimerCallback (struct _KDPC *, void *, void *, void *)
fffff802`3741e440 ACPI!ACPIEcReadWrite (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373d5de0 ACPI!DebugHelp (struct _cmdarg *, char *, unsigned long, unsigned long)
fffff802`3737d5a8 ACPI!ACPIInitStartDevice (struct _DEVICE_OBJECT *, struct _IO_STACK_LOCATION *, <function> *, void *, struct _IRP *)
fffff802`3742e5d4 ACPI!ACPILoadProcessRSDT (void)
fffff802`37405d40 ACPI!IcCheckIrqConflict (unsigned long, unsigned long, union _IRQ_ARB_MODE_AND_POLARITY, unsigned char *)
fffff802`37395b50 ACPI!ACPIInterruptServiceRoutineDPC (struct _KDPC *, void *, void *, void *)
fffff802`373ba46c ACPI!_tlgDefineProvider_annotation__TlgIrqTraceLogHandleProv (void)
fffff802`37401df4 ACPI!PcisuppSetRoutingInfo (struct _DEVICE_OBJECT *, struct ROUTING_TOKEN *)
fffff802`37403fd0 ACPI!IrqArbBootAllocation (struct _ARBITER_INSTANCE *, struct _ARBITER_BOOT_ALLOCATION_PARAMETERS *)
fffff802`373941c0 ACPI!ReadField (struct _ctxt *, struct _ObjData *, struct _FieldDesc *, struct _ObjData *)
fffff802`373be8b0 ACPI!ACPICMButtonNotifyByDeviceExtension (void *, unsigned long)
fffff802`373ca360 ACPI!WriteIoMemRaw (unsigned int64, unsigned long, unsigned long, unsigned int64)
fffff802`373bad64 ACPI!AcpiIrqTranslateSecondaryInterruptToNtResources (unsigned long, struct _IO_RESOURCE_DESCRIPTOR *)
fffff802`3739b34c ACPI!WPP_RECORDER_SF_qsdqss (void *, unsigned short, struct _GUID *, void *, char *, int, void *, char *, char *)
fffff802`37410cb0 ACPI!ACPIFilterIrpStartDeviceWorker (void *)
fffff802`3737a1d0 ACPI!Return (struct _ctxt *, struct _term *)
fffff802`373bb340 ACPI!ACPIBuildDiscoverPowerNodeCompletion (void *, long, void *)
fffff802`373dc470 ACPI!ProcessorpAddInstanceCallback (void *, struct _KE_PROCESSOR_CHANGE_NOTIFY_CONTEXT *, long *)
fffff802`37403a90 ACPI!IrqArbGetNextAllocationRange (struct _ARBITER_INSTANCE *, struct _ARBITER_ALLOCATION_STATE *)
fffff802`37373010 ACPI!FreeObjData (struct _ObjData *)
fffff802`37410270 ACPI!ArbInitializeOrderingList (struct _ARBITER_ORDERING_LIST *)
fffff802`3737c798 ACPI!ACPIWakeInitializePmeRouting (struct _DEVICE_OBJECT *)
fffff802`373d3920 ACPI!Simulator_DuplicateObjData (struct _SIMULATOR_DATA *)
fffff802`37399eac ACPI!AmlpValidateFirmwareMemoryAddress (union _LARGE_INTEGER *, unsigned long)
fffff802`374077ec ACPI!ProcessorQueryGroupInformation (HAL_APIC_DESTINATION_MODE *, unsigned char *)
fffff802`37387ac0 ACPI!GetOpRegionScopeWorker (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`373a1e80 ACPI!_guard_dispatch_icall_nop (void)
fffff802`3741e86c ACPI!ACPIEcRemoveOpRegionHandler (struct _ECDATA *)
fffff802`373d4d04 ACPI!AMLIGetNamespaceOverrideObject (struct _NSObj *, struct _NSObj **)
fffff802`3742e308 ACPI!SyncLoadDDB (struct _ctxt *)
fffff802`37398700 ACPI!DispatchCtxtQueue (void *)
fffff802`373c5110 ACPI!ACPIFanEvent (struct _DEVICE_OBJECT *, unsigned long)
fffff802`37427384 ACPI!IcUpdateInterruptProperties (unsigned long, _KINTERRUPT_MODE, _KINTERRUPT_POLARITY)
fffff802`373863fc ACPI!AMLIGetFirstChild (struct _NSObjRef *)
fffff802`37386808 ACPI!ACPIInitDosDeviceName (struct _DEVICE_EXTENSION *)
fffff802`37373ab0 ACPI!ACPIGet (void *, unsigned long, unsigned long, void *, unsigned long, <function> *, void *, void **, unsigned long *)
fffff802`37401a40 ACPI!ACPIIrpCompletionRoutineWorker (struct _DEVICE_OBJECT *, void *)
fffff802`3739d108 ACPI!InsertOwnerObjList (struct _objowner *, struct _NSObj *)
fffff802`3739ecf4 ACPI!DispatchNotification (struct _DEVICE_EXTENSION *, unsigned long)
fffff802`3739cfa4 ACPI!ACPIInitDeleteChildDeviceList (struct _DEVICE_EXTENSION *)
fffff802`37371010 ACPI!ACPIDispatchIrp (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3742421c ACPI!PnpiValidateSidebandResources (struct _IO_RESOURCE_REQUIREMENTS_LIST *, struct _IO_RESOURCE_REQUIREMENTS_LIST *)
fffff802`373d3264 ACPI!AMLICheckIfIoRangeValid (union _LARGE_INTEGER, unsigned long)
fffff802`37407c9c ACPI!ACPIRootInitialize (void)
fffff802`3740d85c ACPI!ACPIRootIrpQueryBusRelations (struct _DEVICE_OBJECT *, struct _IRP *, struct _DEVICE_RELATIONS **)
fffff802`373cb1b0 ACPI!AcpiNativeMethodEvalRequestCompletion (void *, long)
fffff802`3740bdb0 ACPI!ACPIBusIrpQueryResources (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37398cb4 ACPI!PushTerm (struct _ctxt *, unsigned char *, unsigned char *, struct _amlterm *, struct _ObjData *)
fffff802`3740bc10 ACPI!AcpiGetD3ColdCapability (void *, unsigned char *)
fffff802`3740f5c4 ACPI!QueryExternalTranslatorInterface (void)
fffff802`3742b130 ACPI!ACPIRootIrpStartDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37372980 ACPI!ACPIInternalGetDeviceExtension (struct _DEVICE_OBJECT *)
fffff802`3740f9a8 ACPI!PcisuppInitGlobalState (void)
fffff802`37373328 ACPI!FreeData (struct _ObjData *)
fffff802`3737b4e0 ACPI!ACPIIrpDispatchDeviceControl (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373a0330 ACPI!ACPIBuildDelayedDependencyRequest (struct _ACPI_BUILD_REQUEST *, struct _LIST_ENTRY *)
fffff802`374079d8 ACPI!ProcessorpIndexInstance (unsigned long, struct _HAL_INTERRUPT_TARGET_INFORMATION *)
fffff802`3737be88 ACPI!AcpiIoctlCleanupArgumentObjects (struct _ObjData *, unsigned long)
fffff802`3739fdac ACPI!ACPIButtonEvent (struct _DEVICE_OBJECT *, unsigned long)
fffff802`373d1ca4 ACPI!ACPIWakeEmulationEnable (struct _ACPI_POWER_REQUEST *)
fffff802`37400388 ACPI!AcpiInitializeExternalResourceTranslation (struct _DRIVER_OBJECT *)
fffff802`37398e80 ACPI!CreateDWordField (struct _ctxt *, struct _term *)
fffff802`3739ee4c ACPI!OSNotifyDeviceEnum (struct _NSObjRef *)
fffff802`37393b90 ACPI!RestartContext (struct _ctxt *, unsigned char)
fffff802`37400150 ACPI!IrqArbOverrideConflict (struct _ARBITER_INSTANCE *, struct _ARBITER_ALLOCATION_STATE *)
fffff802`373bf274 ACPI!CmosConfigSpaceHandlerWorker (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`3737bdd0 ACPI!ConvertToInteger (struct _ObjData *, struct _ObjData *)
fffff802`37387ce0 ACPI!ACPIInitDereferenceDeviceExtensionUnlocked (struct _DEVICE_EXTENSION *)
fffff802`373c57d8 ACPI!ACPIGetConvertToClassCode (long, struct _ObjData *, unsigned int64 *, unsigned long *)
fffff802`3739ebf0 ACPI!NotifyHandler (unsigned long, unsigned long, struct _NSObjRef *, unsigned long, <function> *, void *)
fffff802`3739b774 ACPI!ACPIDevicePowerProcessPhase4 (void)
fffff802`373b95d0 ACPI!AcpiDiagTraceAmlEvaluation (struct _ctxt *, unsigned char)
fffff802`373dc040 ACPI!LinkNodepRunSrsAsync (struct _NSObjRef *, unsigned long, <function> *, void *)
fffff802`374123d8 ACPI!PnpiBiosAddressToIoDescriptor (unsigned char *, struct _IO_RESOURCE_LIST **, unsigned long, unsigned long)
fffff802`3741b9f8 ACPI!ACPIDockIrpQueryEjectRelations (struct _DEVICE_OBJECT *, struct _IRP *, struct _DEVICE_RELATIONS **)
fffff802`373d33cc ACPI!AMLIPauseInterpreter (struct _AMLI_PAUSE_INTERPRETER_CALLBACK_ENTRY *)
fffff802`373d34bc ACPI!AMLIReferenceHandleEx (struct _NSObjRef *)
fffff802`373d072c ACPI!CmMemIoResourceUpdateType (struct _CM_PARTIAL_RESOURCE_DESCRIPTOR *, unsigned char, unsigned int64)
fffff802`3737b080 ACPI!DerefOf (struct _ctxt *, struct _term *)
fffff802`37407b5c ACPI!ProcessorpReserveUnownedRanges (struct _PROCESSOR_INSTANCE *)
fffff802`374244f0 ACPI!PnpiCmResourceRemoveSidebandResources (struct _IO_RESOURCE_LIST *, struct _CM_RESOURCE_LIST *, struct _CM_RESOURCE_LIST *, struct _CM_RESOURCE_LIST *, struct _CM_RESOURCE_LIST *, unsigned long *)
fffff802`373cb180 ACPI!AcpiInterpreterPausedSignalEventCallback (void *)
fffff802`37390750 ACPI!WPP_RECORDER_SF_Lqss (void *, unsigned char, unsigned long, unsigned short, struct _GUID *, unsigned long, void *, char *, char *)
fffff802`37387300 ACPI!AMLIIterateSiblingsNext (struct _NSObjRef *)
fffff802`373bab14 ACPI!WPP_RECORDER_SF_qqqss (void *, unsigned char, unsigned long, unsigned short, struct _GUID *, void *, void *, void *, char *, char *)
fffff802`373c2b30 ACPI!ACPIDeferredWakeCompletion (void *, void *, long)
fffff802`3742d6d4 ACPI!IcAddApicInstance (unsigned long)
fffff802`3738d994 ACPI!WPP_RECORDER_SF_dqss (void *, unsigned char, unsigned long, unsigned short, struct _GUID *, int, void *, char *, char *)
fffff802`3738d994 ACPI!WPP_RECORDER_SF_Dqss (void *, unsigned char, unsigned long, unsigned short, struct _GUID *, unsigned int, void *, char *, char *)
fffff802`373d5aac ACPI!ReleaseGL (struct _ctxt *)
fffff802`373914e0 ACPI!SleepStall (struct _ctxt *, struct _term *)
fffff802`373d7ee4 ACPI!FreeContext (struct _ctxt *)
fffff802`3739c37c ACPI!RtlStringCbPrintfA (char *, unsigned int64, char *)
fffff802`373d52c8 ACPI!GetObjectTypeName (unsigned long)
fffff802`3738e028 ACPI!WPP_RECORDER_SF_qqss (void *, unsigned char, unsigned long, unsigned short, struct _GUID *, void *, void *, char *, char *)
fffff802`3739c524 ACPI!WPP_RECORDER_SF_sqss (void *, unsigned char, unsigned long, unsigned short, char *, void *, char *, char *)
fffff802`373c6e64 ACPI!WPP_RECORDER_SF_Dqqss (void *, unsigned int, void *, void *, char *, char *)
fffff802`373bdf20 ACPI!WPP_RECORDER_SF_dqqss (void *, int, void *, void *, char *, char *)
fffff802`373910c0 ACPI!Package (struct _ctxt *, struct _term *)
fffff802`373972c8 ACPI!ReadSystemIO (unsigned long, unsigned long, unsigned long)
fffff802`3740da84 ACPI!ACPIDetectCouldExtensionBeInRelation (struct _DEVICE_EXTENSION *, struct _DEVICE_RELATIONS *, unsigned char, unsigned char, struct _DEVICE_OBJECT **)
fffff802`373cd070 ACPI!ACPIProcessorContainerEvaluateLpiObject (struct _DEVICE_EXTENSION *, unsigned long *)
fffff802`37421410 ACPI!AcpiTranslatePepDeviceControlResourcesInternal (struct _DEVICE_OBJECT *, void *, unsigned long, struct _CM_RESOURCE_LIST *, unsigned long *)
fffff802`373c3940 ACPI!ACPIEcStartDeviceCompletion (struct _DEVICE_EXTENSION *, void *, long)
fffff802`37398668 ACPI!RtlStringCchCopyNA (char *, unsigned int64, char *, unsigned int64)
fffff802`373c9d4c ACPI!AcpiPccGetInterfaceInformation (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373d3028 ACPI!WPP_RECORDER_SF_IdDD (void *, int, unsigned int, unsigned int)
fffff802`374089dc ACPI!ACPIFilterQueryBusD3ColdSupport (struct _DEVICE_OBJECT *)
fffff802`373cba64 ACPI!WPP_RECORDER_SF_DDDD (void *, unsigned long, unsigned short, unsigned int, unsigned int, unsigned int, unsigned int)
fffff802`37406fe4 ACPI!IcCopyData (ARBITER_WHICHSTATE)
fffff802`37407fc0 ACPI!ACPIPccLegacyInitialize (void)
fffff802`373bb240 ACPI!ACPIBuildDiscoverDeviceCompletion (void *, long, void *)
fffff802`37423ba0 ACPI!PnpiBiosExtendedIrqToIoDescriptor (struct _DEVICE_EXTENSION *, unsigned char *, unsigned char, struct _IO_RESOURCE_LIST **, unsigned long)
fffff802`373cd3cc ACPI!ACPIProcessorContainerGetLpiStatesIoctl (struct _IRP *, struct _IO_STACK_LOCATION *)
fffff802`373c77e8 ACPI!ACPIIoctlEvalPreProcessingV2 (struct _DEVICE_OBJECT *, struct _IRP *, struct _IO_STACK_LOCATION *, _POOL_TYPE, struct _NSObjRef **, struct _ObjData **, struct _ObjData **, unsigned long *)
fffff802`3738e3c0 ACPI!ACPIDevicePowerProcessPhase5DeviceSubPhase1 (struct _ACPI_POWER_REQUEST *)
fffff802`3738b2f0 ACPI!ACPIDevicePowerProcessPhase5DeviceSubPhase2 (struct _ACPI_POWER_REQUEST *)
fffff802`3738be20 ACPI!ACPIDevicePowerProcessPhase5DeviceSubPhase3 (struct _ACPI_POWER_REQUEST *)
fffff802`3738b5b0 ACPI!ACPIDevicePowerProcessPhase5DeviceSubPhase4 (struct _ACPI_POWER_REQUEST *)
fffff802`3738b710 ACPI!ACPIDevicePowerProcessPhase5DeviceSubPhase5 (struct _ACPI_POWER_REQUEST *)
fffff802`37423ebc ACPI!PnpiUpdateForceActiveBothInterrupts (struct _DEVICE_EXTENSION *)
fffff802`3738ba60 ACPI!ACPIDevicePowerProcessPhase5DeviceSubPhase6 (struct _ACPI_POWER_REQUEST *)
fffff802`37420120 ACPI!ACPIGetUniqueId (struct _DEVICE_EXTENSION *, unsigned int64 *)
fffff802`3739d690 ACPI!ACPIBusIrpSetPower (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3739d6c4 ACPI!ACPIBusIrpSetDevicePower (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373cb310 ACPI!AcpiNotifyDiscoverDeleteMainCompletion (void *, long)
fffff802`374100b8 ACPI!ArbAddOrdering (struct _ARBITER_ORDERING_LIST *, unsigned int64, unsigned int64)
fffff802`37412af0 ACPI!IrqArbScoreRequirement (struct _IO_RESOURCE_DESCRIPTOR *)
fffff802`3739155c ACPI!ParseAndGetNameSpaceObject (struct _ctxt *, unsigned char **, struct _NSObj *, struct _NSObj **, unsigned char)
fffff802`3739ef94 ACPI!AMLIIterateParentNext (struct _NSObjRef *)
fffff802`373d3ccc ACPI!Simulator_PauseInterpreter (void)
fffff802`374008c4 ACPI!PnpiCmResourceToBiosIoPort (unsigned char *, struct _CM_RESOURCE_LIST *)
fffff802`3737f0e4 ACPI!ACPIReleaseGlobalLock (void *)
fffff802`37399414 ACPI!ACPIDeviceDiscoverDependencies (struct _ACPI_POWER_REQUEST *, struct _LIST_ENTRY *)
fffff802`373d6c0c ACPI!LoadFieldUnitDDB (struct _ctxt *, struct _ObjData *, struct _ObjData *)
fffff802`373cb670 ACPI!AcpiPauseInterpreterForNamespaceUpdates (void)
fffff802`37394e70 ACPI!Notify (struct _ctxt *, struct _term *)
fffff802`37401ba4 ACPI!IcAddPossibleReference (unsigned long, unsigned char)
fffff802`3738ab94 ACPI!ACPIDetectDuplicateHID (struct _DEVICE_EXTENSION *)
fffff802`3740841c ACPI!ACPIIrpSetPagableCompletionRoutineAndForward (struct _DEVICE_OBJECT *, struct _IRP *, <function> *, unsigned char, unsigned char, unsigned char)
fffff802`373a1930 ACPI!AcpiSetD3ColdSupport (void *, unsigned char)
fffff802`373a17f0 ACPI!ACPICMButtonStartCompletion (struct _DEVICE_EXTENSION *, void *, long)
fffff802`373bc738 ACPI!ACPIFlushQueuesUnload (struct _DEVICE_EXTENSION *, void *, unsigned long)
fffff802`3741cf80 ACPI!AcpiArblibGetNextAlias (unsigned long, unsigned int64, unsigned int64 *)
fffff802`37372c90 ACPI!WPP_RECORDER_SF_qsLqss (void *, unsigned char, unsigned long, unsigned short, struct _GUID *, void *, char *, unsigned long, void *, char *, char *)
fffff802`373d6aa8 ACPI!Debugger (void)
fffff802`373da5d0 ACPI!Timer (struct _ctxt *, struct _term *)
fffff802`373793e0 ACPI!GetObjectPathNoLock (struct _NSObj *)
fffff802`3742603c ACPI!ACPIWakeEmulationPrepare (struct _ACPI_POWER_REQUEST *)
fffff802`373ce51c ACPI!PnpiBiosInterruptCombineToIoDescriptor (struct _DEVICE_OBJECT *, unsigned char *, unsigned char, struct _IO_RESOURCE_LIST **, unsigned long, unsigned long)
fffff802`373d22f4 ACPI!OSPowerTryAcquireWakeInterruptChangeStateLock (struct _ACPI_POWER_WAKE_INTERRUPT *)
fffff802`37420000 ACPI!ACPIEvaluateSpareDsm (struct _NSObjRef *, unsigned long, struct _ObjData *, struct _ObjData *)
fffff802`37386194 ACPI!ACPISystemPowerDetermineSupportedDeviceWakeState (struct _DEVICE_EXTENSION *)
fffff802`3739f680 ACPI!ACPIDevicePowerProcessPhase1DeviceSubPhase4EnumPowerNodes (struct _ACPI_POWER_DEVICE_NODE *, _DEVICE_POWER_STATE, void *)
fffff802`37393a90 ACPI!RestartCtxtCallback (struct _ctxtdata *)
fffff802`373c2c90 ACPI!ACPIDispatchIrpCreateClose (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3740a220 ACPI!ACPIThermalStartDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37403ef8 ACPI!ProcessorpValidateTargetSet (struct _GROUP_AFFINITY *)
fffff802`373d41b8 ACPI!AMLICreateNativeNamespaceObject (unsigned long, unsigned long, struct _NSObjRef *, unsigned long, unsigned long, unsigned char *)
fffff802`3739e5e4 ACPI!ACPIBuildProcessDelayedDependencyShouldDelayRequest (struct _ACPI_BUILD_REQUEST *)
fffff802`373d80e8 ACPI!PushPost (struct _ctxt *, <function> *, unsigned int64, unsigned int64, struct _ObjData *)
fffff802`373c25b0 ACPI!AcpiDeviceResetCompleteResetWorker (void *)
fffff802`3742d8ec ACPI!ACPIInitGetEmOverride (void)
fffff802`37399138 ACPI!ACPIDevicePowerProcessBlockedItems (void)
fffff802`3742c8d0 ACPI!ACPIIsSystemStartOptionPresent (wchar_t *)
fffff802`373d5ccc ACPI!DebugExpr (char *, unsigned int64 *, struct _NSObj **)
fffff802`37391340 ACPI!ParseNameTail (struct _ctxt *, unsigned char **, char *)
fffff802`3739d9e0 ACPI!AcpiDiagTraceDeviceActiveCooling (struct _DEVICE_EXTENSION *, unsigned char)
fffff802`37424728 ACPI!PnpiCmResourceToBiosAddress (unsigned char *, struct _CM_RESOURCE_LIST *)
fffff802`373ff410 ACPI!ACPIBusIrpQueryHardwareId (unsigned char **, unsigned int64 *, struct _DEVICE_EXTENSION *)
fffff802`37392584 ACPI!ParseArgObj (struct _ctxt *, struct _ObjData *)
fffff802`37380844 ACPI!ACPIBuildFilter (struct _DRIVER_OBJECT *, struct _DEVICE_EXTENSION *, struct _DEVICE_OBJECT *)
fffff802`373baefc ACPI!RtlStringExHandleOtherFlagsW (wchar_t *, unsigned int64, wchar_t **, unsigned int64 *, unsigned long)
fffff802`373baefc ACPI!RtlStringExHandleOtherFlagsW (wchar_t *, unsigned int64, wchar_t **, unsigned int64 *, unsigned long)
fffff802`373c7ebc ACPI!ACPIIoctlGetDeviceInformation (struct _DEVICE_OBJECT *, struct _IRP *, struct _IO_STACK_LOCATION *)
fffff802`373d8f80 ACPI!CopyObject (struct _ctxt *, struct _term *)
fffff802`37394110 ACPI!PreserveWriteObj (struct _ctxt *, struct _preservewrobj *, long)
fffff802`373c09ec ACPI!ACPIDeviceIrpWaitWakeRequestComplete (struct _ACPI_POWER_REQUEST *)
fffff802`373be8d0 ACPI!ACPICMButtonNotifyByDeviceObject (void *, unsigned long)
fffff802`37421100 ACPI!ACPIPepWorker (struct _DEVICE_EXTENSION *, unsigned long)
fffff802`373cffd4 ACPI!ACPIThermalRereadTemperature (struct _DEVICE_EXTENSION *)
fffff802`37391ad0 ACPI!ParseField (struct _ctxt *, struct _NSObj *, unsigned long *, unsigned long *, unsigned char *, struct _Connection **)
fffff802`3738f2c0 ACPI!ACPIBuildProcessRunMethodPhaseRunMethod (struct _ACPI_BUILD_REQUEST *)
fffff802`3737ab70 ACPI!AMLIGetNameSpaceObjectNoLock (char *, struct _NSObjRef *, struct _NSObjRef **, unsigned long)
fffff802`37406df4 ACPI!AcpiIrqLibSetupSciInterrupt (unsigned short, struct _DEVICE_OBJECT *)
fffff802`37381b80 ACPI!ACPIThermalComplete (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`37403200 ACPI!IrqTranslateResources (void *, struct _CM_PARTIAL_RESOURCE_DESCRIPTOR *, _RESOURCE_TRANSLATION_DIRECTION, unsigned long, struct _IO_RESOURCE_DESCRIPTOR *, struct _DEVICE_OBJECT *, struct _CM_PARTIAL_RESOURCE_DESCRIPTOR *)
fffff802`3739f710 ACPI!OSNotifyCreateThermalZone (struct _NSObjRef *, unsigned int64)
fffff802`373c35c4 ACPI!AcpiEcCommonDpcHandler (struct _ECDATA *)
fffff802`373d9430 ACPI!LoadTable (struct _ctxt *, struct _term *)
fffff802`37402c10 ACPI!ProcessorpFindIdtEntriesApic (struct _DEVICE_OBJECT *, struct _IO_RESOURCE_DESCRIPTOR *, struct _IRQ_ARB_ALLOCATION_STATE *, unsigned long, unsigned long, union _IRQ_ARB_MODE_AND_POLARITY, unsigned long, ARBITER_WHICHSTATE)
fffff802`3737b204 ACPI!GetBaseData (struct _ObjData *)
fffff802`3739a220 ACPI!ProcessIncDec (struct _ctxt *, struct _post *, long)
fffff802`37371e10 ACPI!ACPIGetTableVersion (unsigned long, unsigned long *)
fffff802`373baae0 ACPI!ACPIDockIrpSetSystemPowerComplete (struct _DEVICE_OBJECT *, unsigned char, union _POWER_STATE, void *, struct _IO_STATUS_BLOCK *)
fffff802`373934a0 ACPI!AMLIApplyNamespaceOverride (void)
fffff802`373d2fa4 ACPI!RtlStringCchVPrintfA (char *, unsigned int64, char *, char *)
fffff802`373d8608 ACPI!SignalASLEvent (struct _EventObj *)
fffff802`373d8554 ACPI!QueueContext (struct _ctxt *, unsigned short, struct _LIST_ENTRY *)
fffff802`3739556c ACPI!ACPIWakeEmptyRequestQueue (struct _DEVICE_EXTENSION *)
fffff802`373d8870 ACPI!ResetSignal (struct _ctxt *, struct _term *)
fffff802`3737ce70 ACPI!ACPIInternalSetDeviceInterface (struct _DEVICE_OBJECT *, struct _GUID *)
fffff802`373d0970 ACPI!ACPIVectorClear2 (void *, void *)
fffff802`373d15f8 ACPI!ACPIFindWakeInterruptForVector (unsigned long, unsigned int64, struct _ACPI_POWER_WAKE_INTERRUPT **)
fffff802`3740a670 ACPI!ACPIProcessorDeviceControl (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37424bc8 ACPI!PnpiCmResourceToBiosMemory32Fixed (unsigned char *, struct _CM_RESOURCE_LIST *)
fffff802`3737a300 ACPI!ParseAcquire (struct _ctxt *, struct _acquire *, long)
fffff802`373c35a0 ACPI!ACPIEcReadWriteCompletion (struct _IRP *)
fffff802`373827c8 ACPI!ACPIThermalLoopEx (struct _DEVICE_EXTENSION *, unsigned long, unsigned long)
fffff802`374101a0 ACPI!ArbpGetRegistryValue (void *, wchar_t *, struct _KEY_VALUE_FULL_INFORMATION **)
fffff802`374067a8 ACPI!IrqArbpFindSuitableRangePci (struct _ARBITER_ALLOCATION_STATE *)
fffff802`3737f790 ACPI!_tlgKeywordOn (struct _tlgProvider_t *)
fffff802`3741e69c ACPI!ACPIEcDisconnectInterrupt (struct _ECDATA *)
fffff802`3738cb70 ACPI!ACPIBuildDeviceDpc (struct _KDPC *, void *, void *, void *)
fffff802`373c6df0 ACPI!ACPIInternalIsReportedMissing (struct _DEVICE_EXTENSION *)
fffff802`373869ec ACPI!ACPISystemPowerUpdateWakeCapabilitiesForFilters (struct _DEVICE_EXTENSION *, struct _DEVICE_CAPABILITIES *, _DEVICE_POWER_STATE *, unsigned long *, _SYSTEM_POWER_STATE *, _DEVICE_POWER_STATE *, _DEVICE_POWER_STATE *)
fffff802`37396630 ACPI!ACPIWriteGpeStatusRegister (unsigned long, unsigned char)
fffff802`37406bd8 ACPI!IrqArbpFindSuitableRangeIsa (struct _ARBITER_INSTANCE *, struct _ARBITER_ALLOCATION_STATE *)
fffff802`37401494 ACPI!IrqArbpFindSuitableRangeMsi (struct _ARBITER_INSTANCE *, struct _ARBITER_ALLOCATION_STATE *)
fffff802`37405360 ACPI!ArbpBuildAllocationStack (struct _ARBITER_INSTANCE *, struct _LIST_ENTRY *, unsigned long)
fffff802`37425f90 ACPI!ACPICreateWakeInterruptRegistrationEntries (struct _CM_PARTIAL_RESOURCE_LIST *, struct _ACPI_POWER_REQUEST *, struct _ACPI_POWER_WAKE_INTERRUPT_REGISTRATION_ENTRY *, unsigned long *)
fffff802`373be7a8 ACPI!ACPICMButtonNotify (struct _DEVICE_OBJECT *, struct _DEVICE_EXTENSION *, unsigned long)
fffff802`374212d0 ACPI!AcpiKsrPreparePersistentContext (void)
fffff802`373cb3f0 ACPI!AcpiNotifyPlExtDeleteDeviceAsync (struct _NSObjRef *, void *, void *)
fffff802`3739f0cc ACPI!ReleaseASLMutex (struct _ctxt *, struct _MutexObj *, unsigned char)
fffff802`3737c640 ACPI!AcpiArblibReferenceArbiter (void *)
fffff802`37410aa0 ACPI!IrqArbPackResource (struct _IO_RESOURCE_DESCRIPTOR *, unsigned int64, struct _CM_PARTIAL_RESOURCE_DESCRIPTOR *)
fffff802`3740eef4 ACPI!ACPIProcessHardwareInformation (void)
fffff802`373d2f30 ACPI!ACPIWmiEnableLog (void *, unsigned long)
fffff802`37371e60 ACPI!ACPIDispatchForwardIrp (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3739c44c ACPI!ACPIIoctlGetDeviceSpecificData (struct _DEVICE_OBJECT *, struct _IRP *, struct _IO_STACK_LOCATION *)
fffff802`3740d720 ACPI!IsNsobjPciBus (struct _NSObjRef *)
fffff802`373cf1b0 ACPI!WPP_RECORDER_SF_DDDDqss (void *, unsigned int, unsigned int, unsigned int, unsigned int, void *, char *, char *)
fffff802`374003ec ACPI!PcisuppAcquirePciInterfaces (struct _DEVICE_OBJECT *)
fffff802`37423d00 ACPI!PnpiBiosFunctionConfigToNtIoDescriptor (struct _DEVICE_OBJECT *, unsigned char *, struct _IO_RESOURCE_LIST **, unsigned long, unsigned long)
fffff802`373d65d0 ACPI!FindObjSymbol (unsigned char *, struct _NSObj **, unsigned long *)
fffff802`3739c158 ACPI!RegRSAccess (unsigned long, <function> *, unsigned int64, unsigned char)
fffff802`373bcfb0 ACPI!ACPIBusAndFilterIrpQueryRemovalRelations (struct _DEVICE_OBJECT *, struct _DEVICE_RELATIONS **)
fffff802`37423d00 ACPI!PnpiBiosSerialBusToIoDescriptor (struct _DEVICE_OBJECT *, unsigned char *, struct _IO_RESOURCE_LIST **, unsigned long, unsigned long)
fffff802`3739eb80 ACPI!ACPIFilterIrpStartDeviceCompletion (struct _DEVICE_EXTENSION *, void *, long)
fffff802`37425190 ACPI!IsHypervisorCpcCapable (void)
fffff802`373d75a8 ACPI!DumpObject (struct _ObjData *, unsigned long)
fffff802`3737b234 ACPI!ACPIIoctlEvalPreProcessingV1 (struct _DEVICE_OBJECT *, struct _IRP *, struct _IO_STACK_LOCATION *, _POOL_TYPE, struct _NSObjRef **, struct _ObjData **, struct _ObjData **, unsigned long *)
fffff802`374249c0 ACPI!PnpiCmResourceToBiosExtendedIrq (struct _DEVICE_EXTENSION *, unsigned char *, struct _CM_RESOURCE_LIST *)
fffff802`37411230 ACPI!ArbArbiterHandler (void *, _ARBITER_ACTION, struct _ARBITER_PARAMETERS *)
fffff802`373770c0 ACPI!ParseTerm (struct _ctxt *, struct _term *, long)
fffff802`373d2ed4 ACPI!AmliWatchdogTimeoutAction (struct _AMLI_WATCHDOG *)
fffff802`373c557c ACPI!ACPIFanStopDevice (struct _DEVICE_EXTENSION *)
fffff802`37398108 ACPI!ACPIGetConvertToDeviceIDWide (struct _DEVICE_EXTENSION *, long, struct _ObjData *, unsigned long, void **, unsigned long *)
fffff802`373dadb0 ACPI!ToString (struct _ctxt *, struct _term *)
fffff802`373754d0 ACPI!AsyncEvalObject (struct _NSObj *, struct _ObjData *, unsigned long, struct _ObjData *, <function> *, void *, unsigned char)
fffff802`373dbb60 ACPI!ParseNestedContext (struct _ctxt *, struct _nestedctxt *, long)
fffff802`37371f00 ACPI!ACPINsObjMatchCallback (struct _EM_ENTRY_DATA **, unsigned long, char **, unsigned long, unsigned long *, unsigned long, void *)
fffff802`37403490 ACPI!IcCopyInputStateToDeviceState (struct _ARBITER_INSTANCE *, ARBITER_WHICHSTATE)
fffff802`37410b48 ACPI!IrqArbpGetRangeData (unsigned int64, struct RANGE_DATA **)
fffff802`3741e7a0 ACPI!ACPIEcGetUid (struct _ECDATA *)
fffff802`3741ebc0 ACPI!ACPIEcDisconnectHandler (struct _ECDATA *, struct _IRP *)
fffff802`373bdd80 ACPI!ACPIBusReenumerateSelf (void *)
fffff802`373c2f08 ACPI!WPP_RECORDER_SF_qqDqss (void *, void *, void *, unsigned int, void *, char *, char *)
fffff802`37379cf0 ACPI!AccFieldUnit (struct _ctxt *, struct _accfieldunit *, long)
fffff802`373ff010 ACPI!ACPIFilterIrpDeviceEnumeratedCompletion (struct _DEVICE_OBJECT *, struct _IRP *, void *, unsigned char)
fffff802`37403cac ACPI!IrqArbpUnreferenceArbitrationList (struct _ARBITER_INSTANCE *, struct _LIST_ENTRY *)
fffff802`3740c708 ACPI!PnpiBiosAddressHandleMemoryFlags (void *, struct _IO_RESOURCE_DESCRIPTOR *)
fffff802`37412e7c ACPI!AcpiRegisterDeviceFirmwareLockHandler (struct _DEVICE_OBJECT *, unsigned long, <function> *, void *)
fffff802`374015a0 ACPI!IrqArbFindSuitableRange (struct _ARBITER_INSTANCE *, struct _ARBITER_ALLOCATION_STATE *)
fffff802`373c4b08 ACPI!ACPIWriteEventLogEntry (unsigned long, void *, unsigned long)
fffff802`3738b0e8 ACPI!AMLIGetParent (struct _NSObjRef *)
fffff802`37402268 ACPI!IrqArbpSetDeviceProperties (struct _RTL_RANGE *, struct _RANGE_LIST_ITERATOR *)
fffff802`373d2ab0 ACPI!AcpiRecordBlackboxInformationWorker (void *)
fffff802`3737dd58 ACPI!ACPIThermalAssocaiteConstraint (struct _DEVICE_EXTENSION *, struct _THERMAL_CONSTRAINT *)
fffff802`373a1ec0 ACPI!memcpy (void)
fffff802`37399630 ACPI!ACPIDeviceMatchCallback (struct _EM_ENTRY_DATA **, unsigned long, char **, unsigned long, unsigned long *, unsigned long, void *)
fffff802`3739dcd4 ACPI!OSNotifyCreatePowerResource (struct _NSObjRef *)
fffff802`3737aea4 ACPI!ValidateTarget (struct _ctxt *, struct _ObjData *, unsigned long, struct _ObjData **)
fffff802`373969f0 ACPI!ACPIKsrSupportInitialize (void)
fffff802`37401000 ACPI!ACPIFanStartDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373bde00 ACPI!ACPIDispatchIrpDepRemoveDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373d6120 ACPI!DebugO (struct _cmdarg *, char *, unsigned long, unsigned long)
fffff802`373ca220 ACPI!AcpiPccWatchdog (struct _KDPC *, void *, void *, void *)
fffff802`3737e720 ACPI!ACPIStartNextGlobalLockRequest (void)
fffff802`373d0e8c ACPI!ACPIVectorGetEntry (unsigned long *)
fffff802`373d3dbc ACPI!Simulator_Pre_AsyncEvalObject (struct _NSObj *, struct _ObjData *, int, struct _ObjData **, struct _ObjData **, <function> **, void **, struct _SIMULATOR_DATA **)
fffff802`37407758 ACPI!IrqPolicyQueryInterruptSteeringEnabled (struct _SYSTEM_INTERRUPT_STEERING_INFORMATION_INPUT *)
fffff802`3738220c ACPI!EvalPackageElement (struct _PackageObj *, unsigned long, struct _ObjData *)
fffff802`37420844 ACPI!AcpiPccInitializeSubspace (struct _ACPI_PCC_SUBSPACE *)
fffff802`3737c0b8 ACPI!ACPIAmliDoubleToName (char *, unsigned long)
fffff802`3738bfb4 ACPI!ACPIDevicePowerEnumerateAssociatedPowerNodes (struct _ACPI_POWER_REQUEST *, <function> *, void *)
fffff802`373934cc ACPI!LoadDDB (struct _ctxt *, struct _DSDT *, struct _NSObj *, struct _ObjData *)
fffff802`37398dc0 ACPI!CreateByteField (struct _ctxt *, struct _term *)
fffff802`374123b0 ACPI!ACPIFilterIrpQueryId (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3738f030 ACPI!ACPIBuildProcessDeviceGenericEvalStrict (struct _ACPI_BUILD_REQUEST *)
fffff802`373d314c ACPI!WPP_RECORDER_SF_dqqq (void *, int, void *, void *, void *)
fffff802`373802d4 ACPI!ACPIEvaluateDsmEmcaMethodOnRootBus (struct _DEVICE_EXTENSION *, struct _EMCA_DSM_SUPPORT_FIELD *)
fffff802`373d2d28 ACPI!AmliDisableWatchdog (struct _AMLI_WATCHDOG *)
fffff802`37385200 ACPI!ACPIBuildProcessDevicePhaseDep (struct _ACPI_BUILD_REQUEST *)
fffff802`373ccbac ACPI!WPP_RECORDER_SF_sdqD (void *, unsigned short, char *, int, void *, unsigned int)
fffff802`373d07d0 ACPI!ACPIConvertWideStringToUpperCaseHelper (wchar_t *, unsigned int64)
fffff802`3739a74c ACPI!AcpiNotifyPlExtDiscoverDeviceAsync (struct _NSObjRef *, <function> *, void *)
fffff802`373d3a88 ACPI!Simulator_GetChildNode (struct _SIMULATOR_DATA *)
fffff802`373c3330 ACPI!ACPIEcGpioDpcRoutine (struct _KDPC *, void *, void *, void *)
fffff802`3741f3b4 ACPI!ExternalRequestBiosNameDeviceAssociation (char *, struct _DEVICE_EXTENSION *, unsigned long)
fffff802`373d6140 ACPI!DebugOD (struct _cmdarg *, char *, unsigned long, unsigned long)
fffff802`373cc8c0 ACPI!InternalRawAccessOpRegionHandler (unsigned long, unsigned int64, struct _FieldUnitObj *, struct _ObjData *, unsigned int64, <function> *, void *)
fffff802`373c91f0 ACPI!OSNotifyDeviceWakeCallBack (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`3739a2e0 ACPI!RestartCtxtPassive (void *)
fffff802`374265e8 ACPI!LinkNodeGetPossibleResources (struct LINK_NODE_EXTENSION *, struct _CM_RESOURCE_LIST **, unsigned char *)
fffff802`373d6160 ACPI!DebugOW (struct _cmdarg *, char *, unsigned long, unsigned long)
fffff802`374117d0 ACPI!ACPIFilterIrpDeviceUsageNotification (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37392604 ACPI!CopyObjData (struct _ObjData *, struct _ObjData *)
fffff802`3741e248 ACPI!AcpiFunctionLevelDeviceReset (struct _DEVICE_RESET_CONTEXT *, struct _FUNCTION_LEVEL_DEVICE_RESET_PARAMETERS *)
fffff802`373db680 ACPI!DbgParseOneArg (struct _cmdarg *, char *, unsigned long, unsigned long *)
fffff802`37408e60 ACPI!ACPIFilterIrpQueryInterface (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37409b08 ACPI!AcpiQueryPciDeviceChassisLabel (struct _DEVICE_EXTENSION *)
fffff802`3741e620 ACPI!ACPIEcDisconnectGpeVector (struct _ECDATA *)
fffff802`3737b8e0 ACPI!AMLIEvalNameSpaceObject (struct _NSObjRef *, struct _ObjData *, unsigned long, struct _ObjData *)
fffff802`37381484 ACPI!ACPIAmliBuildObjectPathname (struct _NSObjRef *, char **, unsigned long)
fffff802`3739a33c ACPI!ACPIRootDeviceNotifyPepDiscoverDevice (void)
fffff802`37426d8c ACPI!IrqArbIrqFromGsiv (unsigned long)
fffff802`373c946c ACPI!WPP_RECORDER_SF_qsqss (void *, void *, char *, void *, char *, char *)
fffff802`373d5b40 ACPI!CatError (char *)
fffff802`3741bc10 ACPI!ACPIDockIrpQueryID (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373b9a68 ACPI!AcpiDiagTraceDevicePassiveCooling (struct _DEVICE_EXTENSION *, unsigned char)
fffff802`373d6694 ACPI!IsNumber (char *, unsigned long)
fffff802`373d0d80 ACPI!ACPIVectorDisconnect2 (void *, void *)
fffff802`374201f0 ACPI!ACPIModuleGetSpareProperties (struct _DEVICE_EXTENSION *, unsigned long *)
fffff802`373c002c ACPI!TranslateBindMutexResources (struct _DEVICE_FIRMWARE_LOCK_CONTEXT *, struct _NSObjRef *, void *)
fffff802`373d7ac8 ACPI!LogInErrorLog (unsigned char, unsigned long, unsigned long)
fffff802`373c99f0 ACPI!AcpiPccCommandComplete (struct _ACPI_PCC_SUBSPACE *)
fffff802`3742c7b0 ACPI!ACPIInitGetPlatformOverrides (void)
fffff802`373d0c60 ACPI!ACPIVectorDisconnect (void *)
fffff802`37413040 ACPI!PnpiBiosDmaToIoDescriptor (unsigned char *, unsigned char, struct _IO_RESOURCE_LIST **, unsigned long, unsigned short)
fffff802`373a1300 ACPI!ACPIDispatchIrpBlockedOnDep (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373b9e08 ACPI!AcpiDiagTraceFanStatusChange (struct _DEVICE_EXTENSION *)
fffff802`373d7120 ACPI!CreateQWordField (struct _ctxt *, struct _term *)
fffff802`373c0878 ACPI!ACPIDeviceIrpSystemRequest (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37420468 ACPI!ACPIPccInitialize (struct _DESCRIPTION_HEADER *)
fffff802`37400fa4 ACPI!ACPIProcessorBuildHiddenApicIds (void)
fffff802`3742c124 ACPI!ACPIGlobalInitialize (void)
fffff802`37412dd0 ACPI!ACPIDereferenceIommuBusInterface (void *)
fffff802`373d697c ACPI!DbgExecuteCmd (char *, char **)
fffff802`3740bcfc ACPI!ACPISystemPowerGetDeviceWake (struct _DEVICE_EXTENSION *, _DEVICE_WAKE_DEPTH *)
fffff802`373d9968 ACPI!Match_32 (struct _ctxt *, struct _term *)
fffff802`3742e9b8 ACPI!ACPILoadProcessFACS (void)
fffff802`373b943c ACPI!AcpiDiagRequeueThermalPollingTimer (void)
fffff802`373ca288 ACPI!ReadIoMemRaw (unsigned int64, unsigned long, unsigned long)
fffff802`37380f38 ACPI!ACPIBuildPdo (struct _DRIVER_OBJECT *, struct _DEVICE_EXTENSION *, struct _DEVICE_OBJECT *, unsigned char)
fffff802`37400da8 ACPI!ACPIProcessorGetInitialApicId (struct _DEVICE_EXTENSION *, unsigned long *)
fffff802`37397480 ACPI!ACPIGetProcessorIDWide (unsigned long, void **, unsigned long *)
fffff802`3741232c ACPI!AcpiIsDeviceSecure (struct _DEVICE_EXTENSION *)
fffff802`37407c64 ACPI!ACPIInterruptInitialize (struct _DEVICE_OBJECT *)
fffff802`373d2a68 ACPI!AcpiQueueRecordBlackboxInformation (void)
fffff802`3739a9d0 ACPI!PnpBiosSetFlagsForNotableInterrupts (struct _DEVICE_EXTENSION *, unsigned char *, unsigned long)
fffff802`37397330 ACPI!CheckSystemIOAddressValidity (unsigned char, unsigned long, unsigned long, unsigned long *)
fffff802`3741da40 ACPI!ACPIBusIrpEject (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3740cacc ACPI!PnpiGrowResourceDescriptor (struct _IO_RESOURCE_LIST **)
fffff802`37423d64 ACPI!PnpiBiosPortFixedToIoDescriptor (unsigned char *, struct _IO_RESOURCE_LIST **, unsigned long, unsigned long)
fffff802`37396ff0 ACPI!WriteFieldLoop (struct _ctxt *, struct _wrfieldloop *, long)
fffff802`373c3440 ACPI!ACPIEcQueueEcIrp (struct _ECDATA *, unsigned char, union _LARGE_INTEGER, unsigned long, unsigned long *, <function> *, void *)
fffff802`373992dc ACPI!ACPIDeviceRecordDependencies (struct _LIST_ENTRY *)
fffff802`373caf28 ACPI!AcpiCreateDiscoveryDeleteParameters (struct _NOTIFY_DISCOVER_DESTROY_DEVICES_ENTRY *, unsigned char, struct _NOTIFY_DISCOVER_DESTROY_DEVICES_PARAMETERS **)
fffff802`3741d820 ACPI!ACPIBusAndFilterIrpSetLock (struct _DEVICE_OBJECT *, struct _IRP *, void *, unsigned char)
fffff802`3737c680 ACPI!AcpiNullReference (void *)
fffff802`373873b0 ACPI!IsPciBusAsync (struct _NSObjRef *, <function> *, void *, unsigned char *)
fffff802`373cf16c ACPI!ACPISystemPowerDetermineSupportedSystemState (struct _DEVICE_EXTENSION *, _DEVICE_POWER_STATE)
fffff802`3740d5a8 ACPI!PnpiClearAllocatedMemory (struct _IO_RESOURCE_LIST **, unsigned long)
fffff802`37401cfc ACPI!PcisuppGetParentPdo (struct _DEVICE_OBJECT *, struct _DEVICE_OBJECT **)
fffff802`373cb830 ACPI!AcpiSetupNativeMethodContext (struct _AML_NATIVE_METHOD_REQUEST_BUFFER *, struct _ACPI_NATIVE_METHOD_CONTEXT *)
fffff802`373a1d2c ACPI!__GSHandlerCheckCommon (void *, struct _DISPATCHER_CONTEXT *, struct _GS_HANDLER_DATA *)
fffff802`3739d1e8 ACPI!ACPIBuildProcessDelayedDependencyExternalTriggerFilterPowerCheck (struct _DEVICE_EXTENSION *)
fffff802`37378a70 ACPI!HeapAlloc (struct _heap *, unsigned long, unsigned long)
fffff802`3742ebfc ACPI!ACPIInitialize (struct _DEVICE_OBJECT *)
fffff802`373a1770 ACPI!IsHypervisorLpiCapable (void)
fffff802`37425c30 ACPI!TranslateBridgeRequirements (void *, struct _IO_RESOURCE_DESCRIPTOR *, struct _DEVICE_OBJECT *, unsigned long *, struct _IO_RESOURCE_DESCRIPTOR **)
fffff802`373ca660 ACPI!ACPILateRestore (void)
fffff802`3739cf40 ACPI!PnpiCleanupForceActiveBothInterrupts (struct _DEVICE_EXTENSION *)
fffff802`37425b74 ACPI!FindTranslationRange (union _LARGE_INTEGER, unsigned int64, struct BRIDGE_TRANSLATOR *, _RESOURCE_TRANSLATION_DIRECTION, unsigned char, struct BRIDGE_WINDOW **)
fffff802`3739cf70 ACPI!ACPIBuildProcessNotifyPepDeleteDevice (struct _DEVICE_EXTENSION *, unsigned long)
fffff802`373c3d78 ACPI!ACPIEcDispatchQueries (struct _ECDATA *)
fffff802`373c3fa4 ACPI!ACPIEcLogAction (struct _ECDATA *, unsigned char, unsigned char)
fffff802`373bb40c ACPI!ACPIBuildDockExtension (struct _NSObjRef *)
fffff802`3739a834 ACPI!ACPIBuildIssueInvalidateRelationsWorker (struct _DEVICE_EXTENSION *)
fffff802`373d9bd0 ACPI!MidString (struct _ctxt *, struct _term *)
fffff802`373bbc80 ACPI!ACPIBuildProcessDeviceFailure (struct _ACPI_BUILD_REQUEST *)
fffff802`37398b80 ACPI!ACPIWorkerThread (void *)
fffff802`373ccf60 ACPI!ACPIProcessorContainerComputeIoctlPayloadSize (struct _LIST_ENTRY *, unsigned long *)
fffff802`373798b0 ACPI!IfElse (struct _ctxt *, struct _term *)
fffff802`3737cc80 ACPI!ACPIProcessorStartDeviceWorker (void *)
fffff802`373729e4 ACPI!ACPIDebugGetIrpText (unsigned char)
fffff802`3741ca10 ACPI!AcpiArblibAllocateArbiterInstance (struct _DEVICE_EXTENSION *, int)
fffff802`373db0f8 ACPI!ConvertToBuffer (struct _ObjData *, struct _ObjData *)
fffff802`373cfd90 ACPI!ACPIThermalEvent (struct _DEVICE_OBJECT *, unsigned long)
fffff802`37426dc0 ACPI!IrqArbQueryConflict (struct _ARBITER_INSTANCE *, struct _ARBITER_QUERY_CONFLICT_PARAMETERS *)
fffff802`37392b78 ACPI!PushFrame (struct _ctxt *, unsigned long, unsigned long, <function> *, void **)
fffff802`37407870 ACPI!ProcessorAddInstance (unsigned long, unsigned long)
fffff802`373739e4 ACPI!DereferenceObjectEx (struct _NSObj *)
fffff802`374258c0 ACPI!BuildTranslatorRanges (struct BRIDGE_TRANSLATOR *, unsigned long *, struct BRIDGE_WINDOW **)
fffff802`373c5d30 ACPI!RtlStringExHandleOtherFlagsA (char *, unsigned int64, char **, unsigned int64 *, unsigned long)
fffff802`3738c480 ACPI!ACPIDevicePowerFlushQueue (struct _DEVICE_EXTENSION *)
fffff802`3737c680 ACPI!AcpiTranslatorReference (void *)
fffff802`37389f10 ACPI!ACPIBuildProcessDevicePhasePsc (struct _ACPI_BUILD_REQUEST *)
fffff802`3739a8b0 ACPI!ACPIBuildProcessDevicePhasePrs (struct _ACPI_BUILD_REQUEST *)
fffff802`37407628 ACPI!IcAddSecondaryIcInstance (void)
fffff802`373ba46c ACPI!_tlgDefineProvider_annotation__TlgAcpiTraceHandleProv (void)
fffff802`373d5c48 ACPI!ConPrompt (char *)
fffff802`3739f864 ACPI!ACPIBuildThermalZoneExtension (struct _NSObjRef *, struct _DEVICE_EXTENSION **)
fffff802`37385390 ACPI!ACPIBuildProcessDevicePhasePr3 (struct _ACPI_BUILD_REQUEST *)
fffff802`374133f0 ACPI!ArbRollbackAllocation (struct _ARBITER_INSTANCE *)
fffff802`3741afc0 ACPI!AcpiDiagTraceMemoryReserved (unsigned char, unsigned char, unsigned char, unsigned int64, unsigned int64, unsigned int64, unsigned int64, unsigned int64)
fffff802`37384f80 ACPI!ACPIBuildProcessDevicePhaseAdr (struct _ACPI_BUILD_REQUEST *)
fffff802`37400170 ACPI!ArbQueryArbitrate (struct _ARBITER_INSTANCE *, struct _ARBITER_QUERY_ARBITRATE_PARAMETERS *)
fffff802`3739e694 ACPI!AreDependenciesSatisfied (struct _NSObjRef *, struct _ObjData *)
fffff802`3739f9c0 ACPI!ExprOp1 (struct _ctxt *, struct _term *)
fffff802`3741e650 ACPI!ACPIEcDisconnectGpioInterrupt (struct _ECDATA *)
fffff802`37391050 ACPI!ExprOp2 (struct _ctxt *, struct _term *)
fffff802`3737fe20 ACPI!CLEAR_PM1_STATUS_REGISTER (void)
fffff802`37428580 ACPI!ArbStartArbiter (struct _ARBITER_INSTANCE *, struct _CM_RESOURCE_LIST *)
fffff802`37396750 ACPI!WRITE_PM1_ENABLE (unsigned short)
fffff802`373cc3e0 ACPI!READ_PM1_ENABLE (void)
fffff802`373c56d0 ACPI!ACPIFilterIrpStopDeviceCompletion (struct _DEVICE_OBJECT *, struct _IRP *, void *)
fffff802`374278d0 ACPI!ArbCommitAllocation (struct _ARBITER_INSTANCE *)
fffff802`373c295c ACPI!AcpiDeviceResetMarkDeviceRemoved (struct _DEVICE_EXTENSION *)
fffff802`373d3500 ACPI!AMLIResumeInterpreter (void)
fffff802`373a1b60 ACPI!ext_ms_win_ntos_ksr_l1_1_3_KsrPersistMetadata (struct _GUID *, void *, unsigned long, unsigned int64 *)
fffff802`374091bc ACPI!ACPIFilterIrpQueryIommuInterface (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37430744 ACPI!Simulator_UnInitializeInterface (void)
fffff802`3739bc70 ACPI!CondRefOf (struct _ctxt *, struct _term *)
fffff802`3739dc10 ACPI!IcGetInputState (unsigned long, struct INPUT_STATE *)
fffff802`373a0a10 ACPI!WPP_RECORDER_SF_sDqss (void *, char *, unsigned int, void *, char *, char *)
fffff802`373be12c ACPI!WPP_RECORDER_SF_qDqss (void *, unsigned char, unsigned long, unsigned short, struct _GUID *, void *, unsigned int, void *, char *, char *)
fffff802`3738debc ACPI!WPP_RECORDER_SF_qdqss (void *, unsigned long, unsigned short, struct _GUID *, void *, int, void *, char *, char *)
fffff802`373a1b70 ACPI!ext_ms_win_ntos_ksr_l1_1_3_KsrFreePersistedMemory (struct _GUID *, unsigned char)
fffff802`373bde48 ACPI!ACPIModuleFilterStartResources (struct _CM_RESOURCE_LIST *, struct _CM_RESOURCE_LIST *)
fffff802`3741df68 ACPI!AcpiInitializeBusNumberArbiter (struct _ACPI_ARBITER_INSTANCE *, struct _DEVICE_EXTENSION *)
fffff802`3737ca90 ACPI!ACPIDispatchForwardPowerIrp (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373a1000 ACPI!ACPIDispatchIrpInvalid (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37407134 ACPI!OSReadRegValue (char *, void *, void *, unsigned long *)
fffff802`3737c680 ACPI!PciPrepareMultistageResume (void *)
fffff802`373c8b5c ACPI!OSNotifyDeviceWake (struct _NSObjRef *)
fffff802`373cdd04 ACPI!WPP_RECORDER_SF_ddiiii (void *, int, int, int64, int64, int64, int64)
fffff802`3739e240 ACPI!ACPIDispatchForwardOrFailPowerIrp (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373d5368 ACPI!MigrateDefunctObjectsToNewOwner (struct _objowner *, struct _objowner *)
fffff802`373dc4b8 ACPI!WPP_RECORDER_SF_qDss (void *, void *, unsigned int, char *, char *)
fffff802`373b9910 ACPI!AcpiDiagTraceDeviceCoolingRundown (struct _DEVICE_EXTENSION *, unsigned char, unsigned char)
fffff802`373ccd50 ACPI!WPP_RECORDER_SF_ddqss (void *, int, int, void *, char *, char *)
fffff802`3739f128 ACPI!WPP_RECORDER_SF_DDqss (void *, unsigned long, unsigned short, struct _GUID *, unsigned int, unsigned int, void *, char *, char *)
fffff802`3739c230 ACPI!FindRSAccess (unsigned long)
fffff802`373949b0 ACPI!PushAccFieldObj (struct _ctxt *, <function> *, struct _ObjData *, struct _FieldDesc *, unsigned char *, unsigned long)
fffff802`373d0810 ACPI!ACPIEmQueryFailDeviceResetOnOpenHandles (BUS_QUERY_ID_TYPE, wchar_t *, EM_RULE_STATE *)
fffff802`373cfaac ACPI!WPP_RECORDER_SF_qqDD (void *, void *, void *, unsigned int, unsigned int)
fffff802`37408b3c ACPI!ACPIFilterIrpQueryPnpLocationInterface (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3739dd28 ACPI!ACPIBuildPowerResourceRequest (struct _ACPI_POWER_DEVICE_NODE *)
fffff802`373c1f80 ACPI!ACPIMovePowerListUnblockedItems (struct _LIST_ENTRY *)
fffff802`373733a0 ACPI!ParseRelease (struct _ctxt *, struct _release *, long)
fffff802`3737eee8 ACPI!WPP_RECORDER_SF_dDDq (void *, int, unsigned int, unsigned int, void *)
fffff802`3739bb50 ACPI!ACPIBuildProcessDevicePhaseUidOrHid (struct _ACPI_BUILD_REQUEST *)
fffff802`3737e3b8 ACPI!ACPIInternalDecrementIrpReferenceCount (struct _DEVICE_EXTENSION *)
fffff802`3737bd50 ACPI!ToInteger (struct _ctxt *, struct _term *)
fffff802`373ca7d8 ACPI!AcpiCleanupObjDataArguments (struct _ObjData *, unsigned long)
fffff802`3741f580 ACPI!ACPIFilterIrpEject (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37404ed8 ACPI!IrqArbpLookupIsaOverrideByGsiv (unsigned long, unsigned long *)
fffff802`3742eb5c ACPI!ACPILoadProcessFADT (void)
fffff802`3738c230 ACPI!ACPIDevicePowerProcessPhase0DeviceSubPhase1 (struct _ACPI_POWER_REQUEST *)
fffff802`3738c390 ACPI!ACPIDevicePowerProcessPhase0DeviceSubPhase2 (struct _ACPI_POWER_REQUEST *)
fffff802`37404f98 ACPI!IcRemapInputs (void)
fffff802`3738cad0 ACPI!ACPIDeviceCompleteCommon (unsigned long *, unsigned long)
fffff802`37399f60 ACPI!LogSchedEvent (unsigned long, struct _ctxt *, unsigned int64, unsigned int64, unsigned int64)
fffff802`373ca6f0 ACPI!AcpiAllocateNativeMethodOutputBuffer (void *, struct _ACPI_METHOD_ARGUMENT_V1 *, unsigned int64, void **)
fffff802`373a1b60 ACPI!ext_ms_win_ntos_ksr_l1_1_3_KsrGetFirmwareInformation (struct _KSR_FIRMWARE_INFORMATION **)
fffff802`373ffe00 ACPI!ACPIFilterIrpQueryDeviceRelations (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373d4f9c ACPI!CheckAndPromoteAliasedObjects (struct _ObjData *, struct _ObjData *)
fffff802`37405554 ACPI!MsiGetTargetInfo (struct _GROUP_AFFINITY *, unsigned long, struct MSI_TARGET_INFO *)
fffff802`37404a60 ACPI!PcisuppGetRoutingInfo (struct _DEVICE_OBJECT *, struct ROUTING_TOKEN *)
fffff802`373ca070 ACPI!AcpiPccRingDoorbell (struct _KDPC *, void *, void *, void *)
fffff802`37385b20 ACPI!ACPIBuildCompleteMustSucceed (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`37421ef0 ACPI!ACPIProcessorContainerStartDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37390af0 ACPI!AMLIGetNamedChild (struct _NSObjRef *, unsigned long)
fffff802`3741ee00 ACPI!AcpiExternalInterfaceUnload (void)
fffff802`373cf0f0 ACPI!AcpiShutdownNotificationTimerWorkItem (void *)
fffff802`373c33b0 ACPI!ACPIEcOpRegionHandler (unsigned long, void *, unsigned long, unsigned long, unsigned long *, unsigned int64, <function> *, void *)
fffff802`373a19b0 ACPI!AmlisuppCompletePassive (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`3742720c ACPI!IrqArbpQueryConflictIsa (struct _ARBITER_INSTANCE *, struct _ARBITER_QUERY_CONFLICT_PARAMETERS *)
fffff802`373898e4 ACPI!ACPIBuildProcessSynchronizationList (void)
fffff802`3738d094 ACPI!ACPIBuildProcessSpecialSynchronizationList (void)
fffff802`373a05a0 ACPI!ACPIBusIrpStartDeviceCompletion (struct _DEVICE_EXTENSION *, void *, long)
fffff802`37413210 ACPI!ArbDeleteOwnerRanges (struct _ARBITER_INSTANCE *, void *)
fffff802`373b9d5c ACPI!AcpiDiagTraceFanRundown (struct _DEVICE_EXTENSION *)
fffff802`3740fc74 ACPI!ArbBuildAssignmentOrdering (struct _ARBITER_INSTANCE *)
fffff802`373d7180 ACPI!Event (struct _ctxt *, struct _term *)
fffff802`37426fec ACPI!IrqArbpAssignIrqFromLinkNode (struct _ARBITER_ALLOCATION_STATE *, struct LINK_NODE_EXTENSION *)
fffff802`373936ec ACPI!SetClearAssociatedNativeObject (struct _NSObj *, struct _NSObj *)
fffff802`373c0720 ACPI!ACPIDeviceIrpDelayedDeviceOnRequest (struct _DEVICE_EXTENSION *, void *, long)
fffff802`373c05d0 ACPI!ACPIDeviceIrpDelayedDeviceOffRequest (void *, void *, long)
fffff802`373933c8 ACPI!NewObjOwner (struct _heap *, struct _objowner **)
fffff802`3737cbf0 ACPI!ACPIFanControl (void *, unsigned char)
fffff802`3738a890 ACPI!ACPISystemPowerDetermineSupportedDeviceStates (struct _DEVICE_EXTENSION *, _SYSTEM_POWER_STATE, unsigned long *)
fffff802`3741d2a0 ACPI!AcpiArblibUnpackRequirement (struct _IO_RESOURCE_DESCRIPTOR *, unsigned int64 *, unsigned int64 *, unsigned int64 *, unsigned int64 *)
fffff802`373ce280 ACPI!RtlStringValidateDestAndLengthA (char *, unsigned int64, unsigned int64 *)
fffff802`373d5e50 ACPI!DebugI (struct _cmdarg *, char *, unsigned long, unsigned long)
fffff802`373c7070 ACPI!ACPIWakeEmulationInterruptServiceRoutine (struct _KINTERRUPT *, void *)
fffff802`373899ec ACPI!ACPISystemPowerUpdateDeviceCapabilities (struct _DEVICE_EXTENSION *, struct _DEVICE_CAPABILITIES *, struct _DEVICE_CAPABILITIES *)
fffff802`373d9a8c ACPI!Match_64 (struct _ctxt *, struct _term *)
fffff802`37400130 ACPI!AcpiKsrEnumeratePersistedMemory (struct _GUID *, unsigned int64, void *)
fffff802`3739cd00 ACPI!ACPIInitResetDeviceExtension (struct _DEVICE_EXTENSION *)
fffff802`3740df70 ACPI!ACPISystemPowerGetSxD (struct _DEVICE_EXTENSION *, _SYSTEM_POWER_STATE, _DEVICE_POWER_STATE *)
fffff802`3741feb0 ACPI!AcpiInitializeMemoryArbiter (struct _ACPI_ARBITER_INSTANCE *, struct _DEVICE_EXTENSION *)
fffff802`37427354 ACPI!IcIsActiveBothPrimaryInterrupt (struct _IC_INSTANCE *, unsigned long)
fffff802`373ba8b4 ACPI!ACPIDockIrpSetSystemPower (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3739d724 ACPI!ACPIDeviceIrpDeviceRequest (struct _DEVICE_OBJECT *, struct _IRP *, <function> *)
fffff802`373822b0 ACPI!ACPIThermalDeviceControl (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`374272c0 ACPI!IcAddGicInstance (unsigned long)
fffff802`373d32bc ACPI!AMLIFinalizeObject (struct _NSObjRef *, unsigned char)
fffff802`3739bad8 ACPI!NewNameSpaceObject (struct _heap *)
fffff802`373a075c ACPI!InsertDeviceFirmwareLockHandlerEntry (struct _DEVICE_FIRMWARE_LOCK_HANDLER_ENTRY *)
fffff802`37385580 ACPI!ACPIBuildProcessDevicePhasePrr (struct _ACPI_BUILD_REQUEST *)
fffff802`37399570 ACPI!IncDec (struct _ctxt *, struct _term *)
fffff802`3738a120 ACPI!ACPIBuildProcessDevicePhaseSta (struct _ACPI_BUILD_REQUEST *)
fffff802`3739c7e0 ACPI!ParseInteger (unsigned char **, struct _ObjData *, unsigned long)
fffff802`373a1b60 ACPI!ext_ms_win_ntos_ksr_l1_1_3_KsrEnumeratePersistedMemory (struct _GUID *, <function> *, void *)
fffff802`37372380 ACPI!ACPIDispatchIrpSuccess (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3739a498 ACPI!WPP_RECORDER_SF_sqqDqss (void *, unsigned short, struct _GUID *, char *, void *, void *, unsigned int, void *, char *, char *)
fffff802`373bf130 ACPI!CmosConfigSpaceHandler (unsigned long, struct _NSObjRef *, unsigned long, unsigned long, unsigned char *, unsigned long, <function> *, void *)
fffff802`374063fc ACPI!ACPIBusIrpQueryCompatibleId (unsigned char **, unsigned int64 *, struct _DEVICE_EXTENSION *)
fffff802`373ce3c4 ACPI!WPP_RECORDER_SF_SL (void *, wchar_t *, unsigned long)
fffff802`373bc9dc ACPI!WPP_RECORDER_SF_sL (void *, unsigned long, unsigned short, struct _GUID *, char *, unsigned long)
fffff802`37412bc0 ACPI!ACPIBusIrpStartDeviceWorker (void *)
fffff802`37389748 ACPI!WPP_RECORDER_SF_qL (void *, unsigned char, unsigned long, unsigned short, struct _GUID *, void *, unsigned long)
fffff802`373915dc ACPI!GetNameSpaceObject (char *, struct _NSObj *, struct _NSObj **, unsigned long)
fffff802`373959e0 ACPI!ACPIGpeClearEventMasks (void)
fffff802`374004a0 ACPI!PcisuppInitializePciRouting (struct _DEVICE_OBJECT *)
fffff802`373d5e70 ACPI!DebugID (struct _cmdarg *, char *, unsigned long, unsigned long)
fffff802`3741f100 ACPI!AcpiGetFullyQualifiedBiosName (struct _DEVICE_OBJECT *, struct _STRING *, struct _UNICODE_STRING *, unsigned long *)
fffff802`3739ddf8 ACPI!ACPIBuildPowerResourceExtension (struct _NSObjRef *, struct _ACPI_POWER_DEVICE_NODE **)
fffff802`3741e120 ACPI!ACPICMLidStart (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373928d0 ACPI!WriteField (struct _ctxt *, struct _ObjData *, struct _FieldDesc *, struct _ObjData *)
fffff802`37386cc8 ACPI!WPP_RECORDER_SF_dL (void *, unsigned char, unsigned long, unsigned short, int, unsigned long)
fffff802`37405ff0 ACPI!ACPIBusIrpQueryDeviceId (unsigned char **, unsigned int64 *, struct _DEVICE_EXTENSION *)
fffff802`37408c40 ACPI!ACPIRootIrpQueryInterface (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37396448 ACPI!ACPIInterruptDispatchEvents (void)
fffff802`373d5e90 ACPI!DebugIW (struct _cmdarg *, char *, unsigned long, unsigned long)
fffff802`37386e4c ACPI!WPP_RECORDER_SF_LL (void *, unsigned char, unsigned long, unsigned short, struct _GUID *, unsigned long, unsigned long)
fffff802`3737a8a0 ACPI!WriteObject (struct _ctxt *, struct _ObjData *, struct _ObjData *)
fffff802`373c220c ACPI!WPP_RECORDER_SF_qDqqss (void *, unsigned short, void *, unsigned int, void *, void *, char *, char *)
fffff802`373bcdb4 ACPI!WPP_RECORDER_SF_sqqDqs (void *, void *, void *, unsigned int, void *, char *)
fffff802`3741dfd0 ACPI!ACPICMExperienceButtonStart (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373bbd50 ACPI!ACPIBuildProcessPowerResourceFailure (struct _ACPI_BUILD_REQUEST *)
fffff802`374202d0 ACPI!ACPIModuleIsValidSpare (struct _DEVICE_EXTENSION *, unsigned int64)
fffff802`373722d4 ACPI!IsCompatableDSDTRevision (void)
fffff802`3741d3b0 ACPI!ACPIBusAndFilterIrpEject (struct _DEVICE_OBJECT *, struct _IRP *, void *, unsigned char)
fffff802`373d4694 ACPI!AMLIAddNextNamespaceOverride (void *, struct _NSObj *)
fffff802`373d4410 ACPI!AMLIRemoveNativeObjectsFromNamespace (struct _NSObjRef *)
fffff802`37424b5c ACPI!PnpiCmResourceToBiosMemory (unsigned char *, struct _CM_RESOURCE_LIST *)
fffff802`373940a0 ACPI!PushPreserveWriteObj (struct _ctxt *, struct _ObjData *, unsigned int64, unsigned int64)
fffff802`37410890 ACPI!ACPIInternalDeviceQueryDeviceRelations (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373be910 ACPI!ACPICMButtonSetPower (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373d8a70 ACPI!Concat (struct _ctxt *, struct _term *)
fffff802`3739b2c0 ACPI!ACPIGetWorkerForData (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`37383ce8 ACPI!AMLIFindNameSpaceObject (struct _NSObjRef *, struct _ObjData *, unsigned long, char *)
fffff802`3739d360 ACPI!ACPIDeviceCompletePhase3Off (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`37398ee0 ACPI!CreateBitField (struct _ctxt *, struct _term *)
fffff802`373bf7d0 ACPI!AcceptDeviceFirmwareLockCompletion (void *, long, void *)
fffff802`37426b34 ACPI!ProcessorpGetSecondaryInterruptAffinity (unsigned long, struct _GROUP_AFFINITY *)
fffff802`373db514 ACPI!DbgMatchArg (struct _cmdarg *, char **, unsigned long *)
fffff802`373a0044 ACPI!WPP_RECORDER_SF_dqLD (void *, int, void *, unsigned long, unsigned int)
fffff802`37397e70 ACPI!ACPIGetConvertToPnpID (struct _DEVICE_EXTENSION *, long, struct _ObjData *, unsigned long, void **, unsigned long *)
fffff802`37423b38 ACPI!PnpiBiosDmaToIoDescriptorV3 (unsigned char *, struct _IO_RESOURCE_LIST **, unsigned long)
fffff802`374017e0 ACPI!LinkNodepAddLinkNodeWorker (struct _DEVICE_OBJECT *, void *)
fffff802`3739fc80 ACPI!ACPIButtonDeviceControl (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37426928 ACPI!PcisuppReleasePciRouting (void)
fffff802`3741ed40 ACPI!AcpiAllocateGsivForSecondaryInterrupt (char *, unsigned short, unsigned long *)
fffff802`37409ae4 ACPI!IsPciBus (struct _DEVICE_OBJECT *)
fffff802`37404540 ACPI!ProcessorpClearData (ARBITER_WHICHSTATE)
fffff802`3738bba0 ACPI!ACPIDevicePowerProcessPhase1DeviceSubPhase1 (struct _ACPI_POWER_REQUEST *)
fffff802`3739ea80 ACPI!ACPIDevicePowerProcessPhase1DeviceSubPhase2 (struct _ACPI_POWER_REQUEST *)
fffff802`37381cc0 ACPI!ACPIDevicePowerProcessPhase1DeviceSubPhase3 (struct _ACPI_POWER_REQUEST *)
fffff802`3738c0d0 ACPI!ACPIDevicePowerProcessPhase1DeviceSubPhase4 (struct _ACPI_POWER_REQUEST *)
fffff802`373d3970 ACPI!Simulator_EvaluateNode (struct _SIMULATOR_DATA *)
fffff802`373cd1d8 ACPI!ACPIProcessorContainerFillIoctlBuffer (struct _LIST_ENTRY *, unsigned long, struct _ACPI_COORDINATED_LPI_NODES *, unsigned long *, unsigned long)
fffff802`37420a74 ACPI!ACPIPepCleanupPlatformNotificationSupport (struct _DEVICE_EXTENSION *)
fffff802`3737b8ac ACPI!AMLIDereferenceHandleEx (struct _NSObjRef *)
fffff802`373cb2b0 ACPI!AcpiNativeNotifyEventHandler (struct _NOTIFY_ACPI_EVENT_PARAMETERS *)
fffff802`37399c40 ACPI!OpRegion (struct _ctxt *, struct _term *)
fffff802`373d6df0 ACPI!SetObjectsFlag (struct _NSObj *)
fffff802`373725d0 ACPI!ACPIMapNamedTable (unsigned long, char *, char *, struct _DESCRIPTION_HEADER *, unsigned long *)
fffff802`3742dd28 ACPI!AcpiDiagInitialize (void)
fffff802`37381a40 ACPI!AcpiDiagTraceTemperatureChange (struct _THERMAL_INFORMATION_EX *, struct _DEVICE_EXTENSION *)
fffff802`37388088 ACPI!OSNotifyCreateOperationRegion (struct _NSObjRef *)
fffff802`373d4f04 ACPI!AcquireGL (struct _ctxt *)
fffff802`373bfc2c ACPI!DestroyDeviceFirmwareLock (struct _DEVICE_FIRMWARE_LOCK_CONTEXT *)
fffff802`374130f8 ACPI!ACPICreatePhysicalDeviceLocationDescriptor (struct _ACPI_PLD_V2_BUFFER *, struct _ACPI_PLD_DESCRIPTOR **)
fffff802`373a08cc ACPI!ACPIWmiRegisterGuids (struct WMIREGINFOW *, unsigned long, unsigned long *)
fffff802`37372580 ACPI!ACPIEnumMapTableHandler (struct _SYSTEM_FIRMWARE_TABLE_INFORMATION *)
fffff802`3740c474 ACPI!PnpBiosGetDeviceResourceList (struct _DEVICE_OBJECT *, unsigned char, struct _IO_RESOURCE_REQUIREMENTS_LIST **)
fffff802`37395650 ACPI!ACPITableLoad (unsigned long, unsigned long, void *)
fffff802`3739b6f4 ACPI!OSQueueWorkItem (struct _WORK_QUEUE_ITEM *)
fffff802`3740d7f4 ACPI!AcpiCheckExternalConnection (void)
fffff802`373806c0 ACPI!ACPIAmliBuildObjectPathnameUnicode (struct _NSObjRef *, struct _UNICODE_STRING *, unsigned long)
fffff802`37412d4c ACPI!ACPIInternalIsPci (struct _DEVICE_OBJECT *)
fffff802`373d7e7c ACPI!WriteSystemIO (unsigned long, unsigned long, unsigned long)
fffff802`3737c680 ACPI!AcpiInterfaceReference (void *)
fffff802`37400610 ACPI!ACPIInternalDeviceClockIrpStartDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37411680 ACPI!ACPIBusIrpQueryPnpDeviceState (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3741dd30 ACPI!ACPIBusIrpStopDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`374278a0 ACPI!ArbBacktrackAllocation (struct _ARBITER_INSTANCE *, struct _ARBITER_ALLOCATION_STATE *)
fffff802`3741b4f0 ACPI!ACPIDockIrpQueryCapabilities (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3737df5c ACPI!ACPIInternalInterruptPolarityCacheGetPolarity (struct _DEVICE_OBJECT *, unsigned long, unsigned long *)
fffff802`373a1d08 ACPI!__GSHandlerCheck (struct _EXCEPTION_RECORD *, void *, struct _CONTEXT *, struct _DISPATCHER_CONTEXT *)
fffff802`37381678 ACPI!ACPIConvertDependenciesToPnpReservations (struct _DEVICE_OBJECT *, struct _NSObjRef *, struct _ObjData *)
fffff802`373bf3a0 ACPI!CmosTranslatePNPIDToEnum (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`3740f9d0 ACPI!ArbInitializeArbiterInstance (struct _ARBITER_INSTANCE *, struct _DEVICE_OBJECT *, int, wchar_t *)
fffff802`37408748 ACPI!ACPIThermalGetOverrideHandle (struct _DEVICE_EXTENSION *)
fffff802`37372198 ACPI!LogOp2_32 (struct _ctxt *, struct _term *)
fffff802`373cea30 ACPI!ACPIRootEvent (struct _DEVICE_OBJECT *, unsigned long)
fffff802`3737febc ACPI!wil_details_FeatureReporting_ReportUsageToService (int, int, int)
fffff802`3737a628 ACPI!NewObjData (struct _heap *, struct _ObjData *)
fffff802`37388da4 ACPI!ACPIDetectFilterDevices (struct _DEVICE_OBJECT *, struct _DEVICE_RELATIONS *)
fffff802`374218f0 ACPI!RegisterOpRegionHandler (struct _DEVICE_OBJECT *, unsigned long, unsigned long, <function> *, void *, unsigned long, void **)
fffff802`37396138 ACPI!ACPIWakeRemoveDevicesAndUpdate (struct _DEVICE_EXTENSION *, struct _LIST_ENTRY *)
fffff802`373bc250 ACPI!ACPIBuildRegOnRequest (struct _DEVICE_OBJECT *, struct _IRP *, void *)
fffff802`37397ed8 ACPI!ACPIGetConvertToDeviceID (struct _DEVICE_EXTENSION *, long, struct _ObjData *, unsigned long, void **, unsigned long *)
fffff802`37385a90 ACPI!ACPIBuildProcessDevicePhaseSub (struct _ACPI_BUILD_REQUEST *)
fffff802`373c5e90 ACPI!ACPIGpeInstallRemoveIndexErrorWorker (void *)
fffff802`37386480 ACPI!IsPciDeviceWorker (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`3739c250 ACPI!ACPIGetCmosInterface (void)
fffff802`373ce85c ACPI!ACPINotifyOsShutdown (struct _DEVICE_EXTENSION *)
fffff802`37401724 ACPI!ProcessorMsiSupported (struct _GROUP_AFFINITY *, unsigned char *)
fffff802`37409be8 ACPI!ACPIAmliEvaluateDsm (struct _NSObjRef *, struct _GUID *, unsigned long, unsigned long, struct _PackageObj *, struct _ObjData **)
fffff802`3739d0d0 ACPI!ACPIDevicePowerNotifyEvent (struct _DEVICE_EXTENSION *, void *, long)
fffff802`3738a360 ACPI!ACPIBuildProcessDevicePhaseEjd (struct _ACPI_BUILD_REQUEST *)
fffff802`373cc20c ACPI!WPP_RECORDER_SF_sqqD (void *, unsigned long, unsigned short, char *, void *, void *, unsigned int)
fffff802`3739bd30 ACPI!ACPIBuildProcessDevicePhaseUid (struct _ACPI_BUILD_REQUEST *)
fffff802`373d1544 ACPI!ACPIDisconnectWakeInterrupt (struct _ACPI_POWER_WAKE_INTERRUPT_REGISTRATION_ENTRY *)
fffff802`3740a080 ACPI!ACPIAmliEvaluateOsc (struct _NSObjRef *, struct _GUID *, unsigned long, unsigned long *)
fffff802`373c4fa4 ACPI!ACPIExtListIsMemberOfRelation (struct _DEVICE_OBJECT *, struct _DEVICE_RELATIONS *)
fffff802`373b9fdc ACPI!AcpiDiagTraceThermalZoneRundown (struct _DEVICE_EXTENSION *)
fffff802`3739c400 ACPI!ACPIDevicePowerProcessForward (struct _ACPI_POWER_REQUEST *)
fffff802`374080f0 ACPI!ACPIAmliEvaluatePcch (struct _NSObjRef *, struct _PNP_QWORD_ADDRESS_DESCRIPTOR_ *, struct _GEN_ADDR *, unsigned int64 *, unsigned int64 *)
fffff802`3738345c ACPI!ACPIDevicePowerProcessPhase3 (void)
fffff802`37426410 ACPI!IrqLibFreeMessageTarget (struct _DEVICE_OBJECT *, unsigned long, struct _GROUP_AFFINITY *)
fffff802`373ce164 ACPI!RtlStringCchCatA (char *, unsigned int64, char *)
fffff802`37381318 ACPI!ACPIAddInitializationDependencies (struct _DEVICE_EXTENSION *)
fffff802`3741ed10 ACPI!ACPIEcUnloadPending (struct _ECDATA *)
fffff802`373d5bd0 ACPI!ConPrintf (char *)
fffff802`374056a0 ACPI!ArbTestAllocation (struct _ARBITER_INSTANCE *, struct _ARBITER_TEST_ALLOCATION_PARAMETERS *)
fffff802`373d6590 ACPI!DebugTrace (struct _cmdarg *, char *, unsigned long, unsigned long)
fffff802`3738cad0 ACPI!ACPIDeviceCompletePhase3Common (unsigned long *, unsigned long)
fffff802`3738a6a4 ACPI!ACPIExtListTestElement (struct EXTENSIONLIST_ENUMDATA *, unsigned char)
fffff802`373720a0 ACPI!AcpiWrapperReadConfig (void *, unsigned long, unsigned long, void *, unsigned long, unsigned long)
fffff802`3741ff30 ACPI!AcpiMemarbFindSuitableRange (struct _ARBITER_INSTANCE *, struct _ARBITER_ALLOCATION_STATE *)
fffff802`3741ee18 ACPI!AcpiExternalQueryTranslatedDescriptorForGsiv (unsigned long, struct _IO_RESOURCE_DESCRIPTOR *)
fffff802`373c3140 ACPI!WPP_RECORDER_SF_sqSD (void *, void *, wchar_t *, unsigned int)
fffff802`373d16f0 ACPI!ACPIWaitWakeEnableOnPowerUp (struct _DEVICE_EXTENSION *, void *, long)
fffff802`373be5d0 ACPI!ACPIButtonCancelRequest (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3737fd08 ACPI!READ_PM1_CONTROL (void)
fffff802`37388240 ACPI!PciConfigSpaceHandlerWorker (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`3741f810 ACPI!ACPIFilterIrpStopDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37426818 ACPI!PcisuppReleasePciInterfaces (struct _DEVICE_EXTENSION *)
fffff802`374271cc ACPI!IrqArbpFindIrqInAlternatives (struct _ARBITER_ALLOCATION_STATE *, unsigned int64, unsigned long *)
fffff802`37371f3c ACPI!HeapFree (void *)
fffff802`373bee40 ACPI!ACPICMLidSetPower (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`374083f0 ACPI!ACPIFilterIrpQueryPnpDeviceState (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3739ae00 ACPI!ACPIGetWorkerForBuffer (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`373da5b0 ACPI!RefOf (struct _ctxt *, struct _term *)
fffff802`373890d8 ACPI!ACPIDetectPdoDevices (struct _DEVICE_OBJECT *, struct _DEVICE_RELATIONS **)
fffff802`37386928 ACPI!PnpDeviceBiosResourcesToNtResources (struct _DEVICE_EXTENSION *, unsigned char *, unsigned long, struct _IO_RESOURCE_REQUIREMENTS_LIST **)
fffff802`37398e20 ACPI!CreateWordField (struct _ctxt *, struct _term *)
fffff802`3741f2cc ACPI!DeleteExternalTranslatorInterface (void)
fffff802`373cff00 ACPI!ACPIThermalReadTemperatureComplete (struct _DEVICE_OBJECT *, struct _IRP *, void *)
fffff802`373d3c38 ACPI!Simulator_NotifyNode (struct _SIMULATOR_DATA *)
fffff802`37421c30 ACPI!AcpiPortarbAddAllocation (struct _ARBITER_INSTANCE *, struct _ARBITER_ALLOCATION_STATE *)
fffff802`37380268 ACPI!SetLogSize (void)
fffff802`373839b0 ACPI!ACPIIoctlEnumChildren (struct _DEVICE_OBJECT *, struct _IRP *, struct _IO_STACK_LOCATION *)
fffff802`3741b170 ACPI!ACPIDockIntfUpdateDeparture (void *)
fffff802`373919d8 ACPI!ParseFieldList (struct _ctxt *, unsigned char *, struct _NSObj *, unsigned long, unsigned long)
fffff802`3739d530 ACPI!ACPIFilterIrpSetPower (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`374127a0 ACPI!ACPIBusIrpQueryBusRelations (struct _DEVICE_OBJECT *, struct _IRP *, struct _DEVICE_RELATIONS **)
fffff802`373832d4 ACPI!ACPIThermalUpdateTemperature (struct _DEVICE_EXTENSION *, unsigned long)
fffff802`3742ea98 ACPI!ACPILoadProcessDSDT (void)
fffff802`373c3ef4 ACPI!ACPIEcRunQueryMethod (struct _ECDATA *, unsigned long)
fffff802`37412570 ACPI!ArbGetNextAllocationRange (struct _ARBITER_INSTANCE *, struct _ARBITER_ALLOCATION_STATE *)
fffff802`373d72e0 ACPI!SleepQueueDpc (struct _EX_TIMER *, void *)
fffff802`373cafc4 ACPI!AcpiDispatchNativeMethodEvalRequest (struct _ACPI_NATIVE_METHOD_CONTEXT *, struct _NSObjRef *)
fffff802`37411eb8 ACPI!AcpiDeletePciBusInterface (struct _DEVICE_EXTENSION *)
fffff802`3741c130 ACPI!ACPIDockIrpQueryPnpDeviceState (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3737a040 ACPI!DupObjData (struct _heap *, struct _ObjData *, struct _ObjData *)
fffff802`373804a0 ACPI!ACPIDispatchIrpDepFilterQueryID (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3741ff58 ACPI!ACPIEjectPartitionUnitInterface (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373c98e0 ACPI!AcpiPccCallbackDpc (struct _KDPC *, void *, void *, void *)
fffff802`373be384 ACPI!WPP_RECORDER_SF_qdLqss (void *, unsigned short, unsigned long, void *, char *, char *)
fffff802`3737c604 ACPI!ACPIAnsiStringToWideHelper (char *, unsigned int64)
fffff802`37397f40 ACPI!ACPIWideStringToAnsiHelper (wchar_t *, unsigned long)
fffff802`3740981c ACPI!ACPIQueryPhysicalDeviceLocation (struct _DEVICE_EXTENSION *)
fffff802`373d3d90 ACPI!Simulator_PauseInterpreterCallback (void *)
fffff802`3738ab38 ACPI!ACPIExtListStartEnum (struct EXTENSIONLIST_ENUMDATA *)
fffff802`3741e4f8 ACPI!ACPIEcConnectGpeVector (struct _ECDATA *)
fffff802`37408330 ACPI!ACPIEvaluateOscWheaMethodOnRootBus (struct _DEVICE_EXTENSION *, struct _SB_OSC_WHEA_CONTROL_FIELD *)
fffff802`374074ec ACPI!ACPIInitGlobalHeapSize (void)
fffff802`3738aff4 ACPI!ACPIDeviceInternalDelayedDeviceRequest (struct _DEVICE_EXTENSION *, _DEVICE_POWER_STATE)
fffff802`37426e70 ACPI!IrqArbUnpackResource (struct _CM_PARTIAL_RESOURCE_DESCRIPTOR *, unsigned int64 *, unsigned int64 *)
fffff802`373a0b70 ACPI!ACPIInterruptEventCompletion (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`374021d4 ACPI!IrqTranslatepQueryDeviceIrql (unsigned long, unsigned long)
fffff802`374279c0 ACPI!ArbInitializeRangeList (struct _ARBITER_INSTANCE *, unsigned long, struct _CM_PARTIAL_RESOURCE_DESCRIPTOR *, struct _RTL_RANGE_LIST *)
fffff802`3741c970 ACPI!AcpiParseGenRegDesc (struct ACPI_GEN_REG_DESC *, struct _GEN_ADDR *)
fffff802`37411ce0 ACPI!ACPIBusIrpQueryInstanceId (unsigned char **, unsigned int64 *, struct _DEVICE_EXTENSION *)
fffff802`373cbbd8 ACPI!WPP_RECORDER_SF_DDPP (void *, unsigned int, unsigned int, unsigned int64, unsigned int64)
fffff802`3740a7e0 ACPI!ACPIThermalWorker (struct _DEVICE_EXTENSION *, unsigned long)
fffff802`37423d00 ACPI!PnpiBiosGpioInterruptIoToNtIoDescriptor (struct _DEVICE_OBJECT *, unsigned char *, struct _IO_RESOURCE_LIST **, unsigned long, unsigned long)
fffff802`373c2838 ACPI!AcpiDeviceResetInvokeReset (struct _DEVICE_EXTENSION *, struct _IRP *)
fffff802`373d0360 ACPI!AcpiThermalDestroyContraints (struct _DEVICE_EXTENSION *)
fffff802`37409ea8 ACPI!ACPIFreePhysicalDeviceLocationDescriptors (struct _ACPI_PLD_DESCRIPTORS *)
fffff802`37389d50 ACPI!ACPIBuildProcessDevicePhaseCrs (struct _ACPI_BUILD_REQUEST *)
fffff802`37391264 ACPI!ParseName (struct _ctxt *, unsigned char **, char *)
fffff802`3742d810 ACPI!OSInterruptVector (struct _DEVICE_OBJECT *)
fffff802`373cb710 ACPI!AcpiReflectNativeObject (struct _REFLECT_NATIVE_ACPI_OBJECT_PARAMETERS *)
fffff802`3741b7c0 ACPI!ACPIDockIrpQueryDeviceRelations (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37403f8c ACPI!LinkNodeClearPossibleData (void)
fffff802`3739d0f4 ACPI!AMLIGetNSObjectNotifyFlag (struct _NSObjRef *)
fffff802`3738d6e0 ACPI!AMLIFreeDataBuffs (struct _ObjData *)
fffff802`37406758 ACPI!IcRemovePossibleReference (unsigned long, unsigned char)
fffff802`37394b60 ACPI!Load (struct _ctxt *, struct _term *)
fffff802`3738a220 ACPI!ACPIBuildProcessDevicePhasePep (struct _ACPI_BUILD_REQUEST *)
fffff802`3741f540 ACPI!NotifyExternalTranslationInterfaceChange (void *, void *)
fffff802`373d4090 ACPI!Simulator_RemoveNode (struct _SIMULATOR_DATA *)
fffff802`3740d38c ACPI!PnpiBiosAddressDoubleToIoDescriptor (unsigned char *, struct _IO_RESOURCE_LIST **, unsigned long, unsigned long)
fffff802`373c96bc ACPI!ACPIPccProcessSci (void)
fffff802`3739d0d0 ACPI!ACPIBuildNotifyEvent (void *, void *, long)
fffff802`373d3664 ACPI!AMLISetNSObjectNotifyFlag (struct _NSObjRef *)
fffff802`373bd854 ACPI!ACPIBusIrpSetSystemPower (struct _DEVICE_OBJECT *, struct _IRP *, struct _IO_STACK_LOCATION *)
fffff802`37385160 ACPI!ACPIBuildProcessDevicePhaseCls (struct _ACPI_BUILD_REQUEST *)
fffff802`3737b100 ACPI!ReadObject (struct _ctxt *, struct _ObjData *, struct _ObjData *)
fffff802`37387fb0 ACPI!EnableDisableDeviceTreeRegionSpace (struct _DEVICE_EXTENSION *, unsigned long, unsigned char)
fffff802`3739e9ac ACPI!GetPciAddress (struct _NSObjRef *, <function> *, void *, unsigned long *, struct _PCI_SLOT_NUMBER *)
fffff802`37421f58 ACPI!ACPIRegGetTableFromSimulatorRegistryEntry (void **)
fffff802`3739df80 ACPI!ACPIWakeWaitIrp (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373d0da0 ACPI!ACPIVectorEnable (struct _DEVICE_OBJECT *, void *)
fffff802`374085d4 ACPI!IrqTranslatorEjectInterface (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3740f2b0 ACPI!AcpiSetupNativeMethodInterface (void)
fffff802`37409eec ACPI!ACPIFreePhysicalDeviceLocationDescriptor (struct _ACPI_PLD_DESCRIPTOR *)
fffff802`373800c8 ACPI!PerformMutexDriverCallbacks (_AML_MUTEX_OPERATION_TYPE, struct _MutexObj *, struct _ctxt *, struct _NSObj *, unsigned short)
fffff802`373d0e70 ACPI!ACPIVectorEnable2 (void *, void *)
fffff802`373723a8 ACPI!AcpiIrqGetRootResourceList (void)
fffff802`373c2c20 ACPI!ACPIDispatchForwardIrpWithExceptions (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37372b90 ACPI!HeapInsertFreeList (struct _heap *, struct _heapobjhdr *)
fffff802`37421d30 ACPI!AcpiPortarbBacktrackAllocation (struct _ARBITER_INSTANCE *, struct _ARBITER_ALLOCATION_STATE *)
fffff802`37410f80 ACPI!ArbAllocateEntry (struct _ARBITER_INSTANCE *, struct _ARBITER_ALLOCATION_STATE *)
fffff802`37428140 ACPI!ArbRetestAllocation (struct _ARBITER_INSTANCE *, struct _ARBITER_RETEST_ALLOCATION_PARAMETERS *)
fffff802`37411ef8 ACPI!ACPIInternalNotifyAvailableDeviceObject (struct _DEVICE_EXTENSION *)
fffff802`37409dd4 ACPI!ACPICacheCoherencyInterface (struct _DEVICE_EXTENSION *, struct _IO_STACK_LOCATION *)
fffff802`37420a58 ACPI!IsPciBusExtension (struct _DEVICE_EXTENSION *)
fffff802`373d51a0 ACPI!FreeObjOwnerWorker (void *)
fffff802`3742db60 ACPI!InitIllegalIOAddressListFromHAL (void)
fffff802`374269f0 ACPI!IrqTranslateRequirements (void *, struct _IO_RESOURCE_DESCRIPTOR *, struct _DEVICE_OBJECT *, unsigned long *, struct _IO_RESOURCE_DESCRIPTOR **)
fffff802`3737cb00 ACPI!ACPIDeviceIrpForwardRequest (struct _DEVICE_EXTENSION *, void *, long)
fffff802`3739ab50 ACPI!AcpiWrapperWriteConfig (void *, unsigned long, unsigned long, void *, unsigned long, unsigned long)
fffff802`3741fbc0 ACPI!ACPIIoctlQueryDeviceBiosName (struct _DEVICE_OBJECT *, struct _IRP *, struct _IO_STACK_LOCATION *)
fffff802`37410be0 ACPI!ACPIInternalDeviceQueryCapabilities (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3737c6a0 ACPI!Continue (struct _ctxt *, struct _term *)
fffff802`373bdebc ACPI!RtlStringCbPrintfW (wchar_t *, unsigned int64, wchar_t *)
fffff802`373ba880 ACPI!ACPIDockIrpSetPower (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37394698 ACPI!GetFieldUnitRegionObj (struct _FieldUnitObj *, struct _NSObj **)
fffff802`374115f4 ACPI!ACPISystemPowerProcessSxD (struct _DEVICE_EXTENSION *, _DEVICE_POWER_STATE *, unsigned char *)
fffff802`3738ad48 ACPI!ACPIGpeBuildWakeMasks (struct _DEVICE_EXTENSION *)
fffff802`373ce7bc ACPI!ACPIInitShutdownInProgress (struct _ACPI_SHUTDOWN_NOTIFICATION *)
fffff802`373d7060 ACPI!CreateField (struct _ctxt *, struct _term *)
fffff802`374092b4 ACPI!ACPIBusIommuBusInterface (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3740ddbc ACPI!ACPIInternalSendSynchronousIrp (struct _DEVICE_OBJECT *, struct _IO_STACK_LOCATION *, void **)
fffff802`3741fd70 ACPI!EnableDisableIPMIRegions (struct _NSObjRef *, unsigned char)
fffff802`3739834c ACPI!ACPIAmliDoubleToNameWide (wchar_t *, unsigned long, unsigned char)
fffff802`37389ea8 ACPI!ACPIGpeIndexToGpeRegister (unsigned long)
fffff802`37421254 ACPI!PepPromoteNextNotificationState (struct _DEVICE_EXTENSION *, _PEP_PLATFORM_NOTIFICATION_STATE, unsigned char)
fffff802`373860a0 ACPI!ACPIInternalInterruptPolarityCacheStorePolarity (struct _DEVICE_EXTENSION *, unsigned long, unsigned long)
fffff802`373d8090 ACPI!InvokePauseCallbacks (void)
fffff802`37392720 ACPI!Device (struct _ctxt *, struct _term *)
fffff802`373d4e94 ACPI!AMLIReadNamespaceOverrideObject (struct _ctxt *, struct _NSObj *, struct _ObjData *)
fffff802`3737cf00 ACPI!ACPIFanPowerCallback (struct _DEVICE_EXTENSION *, void *, long)
fffff802`373ba4e0 ACPI!ACPIDockIrpQueryPower (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373996a0 ACPI!WriteCookAccess (struct _ctxt *, struct _wrcookacc *, long)
fffff802`37402500 ACPI!IrqArbAddAllocation (struct _ARBITER_INSTANCE *, struct _ARBITER_ALLOCATION_STATE *)
fffff802`373c4314 ACPI!ACPIEcServiceIoLoop (struct _ECDATA *)
fffff802`37424c80 ACPI!ACPIRootIrpCancelRemoveOrStopDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37405664 ACPI!ProcessorGetDestinationMode (struct _GROUP_AFFINITY *, HAL_APIC_DESTINATION_MODE *)
fffff802`3739b1b0 ACPI!ACPIRangeValidatePciMemoryResource (struct _IO_RESOURCE_LIST *, unsigned long, unsigned long *)
fffff802`3740f1b4 ACPI!ACPICreateRootSymbolicLink (struct _DEVICE_OBJECT *)
fffff802`373b9b98 ACPI!AcpiDiagTraceDeviceReset (struct _DEVICE_EXTENSION *, _DEVICE_RESET_TYPE, long)
fffff802`3740b7c0 ACPI!PnpIoResourceListToCmResourceList (struct _IO_RESOURCE_REQUIREMENTS_LIST *, struct _CM_RESOURCE_LIST **)
fffff802`37387bd0 ACPI!IsPciDevice (struct _NSObjRef *, <function> *, void *, unsigned char *)
fffff802`37411b94 ACPI!CmosGetInterface (struct _DEVICE_OBJECT *)
fffff802`3742b080 ACPI!RtlDuplicateCmResourceList (struct _CM_RESOURCE_LIST *)
fffff802`373d14a8 ACPI!ACPIDereferenceWakeInterrupt (struct _ACPI_POWER_WAKE_INTERRUPT **)
fffff802`373d51cc ACPI!FreeOwnedObjects (struct _objowner *)
fffff802`373cecd0 ACPI!ACPIRootIrpRemoveDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373d135c ACPI!ACPIDelayedFreeWakeInterrupt (unsigned long, unsigned int64)
fffff802`3742eef4 ACPI!ProcessorInitGlobalState (void)
fffff802`3741fb14 ACPI!ACPIInternalPciDeviceLabel (struct _DEVICE_EXTENSION *, struct _PackageObj *)
fffff802`37420bc0 ACPI!ACPIPepInitializePlatformNotificationSupport (struct _DEVICE_EXTENSION *)
fffff802`373bc010 ACPI!ACPIBuildProcessThermalZoneHid (struct _ACPI_BUILD_REQUEST *)
fffff802`373973c0 ACPI!InternalOpRegionHandler (unsigned long, struct _NSObjRef *, unsigned long, unsigned long, unsigned long *, unsigned int64, <function> *, void *)
fffff802`373bb870 ACPI!ACPIBuildIssueNotifyInvalidateRelationsForDockDevice (void *, void *, long)
fffff802`37372320 ACPI!ACPIInternalClearFlags (unsigned int64 *, unsigned int64)
fffff802`3739e8d8 ACPI!ACPIVerifyAndCopyFirmwareDependencies (struct _NSObjRef *, struct _ObjData *, struct _ObjData **)
fffff802`3737ad40 ACPI!Index (struct _ctxt *, struct _term *)
fffff802`373d71e0 ACPI!InitEvent (struct _ctxt *, struct _heap *, struct _NSObj *)
fffff802`3737a82c ACPI!MatchObjType (unsigned long, unsigned long)
fffff802`373d2828 ACPI!WPP_RECORDER_SF_qddqss (void *, unsigned short, void *, int, int, void *, char *, char *)
fffff802`3738c9f0 ACPI!ACPIDeviceInternalQueueRequest (struct _DEVICE_EXTENSION *, struct _ACPI_POWER_REQUEST *, unsigned long)
fffff802`373bbdb0 ACPI!ACPIBuildProcessRunMethodPhasePostProcessResult (struct _ACPI_BUILD_REQUEST *)
fffff802`373d4030 ACPI!Simulator_RefreshTree (void)
fffff802`37400100 ACPI!ACPIIommuGetDeviceProperties (void *, union _IOMMU_DEVICE_PROPERTIES *)
fffff802`373c0450 ACPI!ACPIDeviceCancelWaitWakeIrpCallBack (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`373987c0 ACPI!Method (struct _ctxt *, struct _term *)
fffff802`373911e0 ACPI!LNot (struct _ctxt *, struct _term *)
fffff802`3742b010 ACPI!GsDriverEntry (struct _DRIVER_OBJECT *, struct _UNICODE_STRING *)
fffff802`3737d040 ACPI!ACPIFanDeviceControl (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373ce234 ACPI!RtlStringCopyWorkerA (char *, unsigned int64, char *, unsigned int64)
fffff802`3737ddf0 ACPI!ACPIThermalReevaluateConstraints (struct _THERMAL_COOLING_EXTENSION *)
fffff802`3738d3f0 ACPI!OSNotifyCreate (unsigned long, struct _NSObjRef *)
fffff802`37395000 ACPI!ACPIDispatchAddDevice (struct _DRIVER_OBJECT *, struct _DEVICE_OBJECT *)
fffff802`3739c690 ACPI!ACPIBuildSynchronizationRequestInternal (struct _DEVICE_EXTENSION *, <function> *, void *, unsigned char)
fffff802`3739176c ACPI!PushCall (struct _ctxt *, struct _NSObj *, struct _ObjData *)
fffff802`3742b5f4 ACPI!ACPIInitializeWorker (void)
fffff802`374273f0 ACPI!ArbAddAllocation (struct _ARBITER_INSTANCE *, struct _ARBITER_ALLOCATION_STATE *)
fffff802`373905a0 ACPI!WPP_RECORDER_SF_qsLLdqss (void *, void *, char *, unsigned long, unsigned long, void *, char *, char *)
fffff802`373967f8 ACPI!ACPIEcInitOpRegionHandler (void)
fffff802`373d66e4 ACPI!PrintBuffData (unsigned char *, unsigned long)
fffff802`373cc0b4 ACPI!WPP_RECORDER_SF_qqD (void *, unsigned long, unsigned short, void *, void *, unsigned int)
fffff802`374000f0 ACPI!AcpiGetBusDriverD3ColdSupport (void *, unsigned char *)
fffff802`373c2090 ACPI!WPP_RECORDER_SF_dqs (void *, int, void *, char *)
fffff802`3741e5f8 ACPI!ACPIEcConnectInterrupt (struct _ECDATA *)
fffff802`374041d0 ACPI!ProcessorCopyData (ARBITER_WHICHSTATE)
fffff802`3737fd94 ACPI!READ_PM1_STATUS (void)
fffff802`374265c4 ACPI!LinkNodeGetPossibleGsiv (struct LINK_NODE_EXTENSION *, unsigned long *)
fffff802`3739e7f0 ACPI!WPP_RECORDER_SF_Lqs (void *, unsigned char, unsigned short, unsigned long, void *, char *)
fffff802`3739acdc ACPI!WPP_RECORDER_SF_sqL (void *, unsigned char, unsigned long, unsigned short, struct _GUID *, char *, void *, unsigned long)
fffff802`373cd134 ACPI!ACPIProcessorContainerEvaluateLpiObjects (struct _LIST_ENTRY *, unsigned long *)
fffff802`37385fcc ACPI!OSNotifyCreateProcessor (struct _NSObjRef *, unsigned int64)
fffff802`373896a0 ACPI!WPP_RECORDER_SF_IqL (void *, unsigned int64, void *, unsigned long)
fffff802`374090d0 ACPI!ACPIEjectPnpLocationInterface (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3742c410 ACPI!ACPIRegDumpAcpiTables (void)
fffff802`37405810 ACPI!IrqArbTestAllocation (struct _ARBITER_INSTANCE *, struct _ARBITER_TEST_ALLOCATION_PARAMETERS *)
fffff802`373c18a0 ACPI!ACPIDevicePowerProcessPhase5SystemSubPhase5 (struct _ACPI_POWER_REQUEST *)
fffff802`373a1668 ACPI!ACPIInternalMoveList (struct _LIST_ENTRY *, struct _LIST_ENTRY *)
fffff802`373c16d0 ACPI!ACPIDevicePowerProcessPhase5SystemSubPhase4 (struct _ACPI_POWER_REQUEST *)
fffff802`373c19b0 ACPI!ACPIDevicePowerProcessPhase5SystemSubPhase6 (struct _ACPI_POWER_REQUEST *)
fffff802`373c1340 ACPI!ACPIDevicePowerProcessPhase5SystemSubPhase1 (struct _ACPI_POWER_REQUEST *)
fffff802`373c1520 ACPI!ACPIDevicePowerProcessPhase5SystemSubPhase3 (struct _ACPI_POWER_REQUEST *)
fffff802`373c6270 ACPI!ACPIInternalWaitWakeLoop (struct _DEVICE_OBJECT *, unsigned char, union _POWER_STATE, void *, struct _IO_STATUS_BLOCK *)
fffff802`373c1450 ACPI!ACPIDevicePowerProcessPhase5SystemSubPhase2 (struct _ACPI_POWER_REQUEST *)
fffff802`3738cb1c ACPI!ACPIPowerScheduleDpc (void)
fffff802`3741d690 ACPI!ACPIBusAndFilterIrpQueryEjectRelations (struct _DEVICE_OBJECT *, struct _IRP *, struct _DEVICE_RELATIONS **)
fffff802`37399bc4 ACPI!AMLIIsObjectInGivenScope (struct _NSObjRef *, struct _NSObjRef *)
fffff802`373d5314 ACPI!GetRegionSpaceName (unsigned char)
fffff802`3739daa0 ACPI!AcpiRootIsFeatureSupported (char *)
fffff802`37410430 ACPI!ACPIGetPnpLocationString (void *, wchar_t **)
fffff802`373c36b8 ACPI!ACPIEcCreateEcData (void)
fffff802`37381ba0 ACPI!AcpiDiagTraceThermalNotification (struct _THERMAL_INFORMATION_EX *, struct _DEVICE_EXTENSION *, unsigned short)
fffff802`373daf90 ACPI!Wait (struct _ctxt *, struct _term *)
fffff802`37400140 ACPI!AcpiSdevIdentifierInterface_GetIdentifier (void *)
fffff802`373d0fc4 ACPI!ACPIVectorInstall (unsigned long, struct _GPE_VECTOR_OBJECT *)
fffff802`373d39e4 ACPI!Simulator_Free_Arguments (int, struct _ObjData *)
fffff802`3737e64c ACPI!WPP_RECORDER_SF_qq (void *, unsigned char, unsigned long, unsigned short, struct _GUID *, void *, void *)
fffff802`37426580 ACPI!LinkNodeFindByNsObj (struct _NSObjRef *, struct LINK_NODE_EXTENSION **)
fffff802`3739c840 ACPI!ACPIBuildSurpriseRemovedExtension (struct _DEVICE_EXTENSION *)
fffff802`3737c650 ACPI!ACPIMarkPagingPathPowerNodeEnum (struct _ACPI_POWER_DEVICE_NODE *, _DEVICE_POWER_STATE, void *)
fffff802`3739c2e0 ACPI!PrintDebugMessage (unsigned long, unsigned int64, unsigned int64, unsigned int64, unsigned int64)
fffff802`3742c584 ACPI!ACPIRegDumpAcpiTable (char *, void *, unsigned long, struct _DESCRIPTION_HEADER *)
fffff802`3740854c ACPI!AcpiIrqLibEjectArbiterInterface (struct _IRP *)
fffff802`37389ee0 ACPI!ACPIGpeValidIndex (unsigned long)
fffff802`373a0c10 ACPI!AcpiHandleDeviceFirmwareLock (struct _AML_MUTEX_OPERATION_BUFFER *)
fffff802`3737f00c ACPI!WPP_RECORDER_SF_Dq (void *, unsigned short, unsigned int, void *)
fffff802`37376360 ACPI!CreateNameSpaceObject (struct _heap *, char *, struct _NSObj *, struct _objowner *, struct _NSObj **, unsigned long)
fffff802`3741ccd4 ACPI!AcpiArblibCommitResources (struct _ACPI_ARBITER_INSTANCE *, struct _CM_RESOURCE_LIST *)
fffff802`37409450 ACPI!ACPIBusIrpDeviceEnumerated (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373a06dc ACPI!ACPIIoctlRegisterDeviceFirmwareLock (struct _DEVICE_OBJECT *, struct _IRP *, struct _IO_STACK_LOCATION *)
fffff802`373a1330 ACPI!ACPIRootPowerCallBack (void *, void *, void *)
fffff802`373bc720 ACPI!ACPIFlushPowerQueueCallback (struct _DEVICE_EXTENSION *, void *, long)
fffff802`37383ef0 ACPI!FindNSObj (unsigned long, struct _NSObj *, struct _NSObj *, struct _NSObj *, struct _ObjData *, unsigned long)
fffff802`373bc858 ACPI!ExFreeToNPagedLookasideList (struct _NPAGED_LOOKASIDE_LIST *, void *)
fffff802`374075a8 ACPI!ACPIInitShutdownNotification (void)
fffff802`3739671c ACPI!ACPIGpeIndexToByteIndex (unsigned long)
fffff802`374248f8 ACPI!PnpiCmResourceToBiosAddressQuad (unsigned char *, struct _CM_RESOURCE_LIST *)
fffff802`37425578 ACPI!ACPIThermalReadTemperature (struct _DEVICE_EXTENSION *, unsigned char)
fffff802`373c2ce0 ACPI!ACPIDispatchPowerIrpBlockedOnDep (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3739d140 ACPI!ACPIInternalQueryExtendedAddress (struct _DEVICE_OBJECT *, unsigned int64 *)
fffff802`373d2200 ACPI!ACPIWakeReleasePmeRouting (void)
fffff802`37411fd0 ACPI!ACPIBusIrpQueryBusInformation (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373967d0 ACPI!ACPIQueryDeviceLockMutexSupport (unsigned long *)
fffff802`374266e0 ACPI!LinkNodepAddAttachedDevice (struct LINK_NODE_EXTENSION *, struct ATTACHED_DEVICE *)
fffff802`37387cc0 ACPI!ACPIInitReferenceDeviceExtension (struct _DEVICE_EXTENSION *)
fffff802`373963cc ACPI!ACPIWriteGpeEnableRegister (unsigned long, unsigned char)
fffff802`37383be0 ACPI!ACPIIoctlEnumChildrenPopulateOutputBuffer (struct _ACPI_ENUM_CHILDREN_OUTPUT_BUFFER *, unsigned long, unsigned long *, struct _ObjData *)
fffff802`373c3360 ACPI!ACPIEcGpioServiceRoutine (struct _KINTERRUPT *, void *)
fffff802`37406b18 ACPI!OSWriteRegValue (char *, void *, void *, unsigned long)
fffff802`3738e888 ACPI!ACPIDeviceCompleteRequest (struct _ACPI_POWER_REQUEST *)
fffff802`37380180 ACPI!ConvertNtStatusToAMLIStatus (long)
fffff802`3740f8b4 ACPI!RegisterExternalTranslatorInterface (struct _RESOURCE_TRANSLATION_INTERFACE_STANDARD *, struct _FILE_OBJECT *, struct _UNICODE_STRING *)
fffff802`373a19e0 ACPI!ACPIIsPowerNodeInTransition (struct _ACPI_POWER_DEVICE_NODE *, _DEVICE_POWER_STATE, void *)
fffff802`373c9340 ACPI!OSNotifyFatalErrorWorker (void *)
fffff802`37386274 ACPI!ACPIConvertStringDelimitation (char *)
fffff802`3739cc50 ACPI!ACPIFilterFastIoDetachCallback (struct _DEVICE_OBJECT *, struct _DEVICE_OBJECT *)
fffff802`3737d38c ACPI!ACPIFanCompletePendingIrps (struct _DEVICE_EXTENSION *, unsigned char)
fffff802`373ff940 ACPI!OSOpenUnicodeHandle (struct _UNICODE_STRING *, void *, void **)
fffff802`3737f0a0 ACPI!GlobalLockEventHandler (unsigned long, unsigned long, unsigned long, <function> *, void *)
fffff802`3737ecdc ACPI!AMLIEvalPkgDataElement (struct _ObjData *, unsigned long, struct _ObjData *)
fffff802`37411390 ACPI!ACPIRootIrpQueryCapabilities (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3737bbac ACPI!ACPIIoctlCalculateOutputBufferV1 (struct _ObjData *, struct _ACPI_METHOD_ARGUMENT_V1 *, unsigned char, unsigned char)
fffff802`3739cf08 ACPI!ACPIInternalInterruptPolarityCacheCleanup (struct _DEVICE_EXTENSION *)
fffff802`37396974 ACPI!ACPIInitializeKernelTableHandler (unsigned char, struct _DRIVER_OBJECT *)
fffff802`37426a68 ACPI!ProcessorUpdateInterruptProperties (unsigned long, _KINTERRUPT_MODE)
fffff802`373bb9d4 ACPI!ACPIBuildMissingEjectionRelations (void)
fffff802`3739b5b0 ACPI!AcpiDiagTraceAmlError (struct _ctxt *, long)
fffff802`373cacc8 ACPI!AcpiConvertPackageArgumentToPackageObj (struct _ACPI_METHOD_ARGUMENT_V1 *, unsigned long *, struct _PackageObj **)
fffff802`3740695c ACPI!ACPIWriteOscSupportToRegistry (unsigned long, unsigned long, unsigned long)
fffff802`373c3cb0 ACPI!ACPIEcStopRemoveDeviceCommon (struct _ECDATA *)
fffff802`373bff54 ACPI!ReleaseDeviceFirmwareLock (struct _DEVICE_FIRMWARE_LOCK_CONTEXT *, void *)
fffff802`37412b20 ACPI!ACPIEnumerateTables (unsigned long *, unsigned long *)
fffff802`374061d4 ACPI!IrqpAllocateInstancePath (struct _DEVICE_OBJECT *, struct _UNICODE_STRING *)
fffff802`373bc784 ACPI!ACPIReserveDependencies (struct _DEVICE_OBJECT *, struct _NSObjRef *)
fffff802`373a11b0 ACPI!ACPIDeviceIrpDeviceFilterRequest (struct _DEVICE_OBJECT *, struct _IRP *, void *)
fffff802`373c2d80 ACPI!ACPIUnload (struct _DRIVER_OBJECT *)
fffff802`3739ca30 ACPI!ACPIFilterIrpRemoveDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37411790 ACPI!ACPIDereferencePnpLocationInterface (void *)
fffff802`37401ef8 ACPI!IrqPolicySetDeviceAffinity (struct _DEVICE_OBJECT *, struct _GROUP_AFFINITY *)
fffff802`3737ac5c ACPI!AMLIGetNameSpaceObject (char *, struct _NSObjRef *, struct _NSObjRef **, unsigned long)
fffff802`3737256c ACPI!AMLIGetNSObjectType (struct _NSObjRef *)
fffff802`37424ab0 ACPI!PnpiCmResourceToBiosGpioInterruptIoDescriptor (unsigned char *, struct _CM_RESOURCE_LIST *)
fffff802`373d8a00 ACPI!Unload (struct _ctxt *, struct _term *)
fffff802`3737c680 ACPI!AcpiTranslatorDereference (void *)
fffff802`37411de0 ACPI!IrqArbPreprocessEntry (struct _ARBITER_INSTANCE *, struct _ARBITER_ALLOCATION_STATE *)
fffff802`373a0510 ACPI!ACPIBuildProcessPowerResourcePhaseDep (struct _ACPI_BUILD_REQUEST *)
fffff802`373c5a4c ACPI!ACPIGetConvertToString (long, struct _ObjData *, unsigned long, void **, unsigned long *)
fffff802`3742d5bc ACPI!IrqLibpParseMadt (struct _MAPIC *)
fffff802`3737efa4 ACPI!IrqLibReleaseArbiterLock (void)
fffff802`37413230 ACPI!_tlgEnableCallback (struct _GUID *, unsigned long, unsigned char, unsigned int64, unsigned int64, struct _EVENT_FILTER_DESCRIPTOR *, void *)
fffff802`374218b0 ACPI!DeRegisterOpRegionHandler (struct _DEVICE_OBJECT *, void *)
fffff802`3739fe50 ACPI!ACPIBuildProcessThermalZoneCheckType (struct _ACPI_BUILD_REQUEST *)
fffff802`3739be68 ACPI!ACPIIoctlRegisterOpRegionHandler (struct _DEVICE_OBJECT *, struct _IRP *, struct _IO_STACK_LOCATION *)
fffff802`37371970 ACPI!AccessBaseField (struct _ctxt *, struct _NSObj *, struct _FieldDesc *, unsigned int64 *, unsigned char)
fffff802`3742134c ACPI!AcpiKsrRestorePersistentContext (unsigned int64)
fffff802`37393210 ACPI!ParseLoad (struct _ctxt *, struct _loadtable *, long)
fffff802`37395390 ACPI!ACPIDeviceIrpWaitWakeRequestPending (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`3738e2ec ACPI!ACPIBuildScheduleDpc (void)
fffff802`3740c760 ACPI!PnpiBiosMemoryToIoDescriptor (unsigned char *, struct _IO_RESOURCE_LIST **, unsigned long)
fffff802`37410690 ACPI!ProcessorpReserveIdtEntriesApic (struct _DEVICE_OBJECT *, struct _IO_RESOURCE_DESCRIPTOR *, unsigned long, struct _IRQ_ARB_ALLOCATION_STATE *, unsigned long, union _IRQ_ARB_MODE_AND_POLARITY, unsigned long, ARBITER_WHICHSTATE, struct _IDT_ASSIGNMENT_SET *)
fffff802`373c68dc ACPI!wil_details_FeatureReporting_IncrementOpportunityInCache (wil_details_ServiceReportingKind, struct wil_details_RecordUsageResult *)
fffff802`37422420 ACPI!ACPIRegReadEntireSimulatorAcpiTable (void *, void **)
fffff802`373c5f80 ACPI!ACPIDeviceIdMutiStringMatchCallback (struct _EM_ENTRY_DATA **, unsigned long, char **, unsigned long, unsigned long *, unsigned long, void *)
fffff802`373ceb20 ACPI!ACPIRootIrpQueryPower (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3738daec ACPI!WPP_RECORDER_SF_ssssssqss (void *, char *, char *, char *, char *, char *, char *, void *, char *, char *)
fffff802`3740a52c ACPI!ACPIThermalCheckPolicySupport (struct _DEVICE_EXTENSION *)
fffff802`3741fc6c ACPI!ACPIIoctlTranslateBiosResources (struct _DEVICE_OBJECT *, struct _IRP *, struct _IO_STACK_LOCATION *)
fffff802`373ce1c8 ACPI!RtlStringCchCatNA (char *, unsigned int64, char *, unsigned int64)
fffff802`37400160 ACPI!ArbAddReserved (struct _ARBITER_INSTANCE *, struct _ARBITER_ADD_RESERVED_PARAMETERS *)
fffff802`3738d52c ACPI!WPP_RECORDER_SF_ (void *, unsigned char, unsigned long, unsigned short, struct _GUID *)
fffff802`373ba640 ACPI!ACPIDockIrpRemoveDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37385320 ACPI!ACPIBuildProcessDevicePhaseHrv (struct _ACPI_BUILD_REQUEST *)
fffff802`373cc590 ACPI!ACPIUnregisterForDeviceNotifications2 (void *)
fffff802`37408160 ACPI!PciGetRootBusCapability (void *, struct _PCI_ROOT_BUS_HARDWARE_CAPABILITY *)
fffff802`37426e94 ACPI!IrqArbUpdateInterruptProperties (unsigned long, _KINTERRUPT_MODE, _KINTERRUPT_POLARITY)
fffff802`37390b88 ACPI!ACPIGetD3Policy (struct _DEVICE_EXTENSION *, unsigned char *)
fffff802`373723d0 ACPI!RtlStringCbPrintfExW (wchar_t *, unsigned int64, wchar_t **, unsigned int64 *, unsigned long, wchar_t *)
fffff802`373b9ee4 ACPI!AcpiDiagTraceRecordAmlEvaluationStatistics (struct _ctxt *)
fffff802`373d62b0 ACPI!DebugRunMethod (struct _cmdarg *, char *, unsigned long, unsigned long)
fffff802`37381910 ACPI!ACPIThermalGetSensorDevice (struct _DEVICE_EXTENSION *)
fffff802`373cc530 ACPI!ACPIUnregisterForDeviceNotifications (struct _DEVICE_OBJECT *, <function> *)
fffff802`37372890 ACPI!WPP_RECORDER_SF_s (void *, unsigned char, unsigned long, unsigned short, struct _GUID *, char *)
fffff802`37393838 ACPI!GetObjectPath (struct _NSObj *)
fffff802`373a1a20 ACPI!__security_check_cookie (void)
fffff802`3740d8f4 ACPI!ACPISystemPowerUpdateWakeCapabilities (struct _DEVICE_EXTENSION *, struct _DEVICE_CAPABILITIES *, _DEVICE_POWER_STATE *, unsigned long *, _SYSTEM_POWER_STATE *, _DEVICE_POWER_STATE *, _DEVICE_POWER_STATE *)
fffff802`3737f3b0 ACPI!WPP_RECORDER_SF_q (void *, unsigned char, unsigned long, unsigned short, struct _GUID *, void *)
fffff802`3741e400 ACPI!ACPIEcOtherIrpDispatch (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373ce6c8 ACPI!WPP_RECORDER_SF_i (void *, unsigned long, unsigned short, struct _GUID *, int64)
fffff802`373cde60 ACPI!WPP_RECORDER_SF_diiidiiii (void *, int, int64, int64, int64, int, int64, int64, int64, int64)
fffff802`3737270c ACPI!WPP_RECORDER_SF_L (void *, unsigned char, unsigned long, unsigned short, struct _GUID *, unsigned long)
fffff802`3740092c ACPI!ACPIInitStopDevice (struct _DEVICE_EXTENSION *, unsigned char)
fffff802`37420f40 ACPI!ACPIPepPowerSettingChangeCallback (struct _GUID *, void *, unsigned long, void *)
fffff802`3742e480 ACPI!ACPILoadTableCheckSum (void *, unsigned long)
fffff802`373d3780 ACPI!Simulator_CallbackWorker (void *, void *, void *)
fffff802`373cd9fc ACPI!WPP_RECORDER_SF_d (void *, unsigned char, unsigned long, unsigned short, struct _GUID *, int)
fffff802`373727d0 ACPI!WPP_RECORDER_SF_D (void *, unsigned char, unsigned long, unsigned short, struct _GUID *, unsigned int)
fffff802`3739e45c ACPI!ACPIPendingInvalidate (struct _DEVICE_EXTENSION *)
fffff802`3737b704 ACPI!ACPIIoctlEvalControlMethod (struct _DEVICE_OBJECT *, struct _IRP *, struct _IO_STACK_LOCATION *)
fffff802`373c2af8 ACPI!AcpiResetDeviceAlreadyProcessed (struct _ACPI_POWER_DEVICE_NODE *, struct _ACPI_DEVICE_POWER_NODE *)
fffff802`373ca86c ACPI!AcpiConvertMethodArgumentsToObjData (struct _ACPI_METHOD_ARGUMENT_V1 *, unsigned int64, unsigned long, struct _ObjData *)
fffff802`374116b0 ACPI!ACPIBusIrpQueryCapabilities (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37386f20 ACPI!PnpiBiosValidateMemoryMapAttribute (unsigned char, unsigned long)
fffff802`3737fc80 ACPI!ACPIEnableInitializeACPI (unsigned char)
fffff802`3739d0d0 ACPI!ACPIInitPowerRequestCompletion (struct _DEVICE_EXTENSION *, void *, long)
fffff802`373bec0c ACPI!ACPICMExperienceButtonHandleEvent (struct _DEVICE_EXTENSION *, unsigned long)
fffff802`3739840c ACPI!ACPIGetConvertToInstanceIDWide (struct _DEVICE_EXTENSION *, long, struct _ObjData *, unsigned long, void **, unsigned long *)
fffff802`373d33a4 ACPI!AMLIIsEqualHandle (struct _NSObjRef *, struct _NSObjRef *)
fffff802`373966a4 ACPI!ACPIReadGpeStatusRegister (unsigned long)
fffff802`3737aa40 ACPI!While (struct _ctxt *, struct _term *)
fffff802`37397a90 ACPI!ACPIGetConvertToCompatibleID (struct _DEVICE_EXTENSION *, long, struct _ObjData *, unsigned long, void **, unsigned long *)
fffff802`373ff780 ACPI!ACPIAllocateBuffer (unsigned int64 *, struct _DEVICE_EXTENSION *, unsigned int64)
fffff802`373ff824 ACPI!ACPIValidateStringVendorDeviceIdFormat (unsigned char *, unsigned int64)
fffff802`3741d360 ACPI!AcpiArblibUnpackResource (struct _CM_PARTIAL_RESOURCE_DESCRIPTOR *, unsigned int64 *, unsigned int64 *)
fffff802`373c8150 ACPI!ACPIIoctlReleaseGlobalLock (struct _IRP *, struct _IO_STACK_LOCATION *)
fffff802`373d3858 ACPI!Simulator_Copy_Arguments (int, struct _ObjData *, struct _ObjData **)
fffff802`3738fac0 ACPI!ACPIBuildProcessRunMethodPhaseCheckPep (struct _ACPI_BUILD_REQUEST *)
fffff802`373d68c0 ACPI!RunMethodCallBack (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`373d44fc ACPI!MarkNativeObjectsDefunct (struct _NSObj *, struct _objowner *)
fffff802`373c3860 ACPI!ACPIEcStartDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3740d614 ACPI!EnableDisableRegions (struct _NSObjRef *, unsigned char, unsigned char)
fffff802`373cdafc ACPI!WPP_RECORDER_SF_dDDL (void *, int, unsigned int, unsigned int, unsigned long)
fffff802`373c97a8 ACPI!AcpiPccAcquireSubspaceCore (void *, <function> *, unsigned int64, struct _PCC_CONTEXT_PASSIVE *)
fffff802`3739a624 ACPI!ACPIAmliPreDefinedRootObjectsNotifyPepDiscoverDevice (void)
fffff802`37373a10 ACPI!Name (struct _ctxt *, struct _term *)
fffff802`373cf058 ACPI!ACPIStopShutdownInProgress (struct _ACPI_SHUTDOWN_NOTIFICATION *)
fffff802`373c8934 ACPI!OSNotifyDeviceCheck (struct _NSObjRef *)
fffff802`373cb058 ACPI!AcpiHandleInternalNotify (struct _NSObjRef *)
fffff802`373d8670 ACPI!TimeoutCallback (struct _KDPC *, void *, void *, void *)
fffff802`373c51e0 ACPI!ACPIFanFSTCallback (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`373994bc ACPI!ACPIPowerNodeDiscoverDependencies (struct _LIST_ENTRY *)
fffff802`3738d2b0 ACPI!ACPIBuildProcessGenericComplete (struct _ACPI_BUILD_REQUEST *)
fffff802`3738a4f0 ACPI!ACPIInternalFindDeviceExtensionNoLock (struct _DEVICE_OBJECT *, struct _DEVICE_EXTENSION *)
fffff802`373d5fb0 ACPI!DebugNotify (struct _cmdarg *, char *, unsigned long, unsigned long)
fffff802`374087d8 ACPI!ACPIIsFilterDebuggingDevice (struct _DEVICE_EXTENSION *)
fffff802`3743056c ACPI!Simulator_NotifyTablesAreLoaded (void)
fffff802`37426bb0 ACPI!ProcessorpRangeConflictCallback (void *, struct _RTL_RANGE *)
fffff802`373c0530 ACPI!ACPIDeviceCompletePhase3Reset (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`37412840 ACPI!ACPIRootIrpQueryDeviceRelations (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37402040 ACPI!IrqArbpPrepareForTestOrConflict (struct _ARBITER_INSTANCE *, struct _LIST_ENTRY *)
fffff802`3741e6fc ACPI!ACPIEcGetGpeVector (struct _ECDATA *)
fffff802`373d826c ACPI!NestAsyncEvalObject (struct _NSObj *, struct _ObjData *, unsigned long, struct _ObjData *, void *)
fffff802`373bfdb8 ACPI!PerformHandlerInvocation (_ACPI_DEVICE_FIRMWARE_LOCK_ACTION_TYPE, struct _DEVICE_FIRMWARE_LOCK_CONTEXT *, struct _DEVICE_FIRMWARE_LOCK_HANDLER_ENTRY *, void *, void *, unsigned long, unsigned long)
fffff802`37423724 ACPI!PnpiBiosAddressQuadToIoDescriptor (unsigned char *, struct _IO_RESOURCE_LIST **, unsigned long, unsigned long)
fffff802`3739ab88 ACPI!ACPIIsPhase3ListEmptyOfUnblockedItems (void)
fffff802`3740058c ACPI!ACPICMButtonStart (struct _DEVICE_OBJECT *, struct _IRP *, unsigned long)
fffff802`37401b18 ACPI!IcGetPossibleInput (unsigned long, unsigned char *)
fffff802`3742c24c ACPI!OSReadAcpiConfigurationData (struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64 **)
fffff802`373720d8 ACPI!ParseString (struct _ctxt *, unsigned char **, struct _ObjData *, unsigned char)
fffff802`373bd380 ACPI!ACPIBusIrpQueryPower (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3737c680 ACPI!AcpiInterfaceDereference (void *)
fffff802`373927d8 ACPI!PushScope (struct _ctxt *, unsigned char *, unsigned char *, unsigned char *, struct _NSObj *, struct _objowner *, struct _heap *, struct _ObjData *)
fffff802`37409a50 ACPI!ACPIInitUnicodeString (struct _UNICODE_STRING *, char *)
fffff802`37426788 ACPI!LinkNodepRunSrs (struct _NSObjRef *, unsigned long)
fffff802`373918b0 ACPI!Field (struct _ctxt *, struct _term *)
fffff802`373ba480 ACPI!ACPIDockIntfDereference (void *)
fffff802`373c7b58 ACPI!ACPIIoctlEvalPreProcessingV2Ex (struct _DEVICE_OBJECT *, struct _IRP *, struct _IO_STACK_LOCATION *, _POOL_TYPE, struct _NSObjRef **, struct _ObjData **, struct _ObjData **, unsigned long *)
fffff802`373cef10 ACPI!ACPIRootIrpSetPower (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373845c0 ACPI!WPP_RECORDER_SF_dqssdddd (void *, unsigned short, int, void *, char *, char *, int, int, int, int)
fffff802`373845c0 ACPI!WPP_RECORDER_SF_Dqssdddd (void *, unsigned short, unsigned int, void *, char *, char *, int, int, int, int)
fffff802`373a0278 ACPI!AcpiDiagTraceConstraintEvent (struct _DEVICE_EXTENSION *, struct _DEVICE_EXTENSION *, struct _EVENT_DESCRIPTOR *, struct _EVENT_DATA_DESCRIPTOR *)
fffff802`3738e334 ACPI!ACPIInternalMovePowerList (struct _LIST_ENTRY *, struct _LIST_ENTRY *)
fffff802`373d3674 ACPI!AMLIValidateFirmwareMemoryAddress (union _LARGE_INTEGER *, unsigned long)
fffff802`37402e50 ACPI!ProcessorpFindAffinitizedIdtEntries (struct _DEVICE_OBJECT *, struct _GROUP_AFFINITY *, unsigned char, unsigned long, unsigned long, union _IRQ_ARB_MODE_AND_POLARITY, ARBITER_WHICHSTATE, unsigned long *)
fffff802`373d0c40 ACPI!ACPIVectorDisable2 (void *, void *)
fffff802`37393590 ACPI!IndexField (struct _ctxt *, struct _term *)
fffff802`37382f1c ACPI!WPP_RECORDER_SF_qqssdddd (void *, unsigned short, void *, void *, char *, char *, int, int, int, int)
fffff802`3741c9c4 ACPI!AcpiTranslateAccessSize (unsigned char, unsigned char, unsigned char)
fffff802`373c0d30 ACPI!ACPIDevicePowerProcessInvalid (struct _ACPI_POWER_REQUEST *)
fffff802`373a0c58 ACPI!AcpiDiagTraceActiveCoolingDevicePower (struct _DEVICE_EXTENSION *, struct _DEVICE_EXTENSION *, unsigned long, unsigned long, unsigned char)
fffff802`373d36e0 ACPI!Simulator_AsyncEvalObjectCallBack (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`373723c0 ACPI!AMLISetNSObjectContext (struct _NSObjRef *, void *)
fffff802`373c4e2c ACPI!WPP_RECORDER_SF_qsD (void *, void *, char *, unsigned int)
fffff802`373c4ca8 ACPI!WPP_RECORDER_SF_qSD (void *, void *, wchar_t *, unsigned int)
fffff802`374069fc ACPI!OSCloseHandle (void *)
fffff802`373c29e8 ACPI!AcpiPlatformLevelDeviceReset (struct _DEVICE_RESET_CONTEXT *)
fffff802`3737fa30 ACPI!WRITE_PM1_CONTROL (unsigned short, unsigned char)
fffff802`3738d5d0 ACPI!WPP_RECORDER_SF_qsL (void *, unsigned long, unsigned short, struct _GUID *, void *, char *, unsigned long)
fffff802`37401640 ACPI!ArbFindSuitableRange (struct _ARBITER_INSTANCE *, struct _ARBITER_ALLOCATION_STATE *)
fffff802`37399d90 ACPI!MapUnmapPhysMem (struct _ctxt *, unsigned int64, unsigned long, unsigned int64 *)
fffff802`3738d858 ACPI!WPP_RECORDER_SF_qss (void *, unsigned char, unsigned long, unsigned short, struct _GUID *, void *, char *, char *)
fffff802`37426c20 ACPI!IrqArbBacktrackAllocation (struct _ARBITER_INSTANCE *, struct _ARBITER_ALLOCATION_STATE *)
fffff802`373d0930 ACPI!ACPIVectorClear (struct _DEVICE_OBJECT *, void *)
fffff802`37372340 ACPI!AMLIGetNSObjectContext (struct _NSObjRef *)
fffff802`37412170 ACPI!ACPIBusIrpDeviceUsageNotification (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37387d60 ACPI!ACPISystemPowerUpdateWakeCapabilitiesForPDOs (struct _DEVICE_EXTENSION *, _DEVICE_POWER_STATE *, unsigned long *, _SYSTEM_POWER_STATE *, _DEVICE_POWER_STATE *, _DEVICE_POWER_STATE *)
fffff802`37399034 ACPI!ACPIDevicePowerProcessGenericPhase (struct _LIST_ENTRY *, <function> ***, unsigned short, unsigned char)
fffff802`3737f1c0 ACPI!ACPIAsyncAcquireGlobalLock (struct _ACPI_GLOBAL_LOCK *)
fffff802`373916c0 ACPI!ParseNameObj (struct _ctxt *, struct _ObjData *)
fffff802`373bfd70 ACPI!GenericDeviceFirmwareLockCompletion (void *, long)
fffff802`3741f9b4 ACPI!ACPIInitMultiString (struct _UNICODE_STRING *)
fffff802`373d6e40 ACPI!BankField (struct _ctxt *, struct _term *)
fffff802`37400a84 ACPI!ACPIProcessorBuildBootApicIds (void)
fffff802`3737e8b4 ACPI!LinkNodeCrackPrt (struct _DEVICE_OBJECT *, struct LINK_NODE_EXTENSION **, unsigned long *, unsigned char)
fffff802`37394f40 ACPI!ThermalZone (struct _ctxt *, struct _term *)
fffff802`37392a90 ACPI!Acquire (struct _ctxt *, struct _term *)
fffff802`373a1594 ACPI!ACPIMatchKernelPorts (struct _DEVICE_EXTENSION *, struct _ObjData *)
fffff802`373ce8f0 ACPI!ACPINotifyOsShutdownWorker (struct _DEVICE_EXTENSION *)
fffff802`3739efc8 ACPI!WPP_RECORDER_SF_qs (void *, unsigned char, unsigned long, unsigned short, struct _GUID *, void *, char *)
fffff802`373ca4cc ACPI!WPP_RECORDER_SF_ss (void *, char *, char *)
fffff802`37383210 ACPI!ACPISetDeviceWorker (struct _DEVICE_EXTENSION *, unsigned long)
fffff802`37385bc4 ACPI!ACPIBuildDevicePowerNodes (struct _DEVICE_EXTENSION *, struct _NSObjRef *, struct _ObjData *, _DEVICE_POWER_STATE)
fffff802`3737f864 ACPI!ACPIAcquireHardwareGlobalLock (unsigned long *)
fffff802`3741cfb4 ACPI!AcpiArblibInitializeArbiter (struct _DEVICE_EXTENSION *, int, struct _ACPI_ARBITER_INSTANCE **)
fffff802`3742219c ACPI!ACPIRegReadEntireAcpiTable (void *, void **)
fffff802`3739a7f0 ACPI!ACPIBuildIssueInvalidateRelations (void *, void *, long)
fffff802`3739e6f0 ACPI!ACPIBuildProcessPowerResourcePhasePep (struct _ACPI_BUILD_REQUEST *)
fffff802`37406924 ACPI!IcIsInputValid (unsigned long)
fffff802`3739db30 ACPI!IrqLibpGetVectorInput (unsigned long, struct _GROUP_AFFINITY *, unsigned long *, _KINTERRUPT_POLARITY *, struct _INTERRUPT_REMAPPING_INFO *)
fffff802`3741c65c ACPI!WppCleanupKm (struct _DRIVER_OBJECT *)
fffff802`374018c0 ACPI!ACPIThermalBuildConstraints (struct _NSObjRef *, struct _DEVICE_EXTENSION *, unsigned char, unsigned long)
fffff802`3738174c ACPI!ACPIBuildProcessDelayedDependencyExternalTrigger (struct _DEVICE_EXTENSION *)
fffff802`3739a144 ACPI!WPP_RECORDER_SF_Ds (void *, unsigned int, char *)
fffff802`37395d8c ACPI!CLEAR_PM1_STATUS_BITS (unsigned short)
fffff802`373c0130 ACPI!ACPIDeviceCancelWaitWakeIrp (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37396e94 ACPI!ACPIGetProcessorStatus (struct _DEVICE_EXTENSION *, unsigned long *)
fffff802`373c6d3c ACPI!ACPIInternalGetDeviceFromNSOBJ (struct _NSObjRef *, struct _DEVICE_OBJECT **, _ACPI_DEVICE_STATE *)
fffff802`37382c14 ACPI!ACPIThermalCompletePendingIrps (struct _DEVICE_EXTENSION *)
fffff802`373874b0 ACPI!IsPciBusAsyncWorker (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`3740c110 ACPI!ACPIFilterIrpQueryResourceRequirements (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37422794 ACPI!OSOpenLargestSubkey (void *, void **, unsigned long)
fffff802`373c6618 ACPI!ACPIInitRemovePowerNodes (struct _DEVICE_EXTENSION *)
fffff802`373b93c8 ACPI!AcpiDiagOverrideAttribute (unsigned short)
fffff802`3737ff08 ACPI!wil_details_FeatureReporting_ReportUsageToServiceDirect (int, int, wil_details_ServiceReportingKind)
fffff802`37400170 ACPI!ArbPreprocessEntry (struct _ARBITER_INSTANCE *, struct _ARBITER_ALLOCATION_STATE *)
fffff802`37394c50 ACPI!OSInterface (struct _ctxt *, struct _term *)
fffff802`3741f7e0 ACPI!ACPIFilterIrpSetLock (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373c9b80 ACPI!AcpiPccExecuteCommandAsync (void *, unsigned char, <function> *, unsigned int64)
fffff802`3737c680 ACPI!PciConfigLineToPin (void *, struct _PCI_COMMON_CONFIG *, struct _PCI_COMMON_CONFIG *)
fffff802`37427ac0 ACPI!ArbOverrideConflict (struct _ARBITER_INSTANCE *, struct _ARBITER_ALLOCATION_STATE *)
fffff802`3740c998 ACPI!PnpiBiosAddressHandleGlobalFlags (void *, struct _IO_RESOURCE_LIST **, unsigned long, struct _IO_RESOURCE_DESCRIPTOR *)
fffff802`373db604 ACPI!DbgParseArgs (struct _cmdarg *, unsigned long *, unsigned long *, char **)
fffff802`3741205c ACPI!ProcessorIdtEntryToGsiv (unsigned long, struct _GROUP_AFFINITY *, unsigned long *)
fffff802`37411e70 ACPI!IrqArbUnpackRequirement (struct _IO_RESOURCE_DESCRIPTOR *, unsigned int64 *, unsigned int64 *, unsigned int64 *, unsigned int64 *)
fffff802`3741df30 ACPI!ACPIInterfaceDereferenceDeviceExtension (void *)
fffff802`37378f90 ACPI!ParseSuperName (struct _ctxt *, struct _ObjData *, unsigned char, unsigned char *)
fffff802`3742de1c ACPI!NotifyHalWithMachineStatesAndRetrieveInterruptModel (_INTERRUPT_MODEL *)
fffff802`3737f7c0 ACPI!_tlgWriteTransfer_EtwWriteTransfer (struct _tlgProvider_t *, void *, unsigned int, struct _EVENT_DATA_DESCRIPTOR *)
fffff802`37406a18 ACPI!OSCreateHandle (char *, void *, void **)
fffff802`37403390 ACPI!ProcessorGetDeviceIdtAssignment (struct _DEVICE_OBJECT *, unsigned long, ARBITER_WHICHSTATE, struct _IDT_ASSIGNMENT_SET *)
fffff802`3742b558 ACPI!Simulator_InitializeInterface (void)
fffff802`373924c4 ACPI!ParseIntObj (struct _ctxt *, unsigned char **, struct _ObjData *, unsigned char)
fffff802`373c770c ACPI!ACPIIoctlEvalPostProcessingV2 (struct _IRP *, struct _ObjData *, unsigned char)
fffff802`3737b9d8 ACPI!ACPIIoctlEvalPostProcessingV1 (struct _IRP *, struct _ObjData *, unsigned char)
fffff802`373da060 ACPI!ProcessLoadTable (struct _ctxt *, struct _post *, long)
fffff802`373d1d50 ACPI!ACPIWakeEnableDisableAsyncCallBack (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`374110fc ACPI!ACPIMatchHardwareId (struct _DEVICE_OBJECT *, struct _UNICODE_STRING *, unsigned char *)
fffff802`373965d4 ACPI!ACPIGpeClearRegisters (void)
fffff802`37424dc0 ACPI!ACPIRootIrpQueryRemoveOrStopDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37380388 ACPI!ACPIInitRemoveDeviceExtension (struct _DEVICE_EXTENSION *)
fffff802`373b970c ACPI!AcpiDiagTraceAmliWatchdogTimeout (struct _AMLI_WATCHDOG *)
fffff802`37421954 ACPI!UnRegisterOperationRegionHandler (struct _NSObjRef *, void *)
fffff802`3737f518 ACPI!WPP_RECORDER_SF_DDDssDssqq (void *, unsigned int, unsigned int, unsigned int, char *, char *, unsigned int, char *, char *, void *, void *)
fffff802`373d4168 ACPI!Simulator_TestNotifyRet (struct _SIMULATOR_DATA *, long)
fffff802`373743e0 ACPI!InsertReadyQueue (struct _ctxt *, unsigned char)
fffff802`37372f90 ACPI!FreeDataBuffs (struct _ObjData *, unsigned long)
fffff802`373d3aec ACPI!Simulator_GetSiblingNode (struct _SIMULATOR_DATA *)
fffff802`3741c230 ACPI!ACPIDockIrpSetLock (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373c3670 ACPI!ACPIEcUnmaskInterrupt (struct _ECDATA *)
fffff802`373dc0f0 ACPI!LinkNodepRunSrsWorker (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`37425860 ACPI!AcpiTranslateBusNumberResource (void *, struct _CM_PARTIAL_RESOURCE_DESCRIPTOR *, _RESOURCE_TRANSLATION_DIRECTION, unsigned long, struct _IO_RESOURCE_DESCRIPTOR *, struct _DEVICE_OBJECT *, struct _CM_PARTIAL_RESOURCE_DESCRIPTOR *)
fffff802`37430794 ACPI!FreellegalIOAddressList (void)
fffff802`373d1640 ACPI!ACPIFreeWaitWakePowerRequest (void *)
fffff802`373a1420 ACPI!ACPIThermalReleaseCoolingInterfaces (struct _DEVICE_EXTENSION *)
fffff802`37421280 ACPI!AcpiKsrCallback (void *, void *, void *)
fffff802`373bc0e0 ACPI!ACPIBuildProcessThermalZoneUid (struct _ACPI_BUILD_REQUEST *)
fffff802`3738fdd0 ACPI!ACPIDevicePowerDpc (struct _KDPC *, void *, void *, void *)
fffff802`3737c670 ACPI!AcpiDeviceResetReference (void *)
fffff802`37392a08 ACPI!CopyObjBuffer (unsigned char *, unsigned long, struct _ObjData *)
fffff802`373bf470 ACPI!ACPIDetectEjectDevices (struct _DEVICE_EXTENSION *, struct _DEVICE_RELATIONS **, struct _DEVICE_EXTENSION *)
fffff802`373930d0 ACPI!Processor (struct _ctxt *, struct _term *)
fffff802`373cf630 ACPI!ACPITableNotifyFreeObject (unsigned long, void *, unsigned long)
fffff802`3740bc68 ACPI!ACPIInternalGrowBuffer (void **, unsigned long, unsigned long)
fffff802`373beaf0 ACPI!ACPICMButtonWaitWakeComplete (struct _DEVICE_OBJECT *, unsigned char, union _POWER_STATE, void *, struct _IO_STATUS_BLOCK *)
fffff802`373d45c0 ACPI!PerformNativeMethodCall (_AML_NATIVE_METHOD_REQUEST_TYPE, struct _ctxt *, struct _call *)
fffff802`37425040 ACPI!ACPIRootWorker (struct _DEVICE_EXTENSION *, unsigned long)
fffff802`37373690 ACPI!FreeNameSpaceObjects (struct _NSObj *)
fffff802`3739fc40 ACPI!ACPIBuildCompleteGeneric (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`37399954 ACPI!ACPIIoctlEvalPreProcessingV1Ex (struct _DEVICE_OBJECT *, struct _IRP *, struct _IO_STACK_LOCATION *, _POOL_TYPE, struct _NSObjRef **, struct _ObjData **, struct _ObjData **, unsigned long *)
fffff802`373d9f10 ACPI!ProcessDivide (struct _ctxt *, struct _post *, long)
fffff802`3737dc64 ACPI!ACPIRegisterForDeviceNotificationsByPowerInfo (struct _ACPI_POWER_INFO *, <function> *, void *)
fffff802`373da640 ACPI!ToBuffer (struct _ctxt *, struct _term *)
fffff802`37381af0 ACPI!AcpiDiagTraceTemperatureTelemetry (struct _DEVICE_EXTENSION *)
fffff802`373ff9e0 ACPI!ACPIRegReadAMLRegistryEntry (void **)
fffff802`37411910 ACPI!ACPIIommuGetDeviceId (void *, unsigned int64, struct _EXT_IOMMU_DEVICE_ID *, unsigned int64 *)
fffff802`374207b0 ACPI!AcpiPccExecuteCommand (void *, unsigned char)
fffff802`373c37d0 ACPI!ACPIEcRemoveDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373d87d0 ACPI!BreakPoint (struct _ctxt *, struct _term *)
fffff802`373baae0 ACPI!ACPIBusIrpSetSystemPowerComplete (struct _DEVICE_OBJECT *, unsigned char, union _POWER_STATE, void *, struct _IO_STATUS_BLOCK *)
fffff802`3741e370 ACPI!ACPIEcInternalControl (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373c0510 ACPI!ACPIDeviceCompleteInterpreterRequest (void *)
fffff802`373d8240 ACPI!EvalMethodComplete (struct _ctxt *, long, struct _syncevent *)
fffff802`37394288 ACPI!ReadBuffField (struct _ctxt *, struct _BuffFieldObj *, struct _FieldDesc *, unsigned int64 *)
fffff802`37425490 ACPI!ACPIThermalQueryWmiDataBlock (struct _DEVICE_OBJECT *, struct _IRP *, unsigned long, unsigned long, unsigned long, unsigned long *, unsigned long, unsigned char *)
fffff802`373d4b74 ACPI!AMLICreateOverrideObjectDep (unsigned char *, unsigned long, struct _ObjData *)
fffff802`373d9298 ACPI!ExprOp2_32 (struct _ctxt *, struct _term *)
fffff802`3741da70 ACPI!ACPIBusIrpQueryBusInformationEIO (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37395514 ACPI!ACPIDereferenceWaitWakePowerRequest (struct _ACPI_POWER_REQUEST *)
fffff802`373d72a0 ACPI!ProcessSleep (struct _ctxt *, struct _sleep *, long)
fffff802`373c5980 ACPI!ACPIGetConvertToSerialIDWide (long, struct _ObjData *, unsigned long, void **, unsigned long *)
fffff802`373767a0 ACPI!ParseCall (struct _ctxt *, struct _call *, long)
fffff802`3738c4fc ACPI!ACPIBuildSpecialSynchronizationRequest (struct _DEVICE_EXTENSION *, <function> *, void *, unsigned long, unsigned char)
fffff802`373a16a0 ACPI!ACPITableLoadNotifyPnp (struct _DEVICE_EXTENSION *, void *, long)
fffff802`37381250 ACPI!AcpiEvaluateBiosMethodsOnPciRootBus (struct _DEVICE_EXTENSION *)
fffff802`37384d90 ACPI!ACPIBuildProcessDevicePhaseHid (struct _ACPI_BUILD_REQUEST *)
fffff802`373d0480 ACPI!AcpiThermalDeviceTargetChange (void *, void *)
fffff802`3738c688 ACPI!ACPIDeviceInternalSynchronizeRequest (struct _DEVICE_EXTENSION *, <function> *, void *)
fffff802`3739f580 ACPI!ACPIBuildProcessPowerResourcePhaseSta (struct _ACPI_BUILD_REQUEST *)
fffff802`37406318 ACPI!IcSetPossibleInput (unsigned long, struct _IDT_ASSIGNMENT_SET *, unsigned char, unsigned char)
fffff802`3738c644 ACPI!ExAllocateFromNPagedLookasideList (struct _NPAGED_LOOKASIDE_LIST *)
fffff802`37394010 ACPI!NewGlobalHeap (struct _heap **)
fffff802`373ff328 ACPI!ACPIBusIrpQueryTargetRelation (struct _DEVICE_OBJECT *, struct _IRP *, struct _DEVICE_RELATIONS **)
fffff802`3737c6b0 ACPI!ACPIInternalRegisterPowerCallBack (struct _DEVICE_EXTENSION *, <function> *)
fffff802`373a1090 ACPI!ACPIBuildFixedButtonExtension (struct _DEVICE_EXTENSION **)
fffff802`373d4fec ACPI!FreeObjOwner (struct _ctxt *, struct _objowner *)
fffff802`373dbed0 ACPI!LinkNodepRestoreIrqRoutingWorker (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`374243a0 ACPI!PnpCmResourcesExcludeSidebandResources (struct _IO_RESOURCE_LIST *, struct _CM_RESOURCE_LIST *, struct _CM_RESOURCE_LIST *, struct _CM_RESOURCE_LIST **, struct _CM_RESOURCE_LIST **)
fffff802`37421dd0 ACPI!AcpiPortarbFindSuitableRange (struct _ARBITER_INSTANCE *, struct _ARBITER_ALLOCATION_STATE *)
fffff802`37393890 ACPI!InitializeNativeNamespace (void)
fffff802`3737de40 ACPI!ACPIDeviceIrpCompleteRequest (struct _DEVICE_EXTENSION *, void *, long)
fffff802`374232dc ACPI!PnpiBiosAddressExtendedToIoDescriptor (unsigned char *, struct _IO_RESOURCE_LIST **, unsigned long, unsigned long)
fffff802`3741cf44 ACPI!AcpiArblibFreeArbiterInstance (struct _ACPI_ARBITER_INSTANCE *)
fffff802`373a01f4 ACPI!AcpiDiagTraceActiveCoolingConstraint (struct _DEVICE_EXTENSION *, struct _DEVICE_EXTENSION *, unsigned char, unsigned char)
fffff802`3737c34c ACPI!ACPIGetConvertToHardwareIDWide (struct _DEVICE_EXTENSION *, long, struct _ObjData *, unsigned long, void **, unsigned long *)
fffff802`373c5bac ACPI!ACPIGetConvertToStringWideWithPrepend (long, struct _ObjData *, unsigned long, void **, unsigned long *)
fffff802`373d9154 ACPI!ExprOp1_32 (struct _ctxt *, struct _term *)
fffff802`37405c08 ACPI!LinkNodeWriteStateToHardware (void)
fffff802`373c8ac8 ACPI!OSNotifyDeviceEject (struct _NSObjRef *)
fffff802`3738ed70 ACPI!ACPIBuildProcessRunMethodPhaseCheckSta (struct _ACPI_BUILD_REQUEST *)
fffff802`3738a470 ACPI!ACPIBuildCompleteCommon (unsigned long *, unsigned long)
fffff802`373d98c0 ACPI!MatchData_32 (unsigned long, unsigned long, unsigned long)
fffff802`37380570 ACPI!ACPIDispatchIrpDepPdoQueryID (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37391ea0 ACPI!ParsePackage (struct _ctxt *, struct _package *, long)
fffff802`373cc790 ACPI!EnableDisableRegionSpacesForDevice (struct _DEVICE_EXTENSION *, unsigned char)
fffff802`37372e30 ACPI!ACPIRootIrpCompleteRoutine (struct _DEVICE_OBJECT *, struct _IRP *, void *)
fffff802`373cb1d0 ACPI!AcpiNativeMethodEvalRequestHandler (struct _AML_NATIVE_METHOD_REQUEST_BUFFER *)
fffff802`3737236c ACPI!AMLIGetNSObjectNameSegment (struct _NSObjRef *)
fffff802`373da510 ACPI!ProcessWait (struct _ctxt *, struct _post *, long)
fffff802`37396a90 ACPI!ACPIGetWorkerForInteger (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`373ff190 ACPI!ACPIBusIrpQueryDeviceRelations (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373c7584 ACPI!ACPIIoctlCalculateOutputBufferV2 (struct _ObjData *, struct _ACPI_METHOD_ARGUMENT_V2 *, unsigned char, unsigned char)
fffff802`373d90b0 ACPI!Divide (struct _ctxt *, struct _term *)
fffff802`3740d280 ACPI!PnpiBiosPortToIoDescriptor (unsigned char *, struct _IO_RESOURCE_LIST **, unsigned long, unsigned long)
fffff802`37404bf4 ACPI!OSGetRegistryValue (void *, wchar_t *, struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64 **)
fffff802`373d2264 ACPI!ACPIWakeRestoreEnables (void *)
fffff802`3738c784 ACPI!ACPIDeviceInitializePowerRequest (struct _DEVICE_EXTENSION *, union _POWER_STATE, <function> *, void *, POWER_ACTION, ACPI_POWER_REQUEST_TYPE, unsigned long)
fffff802`37425da0 ACPI!TranslateBridgeResources (void *, struct _CM_PARTIAL_RESOURCE_DESCRIPTOR *, _RESOURCE_TRANSLATION_DIRECTION, unsigned long, struct _IO_RESOURCE_DESCRIPTOR *, struct _DEVICE_OBJECT *, struct _CM_PARTIAL_RESOURCE_DESCRIPTOR *)
fffff802`3741dd00 ACPI!ACPIBusIrpSetLock (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3742e904 ACPI!ACPILoadAddDynamicDataBlockTable (void *, unsigned char)
fffff802`37381e40 ACPI!ACPIBuildProcessPowerResourcePhaseSetupOnOff (struct _ACPI_BUILD_REQUEST *)
fffff802`3739491c ACPI!ReadSystemMem (unsigned int64, unsigned long, unsigned int64)
fffff802`3737a6f0 ACPI!Store (struct _ctxt *, struct _term *)
fffff802`374252e8 ACPI!AcpiSdevIdentifierInterface (struct _DEVICE_OBJECT *, struct _IO_STACK_LOCATION *)
fffff802`3741bf70 ACPI!ACPIDockIrpQueryInterface (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373c5df0 ACPI!ACPIGpeHalEnableDisableEvents (unsigned char)
fffff802`37381560 ACPI!AMLIGetNameSpaceObjectPath (struct _NSObjRef *, char *, unsigned long *)
fffff802`373bc3f4 ACPI!ACPIBuildSynchronizationRequest (struct _DEVICE_EXTENSION *, <function> *, void *, unsigned char)
fffff802`37404e68 ACPI!IrqArbGetDeviceIrql (struct _INTERRUPT_VECTOR_DATA *, unsigned char *)
fffff802`37401fe4 ACPI!LinkNodeCopyData (ARBITER_WHICHSTATE)
fffff802`373a0e20 ACPI!ACPIBuildProcessThermalZonePep (struct _ACPI_BUILD_REQUEST *)
fffff802`373bafbc ACPI!ACPIBuildDeviceResetPowerNode (struct _DEVICE_EXTENSION *, struct _NSObjRef *, struct _ObjData *)
fffff802`3741156c ACPI!ACPISystemPowerProcessRootMapping (struct _DEVICE_EXTENSION *, _DEVICE_POWER_STATE *)
fffff802`3740e218 ACPI!ACPIProcessPhysicalDeviceLocation (struct _DEVICE_EXTENSION *, struct _ACPI_PLD_V2_BUFFER *, struct _ACPI_PLD_DESCRIPTORS *)
fffff802`3742d554 ACPI!IrqPolicyUpdatePolicy (void)
fffff802`3737cfa0 ACPI!AcpiDiagTraceFanEvent (struct _DEVICE_EXTENSION *, struct _EVENT_DESCRIPTOR *, unsigned long, struct _EVENT_DATA_DESCRIPTOR *)
fffff802`3742d414 ACPI!AcpiIrqLibConfigureLibrary (_INTERRUPT_MODEL, struct _MAPIC *)
fffff802`3739d8a0 ACPI!ACPIThermalReevaluateConstraintsWorker (void *, void *, struct _IO_WORKITEM *)
fffff802`374213d0 ACPI!AcpiTranslatePepDeviceControlResources (struct _TRANSLATE_PEP_DEVICE_CONTROL_RESOURCES_PARAMETERS *)
fffff802`37394734 ACPI!WriteBuffField (struct _ctxt *, struct _BuffFieldObj *, struct _FieldDesc *, unsigned int64)
fffff802`3737c680 ACPI!_guard_check_icall_nop (unsigned int64)
fffff802`373a1da0 ACPI!memcmp (void)
fffff802`373c87c4 ACPI!ACPICheckModuleStarted (struct _DEVICE_EXTENSION *, long)
fffff802`373d2dc0 ACPI!AmliWatchdog (struct _KDPC *, void *, void *, void *)
fffff802`3738e630 ACPI!ACPIBuildProcessDeviceGenericEval (struct _ACPI_BUILD_REQUEST *)
fffff802`373a1b70 ACPI!ext_ms_win_ntos_ksr_l1_1_3_KsrFreePersistedMemoryBlock (struct _GUID *, unsigned int64, unsigned char)
fffff802`373a0100 ACPI!ACPITableLoadCallBack (void *, void *, long)
fffff802`37420720 ACPI!AcpiPccAcquireSubspace (void *)
fffff802`37426960 ACPI!IrqTransGetInterruptVector (_INTERFACE_TYPE, unsigned long, unsigned long, unsigned long, unsigned char *, unsigned int64 *)
fffff802`37422db0 ACPI!PnpiAddSidebandResources (struct _IO_RESOURCE_REQUIREMENTS_LIST *, struct _IO_RESOURCE_REQUIREMENTS_LIST *, struct _IO_RESOURCE_REQUIREMENTS_LIST *, unsigned long *, struct _IO_RESOURCE_LIST *, unsigned long *)
fffff802`3737c680 ACPI!DummyCallBack (void *)
fffff802`373d6760 ACPI!PrintIndent (struct _ctxt *)
fffff802`373d0b70 ACPI!ACPIVectorDisable (struct _DEVICE_OBJECT *, void *)
fffff802`373d5170 ACPI!FreeObjOwnerTimeout (struct _KDPC *, void *, void *, void *)
fffff802`374003d0 ACPI!ACPICMPowerButtonStart (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3741b230 ACPI!ACPIDockIrpEject (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37394ae0 ACPI!SupportsOnlyRawAccess (struct _ObjData *)
fffff802`373d368c ACPI!Simulator_AllocAndInitTestData (void)
fffff802`373bf7ec ACPI!AcquireDeviceFirmwareLock (struct _DEVICE_FIRMWARE_LOCK_CONTEXT *, void *, struct _NSObjRef *, void *, unsigned long, unsigned short)
fffff802`373c9008 ACPI!OSNotifyDeviceWakeByInterrupt (struct _ACPI_POWER_WAKE_INTERRUPT *)
fffff802`374059d0 ACPI!IrtRemapNewMsiAssignments (struct _ARBITER_INSTANCE *)
fffff802`3741e534 ACPI!ACPIEcConnectGpioInterrupt (struct _ECDATA *)
fffff802`37427440 ACPI!ArbAddInaccessibleAllocationRange (struct _ARBITER_INSTANCE *, struct _RTL_RANGE_LIST *)
fffff802`373bf308 ACPI!CmosGetOpRegionType (struct _NSObjRef *, void *)
fffff802`3738a714 ACPI!ACPIFilterRemoveNonPresentDevices (struct _DEVICE_EXTENSION *, struct _DEVICE_RELATIONS *)
fffff802`3739aa5c ACPI!PnpBiosScanForWakeInterrupt (unsigned char *, unsigned long)
fffff802`373d0104 ACPI!ACPIThermalStopZone (struct _DEVICE_EXTENSION *)
fffff802`373862a0 ACPI!EnableDisableCMOSRegions (struct _NSObjRef *)
fffff802`373d2e68 ACPI!AmliWatchdogInitiateLiveDump (struct _AMLI_WATCHDOG *)
fffff802`37400190 ACPI!WppLoadTracingSupport (void)
fffff802`37399e04 ACPI!MapPhysMem (unsigned int64, unsigned long, unsigned int64 *)
fffff802`374000e0 ACPI!BootCompleteCallback (struct _DRIVER_OBJECT *, void *, unsigned long)
fffff802`37393ff8 ACPI!ACPIAssert (unsigned long, unsigned long, unsigned long)
fffff802`373a1b7c ACPI!AccessFieldData (struct _ctxt *, struct _ObjData *, struct _FieldDesc *, unsigned int64 *, unsigned char)
fffff802`373c7164 ACPI!ACPIIoctlAsyncEvalControlMethod (struct _DEVICE_OBJECT *, struct _IRP *, struct _IO_STACK_LOCATION *)
fffff802`37401328 ACPI!ACPIProcessPhysicalDeviceLocationPackage (struct _ObjData *, struct _ACPI_PLD_V2_BUFFER *, struct _ACPI_PLD_DESCRIPTOR *)
fffff802`373d5958 ACPI!PerformDLMObjectBindings (struct _ObjData *, struct _NSObj *)
fffff802`3741e8ac ACPI!ACPIEcGetResources (struct _CM_RESOURCE_LIST *, struct _CM_RESOURCE_LIST *, struct _ECDATA *)
fffff802`373c9ea4 ACPI!AcpiPccPlatformNotification (struct _ACPI_PCC_SUBSPACE *)
fffff802`373816e0 ACPI!AcpiFanEjectInterface (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373d7bc8 ACPI!RawFieldAccess (struct _ctxt *, unsigned long, struct _ObjData *, struct _ObjData *)
fffff802`374051a0 ACPI!ArbBootAllocation (struct _ARBITER_INSTANCE *, struct _ARBITER_BOOT_ALLOCATION_PARAMETERS *)
fffff802`3742e840 ACPI!ACPIInitializeDDBs (void)
fffff802`37405c6c ACPI!IrtClearDeletedMsiMappings (struct _ARBITER_INSTANCE *)
fffff802`373bad7c ACPI!WPP_RECORDER_SF_LLss (void *, unsigned long, unsigned long)
fffff802`373d5af0 ACPI!AMLIDebugger (unsigned char)
fffff802`373bcb5c ACPI!WPP_RECORDER_SF_sLqss (void *, unsigned short, char *, unsigned long, void *, char *, char *)
fffff802`373bf444 ACPI!_ACPIInternalError (unsigned long)
fffff802`3738e180 ACPI!WPP_RECORDER_SF_qLqss (void *, unsigned char, unsigned long, unsigned short, struct _GUID *, void *, unsigned long, void *, char *, char *)
fffff802`3741ed64 ACPI!AcpiExternalAddBiosNameDeviceAssociation (struct _UNICODE_STRING *, struct _DEVICE_OBJECT *)
fffff802`3741b130 ACPI!ACPIDockIntfSetMode (void *, PROFILE_DEPARTURE_STYLE)
fffff802`37392d64 ACPI!CreateNativeNameSpaceObject (struct _heap *, char *, struct _NSObj *, struct _NSObj *, struct _NSObj *, struct _objowner *, struct _NSObj **)
fffff802`373c88e0 ACPI!OSNotifyCreateOperationRegionWorker (void *)
fffff802`3738b83c ACPI!ACPIBuildDeviceExtension (struct _NSObjRef *, struct _DEVICE_EXTENSION *, struct _DEVICE_EXTENSION **)
fffff802`373c4fe0 ACPI!ACPIFanCancelRequest (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373908a0 ACPI!WPP_RECORDER_SF_LLqss (void *, unsigned char, unsigned short, unsigned long, unsigned long, void *, char *, char *)
fffff802`373d3f8c ACPI!Simulator_Pre_RegEventHandler (unsigned long, unsigned int64, <function> **, unsigned int64 *, struct _SIMULATOR_DATA **)
fffff802`3741e15c ACPI!AcpiUnregisterDeviceFirmwareLockHandler (unsigned long, <function> *)
fffff802`373a0830 ACPI!ACPIDispatchWmiLog (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37411f4c ACPI!ACPIInternalGetDeviceCapabilities (struct _DEVICE_OBJECT *, struct _DEVICE_CAPABILITIES *)
fffff802`373d8148 ACPI!AsyncCallBack (struct _ctxt *, long)
fffff802`373cf41c ACPI!WPP_RECORDER_SF_DLqss (void *, unsigned int, unsigned long, void *, char *, char *)
fffff802`3738dd7c ACPI!WPP_RECORDER_SF_dLqss (void *, int, unsigned long, void *, char *, char *)
fffff802`374116d4 ACPI!ACPIIrpInvokeDispatchRoutine (struct _DEVICE_OBJECT *, struct _IRP *, <function> *, unsigned char)
fffff802`373a1000 ACPI!ACPIDispatchPowerIrpInvalid (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373a1b60 ACPI!ext_ms_win_ntos_ksr_l1_1_3_KsrQueryMetadata (struct _GUID *, unsigned int64, void *, unsigned long, unsigned long *)
fffff802`373d8d80 ACPI!ConcatenateResTemplate (struct _ctxt *, struct _term *)
fffff802`373a0430 ACPI!ACPIGetWorkerForNothing (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`373d2570 ACPI!WPP_RECORDER_SF_LsLLqss (void *, unsigned long, char *, unsigned long, unsigned long, void *, char *, char *)
fffff802`373daa90 ACPI!ToHexStr (struct _ctxt *, struct _term *)
fffff802`373c9270 ACPI!OSNotifyFatalError (unsigned long, unsigned long, unsigned long, unsigned int64, unsigned int64)
fffff802`3740e038 ACPI!ACPIBuildFlushQueue (struct _DEVICE_EXTENSION *, unsigned char)
fffff802`3742b744 ACPI!ACPIInitRecordEmOverrides (void)
fffff802`37422b8c ACPI!OSReadNextRegValue (void *, unsigned long, char *, unsigned long *)
fffff802`37391d54 ACPI!ParseObjName (struct _ctxt *, unsigned char **, struct _ObjData *, unsigned char)
fffff802`37400b74 ACPI!ACPIGetUsedDebuggingDevices (void)
fffff802`3738ae90 ACPI!ACPIExtListEnumNext (struct EXTENSIONLIST_ENUMDATA *)
fffff802`373c9f50 ACPI!AcpiPccPlatformNotificationWorker (void *, void *, struct _IO_WORKITEM *)
fffff802`37427d60 ACPI!ArbQueryConflict (struct _ARBITER_INSTANCE *, struct _ARBITER_QUERY_CONFLICT_PARAMETERS *)
fffff802`3740d318 ACPI!PnpiUpdateResourceList (struct _IO_RESOURCE_LIST **, struct _IO_RESOURCE_DESCRIPTOR **)
fffff802`373d5718 ACPI!ParseDLMObjectInternal (struct _NSObj *, struct _ObjData *, struct _ObjData *)
fffff802`373d34e0 ACPI!AMLIRestartContext (void *)
fffff802`3740e0d4 ACPI!ACPIDevicePowerDetermineSupportedDeviceStates (struct _DEVICE_EXTENSION *, unsigned long *, unsigned long *)
fffff802`373d6180 ACPI!DebugOutPort (char *, unsigned long)
fffff802`3742dc68 ACPI!AMLIGetEmOverride (void)
fffff802`37387efc ACPI!PciConfigInternal (struct _NSObjRef *, <function> *, void *, unsigned char *)
fffff802`3737efcc ACPI!IrqLibAcquireArbiterLock (unsigned char)
fffff802`373c84e0 ACPI!IpmiOpRegionHandler (struct _ACPI_REGION_ACCESS_INFORMATION *, void *, unsigned long *, unsigned int64, <function> *, void *)
fffff802`37396a48 ACPI!ACPIInternalInterruptHonorBiosPolarities (void)
fffff802`373cd560 ACPI!ACPIProcessorContainerStartDeviceCompletion (struct _DEVICE_EXTENSION *, void *, long)
fffff802`3741eeb0 ACPI!AcpiExternalTranslateBiosToNtResources (struct _DEVICE_OBJECT *, void *, unsigned long, unsigned long, struct _IO_RESOURCE_DESCRIPTOR *)
fffff802`3738451c ACPI!GetBaseObject (struct _NSObj *)
fffff802`373d4dfc ACPI!AMLIGetValidNamespaceName (char *, unsigned long *)
fffff802`373a07f4 ACPI!FindDeviceFirmwareLockHandlerEntryLocked (unsigned long, <function> *, struct _DEVICE_FIRMWARE_LOCK_HANDLER_ENTRY *)
fffff802`37425370 ACPI!AcpiSearchSdevTable (struct _SDEV *, struct _UNICODE_STRING *, unsigned long *)
fffff802`37400640 ACPI!PnpCmResourcesToBiosResources (struct _DEVICE_EXTENSION *, struct _CM_RESOURCE_LIST *, unsigned char *, unsigned long)
fffff802`373d9880 ACPI!Match (struct _ctxt *, struct _term *)
fffff802`37410f10 ACPI!IrqArbAllocateEntry (struct _ARBITER_INSTANCE *, struct _ARBITER_ALLOCATION_STATE *)
fffff802`37372350 ACPI!ACPIInternalSetFlags (unsigned int64 *, unsigned int64)
fffff802`37401210 ACPI!ACPIFilterIrpStartDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373d3394 ACPI!AMLIGetNSObjectData (struct _NSObjRef *)
fffff802`374038c0 ACPI!PcisuppIsPciDevice (struct _DEVICE_OBJECT *, unsigned char *)
fffff802`373a0f20 ACPI!AcpiDeviceResetInterface (struct _DEVICE_OBJECT *, struct _IRP *, void *, unsigned char)
fffff802`37424c24 ACPI!ACPIEvaluateOscMethodOnRootBus (unsigned char)
fffff802`3739e3d0 ACPI!ACPIBuildIssueNotifyInvalidateRelations (void *, void *, long)
fffff802`37384548 ACPI!ACPIIsPowerNodeMissingDependencies (struct _ACPI_POWER_DEVICE_NODE *)
fffff802`373b9330 ACPI!AcpiDiagEnumCoolingDevices (struct THRM_INFO *, unsigned char, unsigned long, struct _EVENT_DATA_DESCRIPTOR *, unsigned long *)
fffff802`37400110 ACPI!ACPIReferenceIommuBusInterface (void *)
fffff802`37381f9c ACPI!WPP_RECORDER_SF_qDqssdddd (void *, unsigned short, void *, unsigned int, void *, char *, char *, int, int, int, int)
fffff802`37383e20 ACPI!FindNSObjMainNoLock (char *, struct _NSObj *, struct _ObjData *, unsigned long)
fffff802`37404670 ACPI!IcClearPossibleData (void)
fffff802`373879f4 ACPI!GetOpRegionScope (struct _NSObjRef *, void *, struct _NSObjRef **)
fffff802`373d4970 ACPI!AMLIApplyNextNamespaceOverride (struct _NSObj *, struct _NSObj *)
fffff802`37422638 ACPI!OSOpenAMLINamespaceOverrideHandle (void **)
fffff802`373947d4 ACPI!WriteSystemMem (unsigned int64, unsigned long, unsigned int64, unsigned int64)
fffff802`37389678 ACPI!ACPIInitDereferenceDeviceExtensionLocked (struct _DEVICE_EXTENSION *)
fffff802`37400c00 ACPI!ACPIBusIrpStartDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3738308c ACPI!WPP_RECORDER_SF_ddqssdddd (void *, unsigned short, int, int, void *, char *, char *, int, int, int, int)
fffff802`373da6c0 ACPI!ToDecStr (struct _ctxt *, struct _term *)
fffff802`3737f470 ACPI!WPP_RECORDER_SF_DDq (void *, unsigned int, unsigned int, void *)
fffff802`373cbfbc ACPI!WPP_RECORDER_SF_qDD (void *, void *, unsigned int, unsigned int)
fffff802`374264b8 ACPI!LinkNodeFindByName (unsigned char *, struct LINK_NODE_EXTENSION **)
fffff802`37427654 ACPI!ArbAddMmConfigRangeAsBootReserved (struct _ARBITER_INSTANCE *, struct _RTL_RANGE_LIST *)
fffff802`37398970 ACPI!ACPIBuildProcessRunMethodPhaseCheckBridge (struct _ACPI_BUILD_REQUEST *)
fffff802`3739306c ACPI!ParseLocalObj (struct _ctxt *, struct _ObjData *)
fffff802`3742ca38 ACPI!IrqLibpSetSciConnectionData (struct _INTERRUPT_VECTOR_DATA *, struct _DEVICE_OBJECT *)
fffff802`373a1900 ACPI!ACPIDispatchIrpSurpriseRemoved (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373d9e30 ACPI!ObjTypeSizeOf (struct _ctxt *, struct _term *)
fffff802`3739ed68 ACPI!WPP_RECORDER_SF_DDD (void *, unsigned char, unsigned long, unsigned short, struct _GUID *, unsigned int, unsigned int, unsigned int)
fffff802`373871c8 ACPI!WPP_RECORDER_SF_dDD (void *, unsigned short, int, unsigned int, unsigned int)
fffff802`373c937c ACPI!WPP_RECORDER_SF_LDL (void *, unsigned long, unsigned int, unsigned long)
fffff802`373cc5b0 ACPI!DispatchNotificationWorker (void *)
fffff802`37386d98 ACPI!WPP_RECORDER_SF_ddL (void *, unsigned char, unsigned short, int, int, unsigned long)
fffff802`37390d00 ACPI!ExprOp2_64 (struct _ctxt *, struct _term *)
fffff802`373c0d90 ACPI!ACPIDevicePowerProcessPhase0SystemSubPhase1 (struct _ACPI_POWER_REQUEST *)
fffff802`3739685c ACPI!ACPIGetPortRangeInterfaces (struct _DEVICE_OBJECT *)
fffff802`373cdc0c ACPI!WPP_RECORDER_SF_ddi (void *, int, int, int64)
fffff802`373bb780 ACPI!ACPIBuildIssueNotifyDeviceEject (void *, void *, long)
fffff802`373d9914 ACPI!MatchData_64 (unsigned int64, unsigned long, unsigned int64)
fffff802`373cd970 ACPI!ACPIInitIgnoreResourceMapDescriptor (unsigned int64, unsigned int64, unsigned int64)
fffff802`3737e370 ACPI!ACPIIrpGenericFilterCompletionHandler (struct _DEVICE_OBJECT *, struct _IRP *, void *)
fffff802`3737c630 ACPI!AcpiArblibDereferenceArbiter (void *)
fffff802`373c0bd0 ACPI!ACPIDeviceIrpWarmEjectRequest (struct _DEVICE_EXTENSION *, struct _IRP *, <function> *, unsigned char)
fffff802`3737e1b0 ACPI!ACPIFilterIrpDeviceUsageNotificationCompletion (struct _DEVICE_OBJECT *, struct _IRP *, void *)
fffff802`37393d88 ACPI!NewContext (struct _ctxt **)
fffff802`373827b0 ACPI!ACPIThermalLoop (struct _DEVICE_EXTENSION *, unsigned long)
fffff802`373c4920 ACPI!ACPIEcWatchdogDpc (struct _KDPC *, void *, void *, void *)
fffff802`373ffbf0 ACPI!ACPIBusIrpQueryId (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373cbea4 ACPI!WPP_RECORDER_SF_iiid (void *, unsigned short, int64, int64, int64, int)
fffff802`3739fad0 ACPI!ACPIBuildProcessDelayedDependencyPhase1 (struct _ACPI_BUILD_REQUEST *)
fffff802`3739e4b0 ACPI!ACPIBuildProcessDelayedDependencyPhase0 (struct _ACPI_BUILD_REQUEST *)
fffff802`3740d9f4 ACPI!ACPIDetectFilterMatch (struct _DEVICE_EXTENSION *, struct _DEVICE_RELATIONS *, struct _DEVICE_OBJECT **)
fffff802`37389748 ACPI!WPP_RECORDER_SF_qD (void *, unsigned char, unsigned long, unsigned short, struct _GUID *, void *, unsigned int)
fffff802`373c2448 ACPI!WPP_RECORDER_SF_qd (void *, unsigned char, unsigned long, unsigned short, struct _GUID *, void *, int)
fffff802`37426e30 ACPI!IrqArbRetestAllocation (struct _ARBITER_INSTANCE *, struct _ARBITER_RETEST_ALLOCATION_PARAMETERS *)
fffff802`3738726c ACPI!ACPIBuildMissingChildren (struct _DEVICE_EXTENSION *)
fffff802`373cbdc8 ACPI!WPP_RECORDER_SF_PD (void *, unsigned int64)
fffff802`37425ef4 ACPI!ACPIConnectWakeInterrupt (struct _DEVICE_EXTENSION *, struct _ACPI_POWER_WAKE_INTERRUPT *)
fffff802`374031c8 ACPI!IcIsInterruptTypeSecondary (unsigned long)
fffff802`37382250 ACPI!ACPIThermalTMPCallback (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`37395600 ACPI!ACPIWakeCompleteRequestQueue (struct _LIST_ENTRY *, long)
fffff802`3741e990 ACPI!ACPIEcConnectHandler (struct _ECDATA *, struct _IRP *)
fffff802`3741dff0 ACPI!ACPICMExperienceButtonWorker (struct _DEVICE_EXTENSION *, unsigned long)
fffff802`373bbec0 ACPI!ACPIBuildProcessThermalZoneFailure (struct _ACPI_BUILD_REQUEST *)
fffff802`37393950 ACPI!PowerRes (struct _ctxt *, struct _term *)
fffff802`373c1e30 ACPI!ACPIIsPhase3ListEmptyOfUnblockedItemsPowerNodeEnum (struct _ACPI_POWER_DEVICE_NODE *, _DEVICE_POWER_STATE, void *)
fffff802`373c6ab0 ACPI!ACPIInternalCheckPowerReferences (struct _DEVICE_EXTENSION *)
fffff802`373cbcf4 ACPI!WPP_RECORDER_SF_Dd (void *, unsigned int, int)
fffff802`373bc8b4 ACPI!WPP_RECORDER_SF_DD (void *, unsigned char, unsigned long, unsigned short, struct _GUID *, unsigned int, unsigned int)
fffff802`3741f5b0 ACPI!ACPIFilterIrpQueryIdCompletion (struct _DEVICE_OBJECT *, struct _IRP *, void *, unsigned char)
fffff802`37371cf0 ACPI!ProcessEvalObj (struct _ctxt *, struct _post *, long)
fffff802`373ce2f0 ACPI!WPP_RECORDER_SF_Ld (void *, unsigned long, int)
fffff802`373d181c ACPI!ACPIWakeDisableAsync (struct _DEVICE_EXTENSION *, struct _LIST_ENTRY *, void *)
fffff802`373d3eb8 ACPI!Simulator_Pre_EvalNameSpaceObject (struct _NSObj *, struct _ObjData *, int, struct _ObjData **, struct _ObjData **, struct _SIMULATOR_DATA **)
fffff802`3737d950 ACPI!ACPIDeviceInternalDeviceRequest (struct _DEVICE_EXTENSION *, _DEVICE_POWER_STATE, <function> *, void *, unsigned long)
fffff802`37411990 ACPI!RegisterOperationRegionHandler (struct _NSObjRef *, unsigned long, unsigned long, <function> *, unsigned int64, void **)
fffff802`373cd6d0 ACPI!ACPIProcessorContainerStartDeviceWorker (void *)
fffff802`37424814 ACPI!PnpiCmResourceToBiosAddressDouble (unsigned char *, struct _CM_RESOURCE_LIST *)
fffff802`374203a8 ACPI!ACPIQuerySpareDsm (struct _DEVICE_EXTENSION *, unsigned long *)
fffff802`3740c630 ACPI!ACPIInternalSetSpare (struct _DEVICE_EXTENSION *)
fffff802`37387084 ACPI!ACPIGpeInstallRemoveIndex (unsigned long, unsigned long, unsigned long, unsigned char *)
fffff802`373c1cc0 ACPI!ACPIDevicePowerProcessPhase5WarmEjectSubPhase2 (struct _ACPI_POWER_REQUEST *)
fffff802`37400180 ACPI!ArbpQueryConflictCallback (void *, struct _RTL_RANGE *)
fffff802`373784d0 ACPI!ParseScope (struct _ctxt *, struct _scope *, long)
fffff802`3739fa00 ACPI!ExprOp1_64 (struct _ctxt *, struct _term *)
fffff802`3740c8d8 ACPI!PnpiGrowResourceList (struct _IO_RESOURCE_LIST ***, unsigned long *)
fffff802`373c5918 ACPI!ACPIGetConvertToHardwareID (struct _DEVICE_EXTENSION *, long, struct _ObjData *, unsigned long, void **, unsigned long *)
fffff802`37413170 ACPI!TraceLoggingRegisterEx_EtwRegister_EtwSetInformation (struct _tlgProvider_t *)
fffff802`373c3310 ACPI!ACPIEcGpeServiceRoutine (void *, void *)
fffff802`37372a04 ACPI!WPP_RECORDER_SF_qsdLqss (void *, unsigned char, unsigned short, struct _GUID *, void *, char *, int, unsigned long, void *, char *, char *)
fffff802`3739b848 ACPI!WPP_RECORDER_SF_SqLL (void *, wchar_t *, void *, unsigned long, unsigned long)
fffff802`37393d4c ACPI!GetThreadCurrentContext (void)
fffff802`37395e00 ACPI!ACPIInterruptDispatchEventDpc (struct _KDPC *, void *, void *, void *)
fffff802`3737af80 ACPI!Buffer (struct _ctxt *, struct _term *)
fffff802`373dbc80 ACPI!ParseUnload (struct _ctxt *, struct _post *, long)
fffff802`3740c820 ACPI!AcpiGetIdleWakeInfo (void *, _SYSTEM_POWER_STATE, _DEVICE_WAKE_DEPTH *)
fffff802`3737dc20 ACPI!ACPIRegisterForDeviceNotifications (struct _DEVICE_OBJECT *, <function> *, void *)
fffff802`3738f8d0 ACPI!ACPIBuildProcessRunMethodPhaseCheckDep (struct _ACPI_BUILD_REQUEST *)
fffff802`373a16d8 ACPI!ACPIDeviceRecordBlockedOnPhase3List (struct _LIST_ENTRY *)
fffff802`373d7560 ACPI!DelayedLogInErrorLog (struct _DEVICE_OBJECT *, void *)
fffff802`373c8244 ACPI!ACPIIoctlUnregisterDeviceFirmwareLockHandler (struct _IRP *, struct _IO_STACK_LOCATION *)
fffff802`3741e1a0 ACPI!AcpiDeviceReset (void *, _DEVICE_RESET_TYPE, unsigned long, void *)
fffff802`37389820 ACPI!WPP_RECORDER_SF_IqLL (void *, unsigned int64, void *, unsigned long, unsigned long)
fffff802`373cc4e0 ACPI!ACPIRegisterForDeviceNotifications2 (void *, <function> *, void *)
fffff802`37400864 ACPI!PnpiCmResourceToBiosIrq (unsigned char *, struct _CM_RESOURCE_LIST *)
fffff802`3739f304 ACPI!ACPIWakeEnableDisableAsync (struct _DEVICE_EXTENSION *, unsigned char, <function> *, void *)
fffff802`3741b0e0 ACPI!ACPIDockIntfReference (void *)
fffff802`373bfcfc ACPI!FindDeviceFirmwareLockHandlerEntry (unsigned long, <function> *, struct _DEVICE_FIRMWARE_LOCK_HANDLER_ENTRY *)
fffff802`3737f8a4 ACPI!ProcessorDeleteDeviceIdtAssignment (struct _DEVICE_OBJECT *, unsigned long, unsigned long, ARBITER_WHICHSTATE)
fffff802`373cb5ec ACPI!AcpiNotifyPlExtDeleteDeviceSync (struct _NSObjRef *, void *)
fffff802`373c5f5c ACPI!ACPIValidateGPEEventIndex (unsigned long, unsigned long, unsigned long)
fffff802`3740584c ACPI!ProcessorpSelectProcessorSet (unsigned short, unsigned char, unsigned char, struct _GROUP_AFFINITY *, struct _PROCESSOR_SELECTION_ITERATOR *)
fffff802`373d014c ACPI!ACPIThermalStopZoneWorker (struct _DEVICE_EXTENSION *)
fffff802`374102d0 ACPI!ArbFreeOrderingList (struct _ARBITER_ORDERING_LIST *)
fffff802`3740a5e0 ACPI!ACPIThermalCheckNativeTemperatureSupport (struct _DEVICE_EXTENSION *)
fffff802`3741330c ACPI!AcpiEjectBusNumberTranslator (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3737e024 ACPI!ACPIThermalActivateConstraint (struct _THERMAL_CONSTRAINT *)
fffff802`37394b00 ACPI!LoadMemDDB (struct _ctxt *, struct _DSDT *, struct _ObjData *)
fffff802`373ce9b0 ACPI!ACPIRootDeviceDiscoverDeviceCompletion (void *, long, void *)
fffff802`37425288 ACPI!AcpiCheckSecureDevice (struct _DEVICE_EXTENSION *)
fffff802`373db2c8 ACPI!ConvertToString (struct _ObjData *, unsigned long, struct _ObjData *)
fffff802`373c69c4 ACPI!wil_details_FeatureReporting_IncrementUsageInCache (wil_details_ServiceReportingKind, struct wil_details_RecordUsageResult *)
fffff802`3739d460 ACPI!ACPIDeviceCompletePhase3On (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`373c2d10 ACPI!ACPIDispatchPowerIrpSuccess (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373d178c ACPI!ACPIWakeDeferredRestoreEnables (struct _DEVICE_EXTENSION *, void *)
fffff802`37371400 ACPI!ReadFieldObj (struct _ctxt *, struct _accfieldobj *, long)
fffff802`3738b20c ACPI!ACPIBuildDeviceRequest (struct _DEVICE_EXTENSION *)
fffff802`373801b0 ACPI!InitMutex (struct _ctxt *, struct _heap *, struct _NSObj *, unsigned long, unsigned char)
fffff802`3742b044 ACPI!__security_init_cookie (void)
fffff802`373a1960 ACPI!ACPIInternalDeviceClockIrpStartDeviceCompletion (struct _DEVICE_EXTENSION *, void *, long)
fffff802`37422948 ACPI!OSOpenNextSubkey (void *, unsigned long, char *, unsigned long *, void **)
fffff802`373bc414 ACPI!ACPIBuildWakeEventDeviceContext (struct _DEVICE_EXTENSION *, struct _ObjData *)
fffff802`3742efb8 ACPI!OSInitializeCallbacks (void)
fffff802`37397af8 ACPI!ACPIGetConvertToCompatibleIDWide (struct _DEVICE_EXTENSION *, long, struct _ObjData *, unsigned long, void **, unsigned long *)
fffff802`373bc6e0 ACPI!ACPIFlushDeviceQueueCallback (void *, void *, long)
fffff802`3737fb4c ACPI!ACPIEnableEnterACPIMode (unsigned char)
fffff802`373c7480 ACPI!ACPIIoctlCalculateOutputBufferSizeV2 (struct _ObjData *, unsigned long *, unsigned long *, unsigned char, unsigned char)
fffff802`373d0990 ACPI!ACPIVectorConnect (struct _DEVICE_OBJECT *, unsigned long, _KINTERRUPT_MODE, unsigned char, <function> *, void *, void **)
fffff802`3740d990 ACPI!ACPIDetectPdoMatch (struct _DEVICE_EXTENSION *, struct _DEVICE_RELATIONS *)
fffff802`37393e84 ACPI!InitContext (struct _ctxt *)
fffff802`3741d1b0 ACPI!AcpiArblibPackResource (struct _IO_RESOURCE_DESCRIPTOR *, unsigned int64, struct _CM_PARTIAL_RESOURCE_DESCRIPTOR *)
fffff802`373c4200 ACPI!ACPIEcServiceDevice (struct _ECDATA *)
fffff802`3739c130 ACPI!RegEventHandler (struct _evhandle *, <function> *, unsigned int64)
fffff802`37427904 ACPI!ArbDeleteArbiterInstance (struct _ARBITER_INSTANCE *)
fffff802`373c2580 ACPI!AcpiDeviceResetCompleteReset (struct _DEVICE_EXTENSION *, void *, long)
fffff802`373909e0 ACPI!ACPIDockIsDockDevice (struct _NSObjRef *)
fffff802`37412dfc ACPI!ACPIInsertPhysicalDeviceLocationDescriptor (struct _ACPI_PLD_DESCRIPTORS *, struct _ACPI_PLD_DESCRIPTOR *)
fffff802`373d5428 ACPI!NotifyObjectDestruction (struct _objowner *)
fffff802`37374a10 ACPI!RunContext (struct _ctxt *)
fffff802`37380470 ACPI!ACPICleanDeviceDependenciesWithTreeLock (struct _DEVICE_EXTENSION *)
fffff802`373c5600 ACPI!ACPIFilterIrpQueryPower (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3742c930 ACPI!IrqPolicyGetDistributionDisposition (void)
fffff802`373dbdec ACPI!LinkNodeRestoreHardwareState (void *)
fffff802`373c5ab8 ACPI!ACPIGetConvertToStringWide (long, struct _ObjData *, unsigned long, void **, unsigned long *)
fffff802`3739e2c4 ACPI!ACPIDeviceIrpWaitWakeRequest (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3739d6c4 ACPI!ACPIDockIrpSetDevicePower (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37399fbc ACPI!LogEvent (unsigned long, unsigned int64, unsigned int64, unsigned int64, unsigned int64, unsigned int64, unsigned int64, unsigned int64)
fffff802`374035f0 ACPI!IrqArbCommitAllocation (struct _ARBITER_INSTANCE *)
fffff802`37401440 ACPI!ACPIGetPhysicalDeviceLocationBuffer (struct _ObjData *, struct _ACPI_PLD_V2_BUFFER *)
fffff802`3740c6d4 ACPI!ACPIInternalSetProximityDomain (struct _DEVICE_EXTENSION *)
fffff802`37421b94 ACPI!AcpiInitializePortArbiter (struct _ACPI_ARBITER_INSTANCE *, struct _DEVICE_EXTENSION *)
fffff802`3742d4ec ACPI!IrqArbUpdateInterruptLimit (void)
fffff802`373b9580 ACPI!AcpiDiagThermalPollingTraceControlCallback (struct _GUID *, unsigned long, unsigned char, unsigned int64, unsigned int64, struct _EVENT_FILTER_DESCRIPTOR *, void *)
fffff802`37379b90 ACPI!ValidateArgTypes (struct _ctxt *, struct _ObjData *, unsigned char, char *)
fffff802`3738b15c ACPI!OSNotifyCreateDevice (struct _NSObjRef *, unsigned int64)
fffff802`373db8a4 ACPI!ParseFieldConnection (struct _ctxt *, struct _Connection **)
fffff802`373922d0 ACPI!ParseOpcode (struct _ctxt *, unsigned char *, struct _ObjData *)
fffff802`373c27e0 ACPI!AcpiDeviceResetDereference (void *)
fffff802`374087f0 ACPI!AcpiQueryPciBusInterface (struct _DEVICE_OBJECT *)
fffff802`373bd460 ACPI!ACPIBusIrpRemoveDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373ca1f0 ACPI!AcpiPccSyncCompletionCallback (long, unsigned int64)
fffff802`373d0884 ACPI!AcpiGetNativeMethodHandleFromAcpiObject (struct _NSObjRef *, void **)
fffff802`3739b4c0 ACPI!ACPIWakeInitializePciDevice (struct _DEVICE_OBJECT *)
fffff802`3739f4f4 ACPI!ACPIWakeEnableDisablePciDevice (struct _DEVICE_EXTENSION *, unsigned char)
fffff802`373a1890 ACPI!PciRootBusBiosMethodDispatcherOnResume (void *)
fffff802`374035cc ACPI!IrqArbGsivFromIrq (unsigned int64)
fffff802`3742cba0 ACPI!AMLIInitialize (unsigned long)
fffff802`37425e80 ACPI!ACPIEmQueryEnableD3ColdOnSurpriseRemovalRule (BUS_QUERY_ID_TYPE, wchar_t *, EM_RULE_STATE *)
fffff802`373c1b10 ACPI!ACPIDevicePowerProcessPhase5WarmEjectSubPhase1 (struct _ACPI_POWER_REQUEST *)
fffff802`373c2d50 ACPI!ACPIDispatchPowerIrpUnhandled (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373c2060 ACPI!AcpiGetLastTransitionStatus (void *, _D3COLD_LAST_TRANSITION_STATUS *)
fffff802`373dbc0c ACPI!ParsePackageLen (unsigned char **, unsigned char **)
fffff802`373861d0 ACPI!ACPIInternalInterruptPolarityCacheStorePolaritiesFromList (struct _DEVICE_EXTENSION *, struct _IO_RESOURCE_REQUIREMENTS_LIST *)
fffff802`3740b69c ACPI!ACPIThermalGetParameter (struct _DEVICE_EXTENSION *, void *, unsigned long, unsigned int64 *)
fffff802`373c4148 ACPI!ACPIEcLogError (struct _ECDATA *, long)
fffff802`373cc6f0 ACPI!EnableDisableDeviceRegionSpace (struct _DEVICE_EXTENSION *, unsigned long, unsigned char)
fffff802`3738165c ACPI!OSConvertDeviceHandleToNSHANDLE (void *)
fffff802`373cfbd0 ACPI!ACPIThermalCancelRequest (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373991cc ACPI!ACPIIsPowerRequestBlocked (struct _ACPI_POWER_REQUEST *)
fffff802`3740b980 ACPI!ACPIFilterIrpFilterResourceRequirements (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37392c00 ACPI!Release (struct _ctxt *, struct _term *)
fffff802`3739b950 ACPI!ACPISystemPowerInitializeRootMapping (struct _DEVICE_EXTENSION *, struct _DEVICE_CAPABILITIES *)
fffff802`373ff3f0 ACPI!IcInitGlobalState (void)
fffff802`37408240 ACPI!AcpiEvaluateDsmMethodOnPciRootBus (struct _DEVICE_EXTENSION *, unsigned char *)
fffff802`373c9790 ACPI!AcpiPccAcquireSubspaceAsync (void *, <function> *, unsigned int64)
fffff802`374257d0 ACPI!AcpiTranslateBusNumberRequirements (void *, struct _IO_RESOURCE_DESCRIPTOR *, struct _DEVICE_OBJECT *, unsigned long *, struct _IO_RESOURCE_DESCRIPTOR **)
fffff802`37382120 ACPI!AMLIEvalPackageElement (struct _NSObjRef *, unsigned long, struct _ObjData *)
fffff802`373beee0 ACPI!ACPICMLidSetPowerCompletion (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`3740b734 ACPI!PnpiBiosIrqToIoDescriptor (unsigned char *, unsigned short, struct _IO_RESOURCE_LIST **, unsigned long, unsigned short)
fffff802`373b9500 ACPI!AcpiDiagThermalPollingTimerRoutine (struct _KTIMER2 *, void *)
fffff802`373d5eb0 ACPI!DebugInPort (char *, unsigned long)
fffff802`37404f04 ACPI!IrqArbpFindBootConfig (struct _ARBITER_INSTANCE *, struct _ARBITER_ALLOCATION_STATE *, unsigned long *)
fffff802`373d6240 ACPI!DebugQuit (struct _cmdarg *, char *, unsigned long, unsigned long)
fffff802`373d1028 ACPI!ACPIAssociateWakeInterrupt (struct _ACPI_POWER_WAKE_INTERRUPT_REGISTRATION_ENTRY *)
fffff802`373c66fc ACPI!ACPIQueryGedDeviceInterface (struct _DEVICE_EXTENSION *)
fffff802`37400120 ACPI!ACPIReferencePnpLocationInterface (void *)
fffff802`3742e218 ACPI!AMLILoadDDB (struct _DSDT *, void **)
fffff802`3741e834 ACPI!ACPIEcInstallOpRegionHandler (struct _ECDATA *)
fffff802`3741df50 ACPI!ACPIInterfaceReferenceDeviceExtension (void *)
fffff802`373a1a50 ACPI!__report_gsfailure (unsigned int64)
fffff802`37379710 ACPI!LogOp2 (struct _ctxt *, struct _term *)
fffff802`37423de8 ACPI!PnpiBiosVendorToNtIoDescriptor (struct _DEVICE_OBJECT *, unsigned char *, struct _IO_RESOURCE_LIST **, unsigned long, unsigned long, unsigned char *)
fffff802`37392690 ACPI!Scope (struct _ctxt *, struct _term *)
fffff802`37394320 ACPI!WriteFieldObj (struct _ctxt *, struct _accfieldobj *, long)
fffff802`373c82b4 ACPI!AcpiIoctlArgumentToPackageObjV2 (struct _ACPI_METHOD_ARGUMENT_V2 *, _POOL_TYPE, unsigned char, unsigned long *, struct _PackageObj **)
fffff802`37404ce8 ACPI!IrqPolicyGetSubKey (struct _DEVICE_OBJECT *, wchar_t *, unsigned long, void **)
fffff802`3737bf08 ACPI!AcpiIoctlArgumentToPackageObjV1 (struct _ACPI_METHOD_ARGUMENT_V1 *, _POOL_TYPE, unsigned char, unsigned long *, struct _PackageObj **)
fffff802`373d2334 ACPI!WPP_RECORDER_SF_LLLqss (void *, unsigned long, unsigned long, unsigned long, void *, char *, char *)
fffff802`374099c0 ACPI!ACPIQueryDeviceBiosName (struct _DEVICE_OBJECT *, struct _UNICODE_STRING *)
fffff802`37380020 ACPI!Mutex (struct _ctxt *, struct _term *)
fffff802`3741d200 ACPI!AcpiArblibScoreRequirement (struct _IO_RESOURCE_DESCRIPTOR *)
fffff802`373c73b0 ACPI!ACPIIoctlAsyncEvalControlMethodCompletion (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`37426160 ACPI!IrqLibAllocateMessageTarget (struct _DEVICE_OBJECT *, struct _GROUP_AFFINITY *, unsigned long, _KINTERRUPT_MODE, unsigned char, unsigned long *, unsigned char *, unsigned long *)
fffff802`3739f28c ACPI!ACPIRangeFilterPICInterrupt (struct _IO_RESOURCE_REQUIREMENTS_LIST *)
fffff802`373c3628 ACPI!ACPIEcMaskInterrupt (struct _ECDATA *)
fffff802`37424b0c ACPI!PnpiCmResourceToBiosIoFixedPort (unsigned char *, struct _CM_RESOURCE_LIST *)
fffff802`373d4a80 ACPI!AMLICreateOverrideObjectDefault (unsigned char *, unsigned long, struct _ObjData *)
fffff802`3737da60 ACPI!ACPIThermalAcquireCoolingInterfaces (struct _DEVICE_EXTENSION *)
fffff802`373d2e1c ACPI!AmliWatchdogInitiateBugcheck (struct _AMLI_WATCHDOG *)
fffff802`373d8800 ACPI!Fatal (struct _ctxt *, struct _term *)
fffff802`373ffb98 ACPI!ACPIRegLocalCopyString (char *, char *, unsigned long)
fffff802`37410310 ACPI!ACPIFilterIrpQueryCapabilities (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37405498 ACPI!ArbpBuildAlternative (struct _ARBITER_INSTANCE *, struct _IO_RESOURCE_DESCRIPTOR *, struct _ARBITER_ALTERNATIVE *)
fffff802`373cc498 ACPI!ACPIReleaseHardwareGlobalLock (void)
fffff802`3737bab0 ACPI!ACPIIoctlCalculateOutputBufferSizeV1 (struct _ObjData *, unsigned long *, unsigned long *, unsigned char, unsigned char)
fffff802`373d22d0 ACPI!ACPIWakeRestoreEnablesCompletion (void *, void *, long)
fffff802`3737e3dc ACPI!ACPIThermalQueryCoolingInterfaces (struct _DEVICE_EXTENSION *)
fffff802`37408abc ACPI!ACPIIsDebuggingDevice (struct _DEVICE_OBJECT *)
fffff802`37388810 ACPI!GetPciAddressWorker (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`373b9810 ACPI!AcpiDiagTraceControlCallback (struct _GUID *, unsigned long, unsigned char, unsigned int64, unsigned int64, struct _EVENT_FILTER_DESCRIPTOR *, void *)
fffff802`374246d0 ACPI!PnpiCmResourceSidebandConnection (struct _IO_RESOURCE_LIST *, struct _CM_PARTIAL_RESOURCE_DESCRIPTOR *, unsigned char *)
fffff802`3739af10 ACPI!ACPIBusIrpUnhandled (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373a14b0 ACPI!CacheBBNResult (struct _NSObjRef *, unsigned long)
fffff802`3737c680 ACPI!PciConfigPinToLine (void *, struct _PCI_COMMON_CONFIG *)
fffff802`37400b30 ACPI!ACPIButtonStartDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37401bf4 ACPI!PcisuppGetProgConfigHeader (struct _DEVICE_OBJECT *, struct _PCI_COMMON_HEADER *)
fffff802`373d0784 ACPI!ACPIComputeDeviceIdMutiStringLength (wchar_t *)
fffff802`37397910 ACPI!RtlStringCchPrintfExA (char *, unsigned int64, char **, unsigned int64 *, unsigned long, char *)
fffff802`37404728 ACPI!IrqPolicyGetDevicePolicy (struct _DEVICE_OBJECT *, struct _IO_RESOURCE_DESCRIPTOR *, struct _GROUP_AFFINITY *, _IRQ_PRIORITY *, wchar_t *, unsigned char *)
fffff802`3740bb8c ACPI!PnpBiosUpdateResourceListWithSidebandResources (struct _DEVICE_OBJECT *, struct _IO_RESOURCE_REQUIREMENTS_LIST *, struct _IO_RESOURCE_REQUIREMENTS_LIST **, struct _IO_RESOURCE_LIST **)
fffff802`3739a08c ACPI!LogError (long)
fffff802`37398a3c ACPI!RtlStringCchPrintfExW (wchar_t *, unsigned int64, wchar_t **, unsigned int64 *, unsigned long, wchar_t *)
fffff802`373ba404 ACPI!RtlStringCchLengthA (char *, unsigned int64, unsigned int64 *)
fffff802`3737c130 ACPI!ACPIGetWorkerForString (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`373c0e60 ACPI!ACPIDevicePowerProcessPhase2SystemSubPhase1 (struct _ACPI_POWER_REQUEST *)
fffff802`373c1230 ACPI!ACPIDevicePowerProcessPhase2SystemSubPhase3 (struct _ACPI_POWER_REQUEST *)
fffff802`373c1190 ACPI!ACPIDevicePowerProcessPhase2SystemSubPhase2 (struct _ACPI_POWER_REQUEST *)
fffff802`3738eaf0 ACPI!ACPIBuildProcessDevicePhasePrx (struct _ACPI_BUILD_REQUEST *)
fffff802`373848c8 ACPI!ACPIThermalUpdateConstraints (struct _DEVICE_EXTENSION *)
fffff802`373a1900 ACPI!ACPIDispatchPowerIrpSurpriseRemoved (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37428324 ACPI!ArbShareDriverExclusive (struct _ARBITER_INSTANCE *, struct _ARBITER_ALLOCATION_STATE *)
fffff802`373cc4f8 ACPI!ACPIRegisterForDeviceNotificationsByDeviceExtension (void *, <function> *, void *)
fffff802`37398f48 ACPI!CreateXField (struct _ctxt *, struct _term *, struct _ObjData *, struct _BuffFieldObj **)
fffff802`373bfab8 ACPI!DereferenceDeviceFirmwareLockHandlerEntry (struct _DEVICE_FIRMWARE_LOCK_HANDLER_ENTRY *, unsigned char)
fffff802`373a1030 ACPI!ACPIFixedFeatureButtonInitialize (void)
fffff802`373c55e0 ACPI!ACPIDispatchIrpDepFilterRemoveDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3738441c ACPI!AMLIAsyncEvalObject (struct _NSObjRef *, struct _ObjData *, unsigned long, struct _ObjData *, <function> *, void *)
fffff802`3741e140 ACPI!ACPICMSleepButtonStart (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3740c190 ACPI!ACPIBusIrpQueryResourceRequirements (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37388130 ACPI!PciConfigSpaceHandler (unsigned long, struct _NSObjRef *, unsigned long, unsigned long, unsigned long *, unsigned long, <function> *, void *)
fffff802`3738472c ACPI!WPP_RECORDER_SF_Dddqssdddd (void *, unsigned int, int, int, void *, char *, char *, int, int, int, int)
fffff802`37409d50 ACPI!ACPIQueryCacheCoherencyAttribute (struct _DEVICE_EXTENSION *)
fffff802`37395c30 ACPI!ACPIInterruptServiceRoutine (struct _KINTERRUPT *, void *)
fffff802`3742c714 ACPI!IrqPolicyConfigure (void)
fffff802`3738185c ACPI!AcpiEvaluateOscMethodOnPciRootBus (struct _DEVICE_EXTENSION *, unsigned char, struct _PCI_ROOT_BUS_OSC_CONTROL_FIELD *, struct _PCI_ROOT_BUS_OSC_CONTROL_FIELD *)
fffff802`373849dc ACPI!WPP_RECORDER_SF_qDDqssdddd (void *, void *, unsigned int, unsigned int, void *, char *, char *, int, int, int, int)
fffff802`373db230 ACPI!ConvertToDDBHandle (struct _ObjData *, struct _ObjData *)
fffff802`37397a0c ACPI!RtlStringVPrintfWorkerA (char *, unsigned int64, unsigned int64 *, char *, char *)
fffff802`37385dc4 ACPI!ACPIBuildProcessorExtension (struct _NSObjRef *, struct _DEVICE_EXTENSION *, struct _DEVICE_EXTENSION **)
fffff802`373c81dc ACPI!ACPIIoctlUnRegisterOpRegionHandler (struct _DEVICE_OBJECT *, struct _IRP *, struct _IO_STACK_LOCATION *)
fffff802`373d872c ACPI!WaitASLEvent (struct _ctxt *, struct _EventObj *, unsigned short)
fffff802`3741e330 ACPI!AcpiFunctionLevelDeviceResetComplete (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`3740e810 ACPI!ACPIBusAndFilterIrpQueryCapabilities (struct _DEVICE_OBJECT *, struct _IRP *, void *, unsigned char)
fffff802`373d67a4 ACPI!PrintObject (struct _ObjData *)
fffff802`373985d8 ACPI!RtlStringVPrintfWorkerW (wchar_t *, unsigned int64, unsigned int64 *, wchar_t *, char *)
fffff802`373724e0 ACPI!RtlStringVPrintfWorkerW (wchar_t *, unsigned int64, unsigned int64 *, wchar_t *, char *)
fffff802`373c708c ACPI!ACPIIoctlAcquireGlobalLock (struct _IRP *, struct _IO_STACK_LOCATION *)
fffff802`373d47fc ACPI!AMLIAddNextNamespaceOverrideObject (void *, struct _NSObj *, char *)
fffff802`37397e08 ACPI!ACPIGetConvertToInstanceID (struct _DEVICE_EXTENSION *, long, struct _ObjData *, unsigned long, void **, unsigned long *)
fffff802`3742b81c ACPI!DriverEntry (struct _DRIVER_OBJECT *, struct _UNICODE_STRING *)
fffff802`373cfa50 ACPI!ACPITableUnloadCallBack (void *, void *, long)
fffff802`3738459c ACPI!ACPIDeviceHasFirmwareDependencies (struct _DEVICE_EXTENSION *)
fffff802`373d20f0 ACPI!ACPIWakeEnableWakeEvents (void)
fffff802`37420e68 ACPI!ACPIPepPlatformEntryExitNotify (struct _DEVICE_EXTENSION *, _PEP_PLATFORM_NOTIFICATION_TYPE, unsigned char)
fffff802`373d53f0 ACPI!MoveObjData (struct _ObjData *, struct _ObjData *)
fffff802`3741d900 ACPI!ACPIBusIrpCancelRemoveOrStopDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37378da0 ACPI!GetNameSpaceObjectNoLock (char *, struct _NSObj *, struct _NSObj **, unsigned long)
fffff802`37396370 ACPI!ACPIGpeEnableDisableEvents (unsigned char)
fffff802`3738a5a0 ACPI!ACPIDetectDockDevices (struct _DEVICE_EXTENSION *, struct _DEVICE_RELATIONS **)
fffff802`37412f70 ACPI!ACPIFilterIrpSurpriseRemoval (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3741dba0 ACPI!ACPIBusIrpQueryRemoveOrStopDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`373d4130 ACPI!Simulator_TestNotify (struct _SIMULATOR_DATA *)
fffff802`373809f0 ACPI!ACPIBusIrpQueryInterface (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3741c260 ACPI!ACPIDockIrpStartDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37397f80 ACPI!ACPIGetConvertToPnpIDWide (struct _DEVICE_EXTENSION *, long, struct _ObjData *, unsigned long, void **, unsigned long *)
fffff802`373d7410 ACPI!SleepQueueRequest (struct _ctxt *, unsigned long)
fffff802`3740cbe0 ACPI!PnpBiosResourcesToNtResources (struct _DEVICE_OBJECT *, unsigned char *, unsigned long, struct _IO_RESOURCE_REQUIREMENTS_LIST **)
fffff802`3740e450 ACPI!ACPIBusAndFilterIrpQueryPnpDeviceState (struct _DEVICE_OBJECT *, struct _IRP *, void *, unsigned char)
fffff802`37405e64 ACPI!IrqTraceAffinityPolicy (struct _DEVICE_OBJECT *, unsigned short, unsigned short, unsigned int64)
fffff802`3742caec ACPI!ACPIInitializeAMLI (void)
fffff802`37427b9c ACPI!ArbPruneOrdering (struct _ARBITER_ORDERING_LIST *, unsigned int64, unsigned int64)
fffff802`373a0d30 ACPI!ACPIBuildProcessThermalZoneDep (struct _ACPI_BUILD_REQUEST *)
fffff802`3742d7c0 ACPI!ProcessorConfigure (void)
fffff802`3737d1cc ACPI!ACPIFanLoop (struct _DEVICE_EXTENSION *, unsigned long, unsigned long)
fffff802`374126cc ACPI!ArbpUpdatePriority (struct _ARBITER_INSTANCE *, struct _ARBITER_ALTERNATIVE *)
fffff802`374002d4 ACPI!WppInitKm (struct _DRIVER_OBJECT *, struct _UNICODE_STRING *)
fffff802`3740864c ACPI!PciBusEjectInterface (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3738d704 ACPI!WPP_RECORDER_SF_qLdqss (void *, unsigned short, void *, unsigned long, int, void *, char *, char *)
fffff802`3738fc80 ACPI!ACPIDeviceCompleteGenericPhase (struct _NSObjRef *, long, struct _ObjData *, void *)
fffff802`3737c588 ACPI!RtlStringCchPrintfA (char *, unsigned int64, char *)
fffff802`373817ac ACPI!AcpiPccEjectInterface (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`3739b020 ACPI!ACPIRangeValidatePciResources (struct _DEVICE_EXTENSION *, struct _IO_RESOURCE_REQUIREMENTS_LIST *)
fffff802`3738efc0 ACPI!AMLIIsNamedChildPresent (struct _NSObjRef *, unsigned long)
fffff802`3742edc4 ACPI!AcpiIrqLibInitializeGlobalState (struct _DEVICE_OBJECT *)
fffff802`3739f780 ACPI!ACPIBuildThermalZoneRequest (struct _DEVICE_EXTENSION *)
fffff802`373a2180 ACPI!memset (void)
fffff802`373ca440 ACPI!PciExpressWakeControl (void *, unsigned char)
fffff802`3737c690 ACPI!Break (struct _ctxt *, struct _term *)
fffff802`373b9e6c ACPI!AcpiDiagTracePassiveCoolingConstraint (struct _DEVICE_EXTENSION *, struct _DEVICE_EXTENSION *, unsigned char, unsigned char)
fffff802`373d0b30 ACPI!ACPIVectorConnect2 (void *, unsigned long, _KINTERRUPT_MODE, unsigned char, <function> *, void *, void **)
fffff802`37398580 ACPI!RtlStringCchPrintfW (wchar_t *, unsigned int64, wchar_t *)
fffff802`373740d0 ACPI!SyncEvalObject (struct _NSObj *, struct _ObjData *, unsigned long, struct _ObjData *)
fffff802`373c9f90 ACPI!AcpiPccReleaseSubspace (void *)
fffff802`37386f2c ACPI!ACPIGpeBuildEventMasks (void)
fffff802`373ff3d0 ACPI!LinkNodeInitGlobalState (void)
fffff802`3737cc30 ACPI!ACPIProcessorStartDevice (struct _DEVICE_OBJECT *, struct _IRP *)
fffff802`37409e38 ACPI!ACPIBusReenumerateSelfInterface (struct _DEVICE_EXTENSION *, struct _IO_STACK_LOCATION *)
fffff802`373fc798 ACPI!_imp_KeGetProcessorNumberFromIndex = <no type information>
fffff802`373fc2d8 ACPI!_imp_IoAllocateIrp = <no type information>
fffff802`373fc450 ACPI!_imp__strupr = <no type information>
fffff802`373fc3a8 ACPI!_imp_ZwLoadDriver = <no type information>
fffff802`373fc4d0 ACPI!_imp_ExAcquireFastMutex = <no type information>
fffff802`373fc040 ACPI!_imp_KeStallExecutionProcessor = <no type information>
fffff802`373fc070 ACPI!_imp_WmiCompleteRequest = <no type information>
fffff802`373fc788 ACPI!_imp_RtlGetNextRange = <no type information>
fffff802`373fc200 ACPI!_imp_RtlFreeUnicodeString = <no type information>
fffff802`373fc340 ACPI!_imp_KeSetTimer = <no type information>
fffff802`373fc840 ACPI!_imp_KeSetTimer2 = <no type information>
fffff802`373fc1d0 ACPI!_imp_IoRequestDeviceEject = <no type information>
fffff802`373fc630 ACPI!_imp_IoReportInterruptInactive = <no type information>
fffff802`373fc828 ACPI!_imp_ObfDereferenceObject = <no type information>
fffff802`373fc590 ACPI!_imp__stricmp = <no type information>
fffff802`373fc100 ACPI!_imp_IoRegisterBootDriverReinitialization = <no type information>
fffff802`373a1a93 ACPI!RtlAddRange (RtlAddRange)
fffff802`373fc270 ACPI!_imp__strtoui64 = <no type information>
fffff802`373fc578 ACPI!_imp_KeQueryHighestNodeNumber = <no type information>
fffff802`373fc2a0 ACPI!_imp_ObfDereferenceObjectWithTag = <no type information>
fffff802`373a1a81 ACPI!RtlInitializeRangeList (RtlInitializeRangeList)
fffff802`373fc480 ACPI!_imp_MmGetPhysicalAddress = <no type information>
fffff802`373fc0f8 ACPI!_imp_ExInitializeNPagedLookasideList = <no type information>
fffff802`373fc2d0 ACPI!_imp_IoRequestDeviceRemovalForReset = <no type information>
fffff802`373fc560 ACPI!_imp_ZwEnumerateValueKey = <no type information>
fffff802`373fc488 ACPI!_imp_PoShutdownBugCheck = <no type information>
fffff802`373fc670 ACPI!_imp_RtlInitUnicodeString = <no type information>
fffff802`373fc460 ACPI!_imp_IoWMIQueryAllData = <no type information>
fffff802`373fc338 ACPI!_imp_MmUnlockPagableImageSection = <no type information>
fffff802`373fc4e0 ACPI!_imp_PoRegisterPowerSettingCallback = <no type information>
fffff802`3742aba8 ACPI! ?? ::LBKOJDO::`string' = <no type information>
fffff802`373fc7a0 ACPI!_imp_KeQueryMaximumGroupCount = <no type information>
fffff802`373fc4b0 ACPI!_imp_PsTerminateSystemThread = <no type information>
fffff802`373fc330 ACPI!_imp_MmLockPagableDataSection = <no type information>
fffff802`373fc540 ACPI!_imp_ZwEnumerateKey = <no type information>
fffff802`373fc190 ACPI!_imp_ExpInterlockedPushEntrySList = <no type information>
fffff802`373fc1b0 ACPI!_imp_IoCreateDevice = <no type information>
fffff802`373fc2c8 ACPI!_imp_PoSetSystemWake = <no type information>
fffff802`373fc608 ACPI!_imp_PoDeleteThermalRequest = <no type information>
fffff802`373fc360 ACPI!_imp_IoWriteErrorLogEntry = <no type information>
fffff802`373fc358 ACPI!_imp_IoAllocateErrorLogEntry = <no type information>
fffff802`373fc7d0 ACPI!_imp_RtlCopyRangeList = <no type information>
fffff802`373fc750 ACPI!_imp_DbgCommandString = <no type information>
fffff802`373fc448 ACPI!_imp_IofCompleteRequest = <no type information>
fffff802`373fc548 ACPI!_imp_RtlUnicodeStringToAnsiString = <no type information>
fffff802`373fc7a8 ACPI!_imp_KeQueryMaximumProcessorCountEx = <no type information>
fffff802`373fc6f8 ACPI!_imp_ExInitializeRundownProtection = <no type information>
fffff802`373fc8cc ACPI!_IMPORT_DESCRIPTOR_HAL = <no type information>
fffff802`373fc4a0 ACPI!_imp_IoQueueWorkItemEx = <no type information>
fffff802`373fc890 ACPI!_imp_IoSetDeviceInterfaceState = <no type information>
fffff802`373fc1b8 ACPI!_imp_IoAttachDeviceToDeviceStack = <no type information>
fffff802`373fc020 ACPI!_imp_HalGetBusDataByOffset = <no type information>
fffff802`373fc238 ACPI!_imp_ExQueueWorkItem = <no type information>
fffff802`373fc0a0 ACPI!WppRecorder_NULL_THUNK_DATA = <no type information>
fffff802`373fc6b0 ACPI!_imp_MmGetSystemRoutineAddress = <no type information>
fffff802`373fc478 ACPI!_imp_HeadlessDispatch = <no type information>
fffff802`373fc0e8 ACPI!_imp_KeInitializeSpinLock = <no type information>
fffff802`373fc3e8 ACPI!_imp_wcsstr = <no type information>
fffff802`373fc588 ACPI!_imp_HviIsAnyHypervisorPresent = <no type information>
fffff802`373fc598 ACPI!_imp_KeInitializeGuardedMutex = <no type information>
fffff802`373fc6e0 ACPI!_imp_ExNotifyCallback = <no type information>
fffff802`373fc1c0 ACPI!_imp_KeWaitForSingleObject = <no type information>
fffff802`373fc688 ACPI!_imp_KeReleaseSpinLock = <no type information>
fffff802`373fc4f8 ACPI!_imp_KeRevertToUserGroupAffinityThread = <no type information>
fffff802`373fc150 ACPI!_imp_RtlFreeRangeList = <no type information>
fffff802`373fc3b8 ACPI!_imp_IoRegisterPlugPlayNotification = <no type information>
fffff802`373fc258 ACPI!_imp_IoReleaseCancelSpinLock = <no type information>
fffff802`373a1b11 ACPI!ZwCreateKey (ZwCreateKey)
fffff802`373fc248 ACPI!_imp_IoRegisterDeviceInterface = <no type information>
fffff802`373fc878 ACPI!_imp_IoWMIExecuteMethod = <no type information>
fffff802`373fc050 ACPI!_imp_HalGetInterruptTargetInformation = <no type information>
fffff802`373fc468 ACPI!_imp_KeInitializeDpc = <no type information>
fffff802`373fc268 ACPI!_imp_ZwSetValueKey = <no type information>
fffff802`373fc5a0 ACPI!_imp_ZwInitiatePowerAction = <no type information>
fffff802`373fc860 ACPI!_imp_IoDeleteDevice = <no type information>
fffff802`373fc5f8 ACPI!_imp_PoCreateThermalRequest = <no type information>
fffff802`373fc820 ACPI!_imp_IofCallDriver = <no type information>
fffff802`373fc0b0 ACPI!_imp_KsrPersistMetadata = <no type information>
fffff802`373fc500 ACPI!_imp_RtlDeleteRange = <no type information>
fffff802`373fc3f0 ACPI!_imp_RtlNotifyFeatureUsage = <no type information>
fffff802`373fc108 ACPI!_imp_IoConnectInterruptEx = <no type information>
fffff802`373fc698 ACPI!_imp_RtlCopyUnicodeString = <no type information>
fffff802`373fc6d8 ACPI!_imp_ExUnregisterCallback = <no type information>
fffff802`373fc3b0 ACPI!_imp_IoBuildDeviceIoControlRequest = <no type information>
fffff802`373fc010 ACPI!_imp_HalGetProcessorIdByNtNumber = <no type information>
fffff802`373fc410 ACPI!_imp_KeQueryActiveProcessorCountEx = <no type information>
fffff802`373fc138 ACPI!_imp_RtlCmDecodeMemIoResource = <no type information>
fffff802`373fc208 ACPI!_imp_ObReferenceObjectByPointer = <no type information>
fffff802`373fc850 ACPI!_imp_ObfReferenceObject = <no type information>
fffff802`373a1ab7 ACPI!ZwClose (ZwClose)
fffff802`373fc810 ACPI!_imp_IoQueueWorkItem = <no type information>
fffff802`373fc4d8 ACPI!_imp_ExReleaseFastMutex = <no type information>
fffff802`373a1a6f ACPI!RtlFreeRangeList (RtlFreeRangeList)
fffff802`373fc290 ACPI!_imp_IoSetDependency = <no type information>
fffff802`373a1a5d ACPI!RtlInitUnicodeString (RtlInitUnicodeString)
fffff802`373fc888 ACPI!_imp_EtwSetInformation = <no type information>
fffff802`373fc318 ACPI!_imp_IoCreateSymbolicLink = <no type information>
fffff802`373fc790 ACPI!_imp_RtlGetFirstRange = <no type information>
fffff802`3742ab58 ACPI! ?? ::LBKOJDO::`string' = <no type information>
fffff802`373fc660 ACPI!_imp_ExAllocatePoolWithTag = <no type information>
fffff802`373fc320 ACPI!_imp_IoDisconnectInterruptEx = <no type information>
fffff802`373fc620 ACPI!_imp_RtlCmEncodeMemIoResource = <no type information>
fffff802`373a1b47 ACPI!stricmp (_stricmp)
fffff802`373fc880 ACPI!_imp_KdDisableDebugger = <no type information>
fffff802`373fc830 ACPI!_imp_KeInitializeTimer2 = <no type information>
fffff802`373fc7c0 ACPI!_imp_KeGetProcessorIndexFromNumber = <no type information>
fffff802`373fc838 ACPI!_imp_KeCancelTimer2 = <no type information>
fffff802`373fc8f4 ACPI!_IMPORT_DESCRIPTOR_WppRecorder = <no type information>
fffff802`373fc728 ACPI!_imp_strncmp = <no type information>
fffff802`373fc658 ACPI!_imp_EtwWriteTransfer = <no type information>
fffff802`373fc640 ACPI!_imp_PoSetHiberRange = <no type information>
fffff802`373fc078 ACPI!WMILIB_NULL_THUNK_DATA = <no type information>
fffff802`373fc7f8 ACPI!_imp__wcsicmp = <no type information>
fffff802`373a1b23 ACPI!ZwQueryValueKey (ZwQueryValueKey)
fffff802`373fc408 ACPI!_imp_RtlxAnsiStringToUnicodeSize = <no type information>
fffff802`373fc1e0 ACPI!_imp_strstr = <no type information>
fffff802`373fc7d8 ACPI!_imp_RtlQueryRegistryValuesEx = <no type information>
fffff802`373fc388 ACPI!_imp_KeLeaveCriticalRegion = <no type information>
fffff802`373fc610 ACPI!_imp_PoSetThermalPassiveCooling = <no type information>
fffff802`373fc908 ACPI!_IMPORT_DESCRIPTOR_ext-ms-win-ntos-ksr-l1-1-3 = <no type information>
fffff802`373fc1a8 ACPI!_imp_IoResolveDependency = <no type information>
fffff802`373fc180 ACPI!_imp_KeReleaseSpinLockFromDpcLevel = <no type information>
fffff802`373fc3d0 ACPI!_imp_PoFxNotifySurprisePowerOn = <no type information>
fffff802`373fc018 ACPI!_imp_HalSetBusDataByOffset = <no type information>
fffff802`373fc288 ACPI!_imp_IoDuplicateDependency = <no type information>
fffff802`373fc0d0 ACPI!_imp_KsrGetFirmwareInformation = <no type information>
fffff802`3742abb8 ACPI! ?? ::LBKOJDO::`string' = <no type information>
fffff802`373fc188 ACPI!_imp_ExpInterlockedPopEntrySList = <no type information>
fffff802`373fc808 ACPI!_imp_IoFreeWorkItem = <no type information>
fffff802`373fc2c0 ACPI!_imp_IoAcquireCancelSpinLock = <no type information>
fffff802`373fc5d8 ACPI!_imp_ZwCreateFile = <no type information>
fffff802`373fc760 ACPI!_imp_strchr = <no type information>
fffff802`373fc220 ACPI!_imp_PsCreateSystemThread = <no type information>
fffff802`3742abb3 ACPI! ?? ::LBKOJDO::`string' = <no type information>
fffff802`373fc4b8 ACPI!_imp_KfRaiseIrql = <no type information>
fffff802`373fc5c0 ACPI!_imp_RtlFindLeastSignificantBit = <no type information>
fffff802`373fc168 ACPI!_imp_RtlInvertRangeList = <no type information>
fffff802`373fc300 ACPI!_imp_IoDeleteSymbolicLink = <no type information>
fffff802`373fc780 ACPI!_imp__strnicmp = <no type information>
fffff802`373fc730 ACPI!_imp_strncpy_s = <no type information>
fffff802`373a1ac9 ACPI!strtoui64 (_strtoui64)
fffff802`373fc3c0 ACPI!_imp_KeClearEvent = <no type information>
fffff802`373fc240 ACPI!_imp_KeReportCacheIncoherentDevice = <no type information>
fffff802`373fc470 ACPI!_imp_RtlEqualUnicodeString = <no type information>
fffff802`373fc1f0 ACPI!_imp_EmClientRuleEvaluate = <no type information>
fffff802`373fc3d8 ACPI!_imp_RtlIntegerToUnicodeString = <no type information>
fffff802`373fc210 ACPI!_imp_IoSetDevicePropertyData = <no type information>
fffff802`373fc218 ACPI!_imp_IoInvalidateDeviceState = <no type information>
fffff802`373fc3c8 ACPI!_imp_IoGetDevicePropertyData = <no type information>
fffff802`373fc498 ACPI!_imp_KeSetImportanceDpc = <no type information>
fffff802`373fc580 ACPI!_imp_KeQueryNodeActiveAffinity = <no type information>
fffff802`373fc228 ACPI!_imp_ObReferenceObjectByHandle = <no type information>
fffff802`373fc558 ACPI!_imp_RtlUnicodeStringToInteger = <no type information>
fffff802`373fc278 ACPI!_imp_IoBuildSynchronousFsdRequest = <no type information>
fffff802`373fc0b8 ACPI!_imp_KsrQueryMetadata = <no type information>
fffff802`373fc638 ACPI!_imp_IoReportInterruptActive = <no type information>
fffff802`373a1b35 ACPI!ZwOpenKey (ZwOpenKey)
fffff802`373fc0a8 ACPI!_imp_KsrEnumeratePersistedMemory = <no type information>
fffff802`373fc530 ACPI!_imp_ZwQueryValueKey = <no type information>
fffff802`373fc250 ACPI!_imp_IoSetDeviceInterfacePropertyData = <no type information>
fffff802`373fc800 ACPI!_imp_RtlDeleteOwnersRanges = <no type information>
fffff802`373fc848 ACPI!_imp_VslQuerySecureDevice = <no type information>
fffff802`373f26f0 ACPI!__PchSym_ = <no type information>
fffff802`373a1aff ACPI!RtlFindRange (RtlFindRange)
fffff802`373f1784 ACPI!__PchSym_ = <no type information>
fffff802`373fc5b8 ACPI!_imp_RtlCompareUnicodeString = <no type information>
fffff802`373fc858 ACPI!_imp_PoRequestPowerIrp = <no type information>
fffff802`373fc120 ACPI!_imp__vsnprintf = <no type information>
fffff802`373fc870 ACPI!_imp_KdEnableDebugger = <no type information>
fffff802`373fc008 ACPI!_imp_KeFlushWriteBuffer = <no type information>
fffff802`373fc438 ACPI!_imp_ExCreateCallback = <no type information>
fffff802`373fc648 ACPI!_imp_DbgkWerCaptureLiveKernelDump = <no type information>
fffff802`373fc2f0 ACPI!_imp_IoDetachDevice = <no type information>
fffff802`373fc550 ACPI!_imp_RtlFreeAnsiString = <no type information>
fffff802`373fc8b8 ACPI!_IMPORT_DESCRIPTOR_ntoskrnl = <no type information>
fffff802`373fc068 ACPI!_imp_WmiSystemControl = <no type information>
fffff802`373fc778 ACPI!_imp_KeQueryInterruptTimePrecise = <no type information>
fffff802`373a1aa5 ACPI!RtlInvertRangeList (RtlInvertRangeList)
fffff802`373fc618 ACPI!_imp_PoSetThermalActiveCooling = <no type information>
fffff802`373fc090 ACPI!_imp_WppAutoLogStart = <no type information>
fffff802`373fc3f8 ACPI!_imp_RtlInitAnsiString = <no type information>
fffff802`373fc5e8 ACPI!_imp_KeDelayExecutionThread = <no type information>
fffff802`373fc600 ACPI!_imp_PoGetThermalRequestSupport = <no type information>
fffff802`373fc178 ACPI!_imp_KeAcquireSpinLockAtDpcLevel = <no type information>
fffff802`373fc5f0 ACPI!_imp_IoReuseIrp = <no type information>
fffff802`373fc028 ACPI!_imp_HalGetMemoryCachingRequirements = <no type information>
fffff802`373fc6c8 ACPI!_imp_ExReleaseSpinLockShared = <no type information>
fffff802`373fc680 ACPI!_imp_EtwEventEnabled = <no type information>
fffff802`373fc0c8 ACPI!_imp_KsrFreePersistedMemory = <no type information>
fffff802`373fc098 ACPI!_imp_WppAutoLogStop = <no type information>
fffff802`373fc628 ACPI!_imp_RtlDuplicateUnicodeString = <no type information>
fffff802`373fc390 ACPI!_imp_ExAcquireResourceExclusiveLite = <no type information>
fffff802`373fc518 ACPI!_imp_KeStartDynamicProcessor = <no type information>
fffff802`373fc5c8 ACPI!_imp_IoCancelIrp = <no type information>
fffff802`373fc230 ACPI!_imp_ZwClose = <no type information>
fffff802`373fc718 ACPI!_imp_ExAcquireRundownProtection = <no type information>
fffff802`373fc8e0 ACPI!_IMPORT_DESCRIPTOR_WMILIB = <no type information>
fffff802`373fc490 ACPI!_imp_MmMapIoSpaceEx = <no type information>
fffff802`373fc710 ACPI!_imp_NtClose = <no type information>
fffff802`373fc0f0 ACPI!_imp_KeInitializeEvent = <no type information>
fffff802`373fc2e0 ACPI!_imp_IoSynchronousCallDriver = <no type information>
fffff802`373fc6f0 ACPI!_imp_ExReleaseSpinLockExclusive = <no type information>
fffff802`373fc4f0 ACPI!_imp_KeSetSystemGroupAffinityThread = <no type information>
fffff802`373fc400 ACPI!_imp_RtlAnsiStringToUnicodeString = <no type information>
fffff802`373fc5b0 ACPI!_imp_KeReleaseGuardedMutex = <no type information>
fffff802`373fc510 ACPI!_imp_IoGetDeviceNumaNode = <no type information>
fffff802`373fc000 ACPI!_imp_HalGetMessageRoutingInfo = <no type information>
fffff802`373fc7b8 ACPI!_imp_KeRegisterProcessorChangeCallback = <no type information>
fffff802`373fc2e8 ACPI!_imp_IoFreeIrp = <no type information>
fffff802`373fc7f0 ACPI!_imp_RtlNumberOfSetBitsUlongPtr = <no type information>
fffff802`373fc308 ACPI!_imp_ExDeleteNPagedLookasideList = <no type information>
fffff802`373fc748 ACPI!_imp_strtok_s = <no type information>
fffff802`373fc440 ACPI!_imp_ExRegisterCallback = <no type information>
fffff802`373fc6a8 ACPI!_imp_IoWMIRegistrationControl = <no type information>
fffff802`373e16d0 ACPI!_xmm = <no type information>
fffff802`373a1aed ACPI!RtlDeleteRange (RtlDeleteRange)
fffff802`373fc160 ACPI!_imp_RtlAddRange = <no type information>
fffff802`373fc6a0 ACPI!_imp_ZwQuerySystemInformation = <no type information>
fffff802`373fc378 ACPI!_imp_ExAcquireResourceSharedLite = <no type information>
fffff802`373fc768 ACPI!_imp_strrchr = <no type information>
fffff802`373fc088 ACPI!_imp_imp_WppRecorderReplay = <no type information>
fffff802`373fc2f8 ACPI!_imp_SeSinglePrivilegeCheck = <no type information>
fffff802`373fc7e0 ACPI!_imp_ZwQuerySystemInformationEx = <no type information>
fffff802`373fc1e8 ACPI!_imp_strnlen = <no type information>
fffff802`373fc1c8 ACPI!_imp_IoInvalidateDeviceRelations = <no type information>
fffff802`373fc110 ACPI!_imp_KeBugCheckEx = <no type information>
fffff802`373fc3e0 ACPI!_imp_EmProviderRegister = <no type information>
fffff802`373fc418 ACPI!_imp_EmClientQueryRuleState = <no type information>
fffff802`373fc2a8 ACPI!_imp_IoTestDependency = <no type information>
fffff802`373fc058 ACPI!_imp_HalConvertDeviceIdtToIrql = <no type information>
fffff802`373fc0c0 ACPI!_imp_KsrFreePersistedMemoryBlock = <no type information>
fffff802`373fc770 ACPI!_imp_ExSetTimer = <no type information>
fffff802`373fc740 ACPI!_imp_DbgSetDebugFilterState = <no type information>
fffff802`373fc280 ACPI!_imp_RtlTimeToTimeFields = <no type information>
fffff802`373fc690 ACPI!_imp_KeAcquireSpinLockRaiseToDpc = <no type information>
fffff802`373fc048 ACPI!_imp_KeQueryPerformanceCounter = <no type information>
fffff802`373fc380 ACPI!_imp_ExReleaseResourceLite = <no type information>
fffff802`373fc170 ACPI!_imp_KeInsertQueueDpc = <no type information>
fffff802`373fc350 ACPI!_imp_KeCancelTimer = <no type information>
fffff802`373fc868 ACPI!_imp_RtlCompareMemory = <no type information>
fffff802`373fc348 ACPI!_imp_ExInterlockedRemoveHeadList = <no type information>
fffff802`373fc700 ACPI!_imp_DbgPrintEx = <no type information>
fffff802`373fc0e0 ACPI!_imp_KeInitializeTimer = <no type information>
fffff802`373fc6b8 ACPI!_imp_ExAllocateTimerInternal2 = <no type information>
fffff802`373fc678 ACPI!_imp_EtwWrite = <no type information>
fffff802`373fc148 ACPI!_imp__vsnwprintf = <no type information>
fffff802`373fc1f8 ACPI!_imp_RtlStringFromGUID = <no type information>
fffff802`373fc568 ACPI!_imp_MmUnmapIoSpace = <no type information>
fffff802`373fc6d0 ACPI!_imp_ExTryQueueWorkItem = <no type information>
fffff802`373fc650 ACPI!_imp_KeQueryTimeIncrement = <no type information>
fffff802`373fc898 ACPI!_imp_EtwRegister = <no type information>
fffff802`373fc818 ACPI!_imp_IoAllocateWorkItem = <no type information>
fffff802`373fc5d0 ACPI!_imp_IoUnregisterPlugPlayNotificationEx = <no type information>
fffff802`373fc128 ACPI!_imp_KeSetEvent = <no type information>
fffff802`373fc118 ACPI!_imp_ZwPowerInformation = <no type information>
fffff802`373fc4e8 ACPI!_imp_KeProcessorGroupAffinity = <no type information>
fffff802`373fc508 ACPI!_imp_RtlFindRange = <no type information>
fffff802`373fc130 ACPI!_imp_RtlIoDecodeMemIoResource = <no type information>
fffff802`373fc260 ACPI!_imp_IoOpenDeviceRegistryKey = <no type information>
fffff802`373fc720 ACPI!_imp_ExReleaseRundownProtection = <no type information>
fffff802`373fc570 ACPI!_imp_HviGetHypervisorFeatures = <no type information>
fffff802`373fc158 ACPI!_imp_RtlInitializeRangeList = <no type information>
fffff802`373fc4c0 ACPI!_imp_KeLowerIrql = <no type information>
fffff802`373fc6c0 ACPI!_imp_ExAcquireSpinLockShared = <no type information>
fffff802`373fc140 ACPI!_imp_RtlIsRangeAvailable = <no type information>
fffff802`373fc298 ACPI!_imp_ObfReferenceObjectWithTag = <no type information>
fffff802`373fc2b8 ACPI!_imp_PoCallDriver = <no type information>
fffff802`373fc398 ACPI!_imp_IoUnregisterPlugPlayNotification = <no type information>
fffff802`373fc080 ACPI!_imp_WppAutoLogTrace = <no type information>
fffff802`373fc4a8 ACPI!_imp_KeWaitForMultipleObjects = <no type information>
fffff802`373fc428 ACPI!_imp_ZwSetSystemInformation = <no type information>
fffff802`373fc7b0 ACPI!_imp_RtlInvertRangeListEx = <no type information>
fffff802`373fc198 ACPI!_imp_ExQueryDepthSList = <no type information>
fffff802`373fc528 ACPI!_imp_ZwCreateKey = <no type information>
fffff802`373fc430 ACPI!_imp_RtlAnsiCharToUnicodeChar = <no type information>
fffff802`373fc0d8 ACPI!ext-ms-win-ntos-ksr-l1-1-3_NULL_THUNK_DATA = <no type information>
fffff802`373fc7c8 ACPI!_imp_KeQueryGroupAffinity = <no type information>
fffff802`373fc368 ACPI!_imp_ExInitializeResourceLite = <no type information>
fffff802`373fc5a8 ACPI!_imp_KeAcquireGuardedMutex = <no type information>
fffff802`373fc8a0 ACPI!ntoskrnl_NULL_THUNK_DATA = <no type information>
fffff802`373fc1d8 ACPI!_imp_IoGetAttachedDeviceReference = <no type information>
fffff802`373fc668 ACPI!_imp_ExFreePoolWithTag = <no type information>
fffff802`373fc370 ACPI!_imp_KeEnterCriticalRegion = <no type information>
fffff802`373fc3a0 ACPI!_imp_ZwOpenFile = <no type information>
fffff802`373fc520 ACPI!_imp_RtlIoEncodeMemIoResource = <no type information>
fffff802`373fc2b0 ACPI!_imp_PoSetPowerState = <no type information>
fffff802`373fc458 ACPI!_imp_IoWMIOpenBlock = <no type information>
fffff802`373a1adb ACPI!strupr (_strupr)
fffff802`373fc4c8 ACPI!_imp_PoUnregisterPowerSettingCallback = <no type information>
fffff802`3742ab98 ACPI! ?? ::LBKOJDO::`string' = <no type information>
fffff802`373fc708 ACPI!_imp_ExWaitForRundownProtectionRelease = <no type information>
fffff802`373fc538 ACPI!_imp_ZwOpenKey = <no type information>
fffff802`373fc060 ACPI!HAL_NULL_THUNK_DATA = <no type information>
fffff802`373fc738 ACPI!_imp_DbgPrompt = <no type information>
fffff802`373fc1a0 ACPI!_imp_IoReserveDependency = <no type information>
fffff802`373fc91c ACPI!_NULL_IMPORT_DESCRIPTOR = <no type information>
fffff802`373fc6e8 ACPI!_imp_ExAcquireSpinLockExclusive = <no type information>
fffff802`373fc310 ACPI!_imp_IoGetDeviceProperty = <no type information>
fffff802`373a1a50 ACPI!RtlFailFast =  (inline caller) ACPI!__report_gsfailure+0
fffff802`3742b06b ACPI!RtlFailFast =  (inline caller) ACPI!__security_init_cookie+27
fffff802`373b938e ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagEnumCoolingDevices+5e
fffff802`3742dda2 ACPI!TraceLoggingRegister_EtwRegister_EtwSetInformation =  (inline caller) ACPI!AcpiDiagInitialize+7a
fffff802`373b93ea ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagOverrideAttribute+22
fffff802`373a0210 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceActiveCoolingConstraint+1c
fffff802`373b8716 ACPI!AcpiDiagBuildDeviceBiosName =  (inline caller) ACPI!AcpiDiagTraceActiveCoolingDevicePower+17abe
fffff802`373b873a ACPI!AcpiDiagBuildDeviceBiosName =  (inline caller) ACPI!AcpiDiagTraceActiveCoolingDevicePower+17ae2
fffff802`373b8793 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceActiveCoolingDevicePower+17b3b
fffff802`373b87af ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceActiveCoolingDevicePower+17b57
fffff802`373b87a7 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceActiveCoolingDevicePower+17b4f
fffff802`373b879f ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceActiveCoolingDevicePower+17b47
fffff802`373b8797 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceActiveCoolingDevicePower+17b3f
fffff802`373b877b ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceActiveCoolingDevicePower+17b23
fffff802`373b8772 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceActiveCoolingDevicePower+17b1a
fffff802`3739b6af ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceAmlError+ff
fffff802`3739b69c ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceAmlError+ec
fffff802`3739b67c ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceAmlError+cc
fffff802`373b95fd ACPI!AcpiDiagTraceIsAmlTracingEnabled =  (inline caller) ACPI!AcpiDiagTraceAmlEvaluation+2d
fffff802`373b967b ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceAmlEvaluation+ab
fffff802`373b9677 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceAmlEvaluation+a7
fffff802`373b966d ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceAmlEvaluation+9d
fffff802`373b9666 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceAmlEvaluation+96
fffff802`373b97ae ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceAmliWatchdogTimeout+a2
fffff802`373b9795 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceAmliWatchdogTimeout+89
fffff802`373b9763 ACPI!_tlgCreate2Binary =  (inline caller) ACPI!AcpiDiagTraceAmliWatchdogTimeout+57
fffff802`373b9772 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceAmliWatchdogTimeout+66
fffff802`373b9763 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceAmliWatchdogTimeout+57
fffff802`373b8230 ACPI!AcpiDiagBuildDeviceBiosName =  (inline caller) ACPI!AcpiDiagTraceConstraintEvent+17fb8
fffff802`373b8254 ACPI!AcpiDiagBuildDeviceBiosName =  (inline caller) ACPI!AcpiDiagTraceConstraintEvent+17fdc
fffff802`373b82a9 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceConstraintEvent+18031
fffff802`373b82ac ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceConstraintEvent+18034
fffff802`373b8292 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceConstraintEvent+1801a
fffff802`373b8276 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceConstraintEvent+17ffe
fffff802`373b9852 ACPI!IsListEmpty =  (inline caller) ACPI!AcpiDiagTraceControlCallback+42
fffff802`373b6d50 ACPI!AcpiDiagBuildDeviceBiosName =  (inline caller) ACPI!AcpiDiagTraceDeviceActiveCooling+19370
fffff802`373b6d95 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceDeviceActiveCooling+193b5
fffff802`373b6d8d ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceDeviceActiveCooling+193ad
fffff802`373b6d85 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceDeviceActiveCooling+193a5
fffff802`373b998b ACPI!AcpiDiagBuildDeviceBiosName =  (inline caller) ACPI!AcpiDiagTraceDeviceCoolingRundown+7b
fffff802`373b9a00 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceDeviceCoolingRundown+f0
fffff802`373b99ce ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceDeviceCoolingRundown+be
fffff802`373b99c6 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceDeviceCoolingRundown+b6
fffff802`373b99be ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceDeviceCoolingRundown+ae
fffff802`373b9ad8 ACPI!AcpiDiagBuildDeviceBiosName =  (inline caller) ACPI!AcpiDiagTraceDevicePassiveCooling+70
fffff802`373b9b20 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceDevicePassiveCooling+b8
fffff802`373b9b18 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceDevicePassiveCooling+b0
fffff802`373b9b0e ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceDevicePassiveCooling+a6
fffff802`373b9cf4 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceDeviceReset+15c
fffff802`373b9cec ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceDeviceReset+154
fffff802`373b9cd2 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceDeviceReset+13a
fffff802`373b9cbe ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceDeviceReset+126
fffff802`373a3ad8 ACPI!AcpiDiagBuildDeviceBiosName =  (inline caller) ACPI!AcpiDiagTraceFanEvent+26b38
fffff802`373a3b1a ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceFanEvent+26b7a
fffff802`373a3b10 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceFanEvent+26b70
fffff802`373b9dac ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceFanRundown+50
fffff802`373b9da1 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceFanRundown+45
fffff802`373b9d8f ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceFanRundown+33
fffff802`373b9e26 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceFanStatusChange+1e
fffff802`3741b049 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceMemoryReserved+89
fffff802`3741b041 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceMemoryReserved+81
fffff802`3741b03d ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceMemoryReserved+7d
fffff802`3741b039 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceMemoryReserved+79
fffff802`3741b032 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceMemoryReserved+72
fffff802`3741b029 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceMemoryReserved+69
fffff802`3741b01e ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceMemoryReserved+5e
fffff802`3741b016 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceMemoryReserved+56
fffff802`373b9e8f ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTracePassiveCoolingConstraint+23
fffff802`373b9f90 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceRecordAmlEvaluationStatistics+ac
fffff802`373b9f5c ACPI!_tlgCreate2Binary =  (inline caller) ACPI!AcpiDiagTraceRecordAmlEvaluationStatistics+78
fffff802`373b9f73 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceRecordAmlEvaluationStatistics+8f
fffff802`373b9f5c ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceRecordAmlEvaluationStatistics+78
fffff802`373a6556 ACPI!AcpiDiagBuildDeviceBiosName =  (inline caller) ACPI!AcpiDiagTraceTemperatureChange+24b16
fffff802`373a65aa ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceTemperatureChange+24b6a
fffff802`373a659c ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceTemperatureChange+24b5c
fffff802`373a6592 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceTemperatureChange+24b52
fffff802`373a65fe ACPI!AcpiDiagBuildDeviceBiosName =  (inline caller) ACPI!AcpiDiagTraceTemperatureTelemetry+24b0e
fffff802`373a6662 ACPI!_tlgCreate2Binary =  (inline caller) ACPI!AcpiDiagTraceTemperatureTelemetry+24b72
fffff802`373a6666 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceTemperatureTelemetry+24b76
fffff802`373a6662 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceTemperatureTelemetry+24b72
fffff802`373a6655 ACPI!_tlgCreate2Binary =  (inline caller) ACPI!AcpiDiagTraceTemperatureTelemetry+24b65
fffff802`373a665e ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceTemperatureTelemetry+24b6e
fffff802`373a6655 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceTemperatureTelemetry+24b65
fffff802`373a6651 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceTemperatureTelemetry+24b61
fffff802`373a6705 ACPI!AcpiDiagBuildDeviceBiosName =  (inline caller) ACPI!AcpiDiagTraceThermalNotification+24b65
fffff802`373a677a ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalNotification+24bda
fffff802`373a675c ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalNotification+24bbc
fffff802`373a674a ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalNotification+24baa
fffff802`373a6739 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalNotification+24b99
fffff802`373a67e1 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalNotification+24c41
fffff802`373a67d4 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalNotification+24c34
fffff802`373a67ac ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalNotification+24c0c
fffff802`373ba0b9 ACPI!AcpiDiagBuildDeviceBiosName =  (inline caller) ACPI!AcpiDiagTraceThermalZoneRundown+dd
fffff802`373ba232 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalZoneRundown+256
fffff802`373ba1da ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalZoneRundown+1fe
fffff802`373ba1d3 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalZoneRundown+1f7
fffff802`373ba1c8 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalZoneRundown+1ec
fffff802`373ba1bd ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalZoneRundown+1e1
fffff802`373ba1b5 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalZoneRundown+1d9
fffff802`373ba199 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalZoneRundown+1bd
fffff802`373ba162 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalZoneRundown+186
fffff802`373ba15a ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalZoneRundown+17e
fffff802`373ba152 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalZoneRundown+176
fffff802`373ba14a ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalZoneRundown+16e
fffff802`373ba13c ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalZoneRundown+160
fffff802`373ba118 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalZoneRundown+13c
fffff802`373ba381 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalZoneRundown+3a5
fffff802`373ba35e ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalZoneRundown+382
fffff802`373ba329 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalZoneRundown+34d
fffff802`373ba308 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalZoneRundown+32c
fffff802`373ba2fb ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalZoneRundown+31f
fffff802`373ba2ef ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalZoneRundown+313
fffff802`373ba2d8 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalZoneRundown+2fc
fffff802`373ba295 ACPI!EventDataDescCreate =  (inline caller) ACPI!AcpiDiagTraceThermalZoneRundown+2b9
fffff802`373ba418 ACPI!RtlStringLengthWorkerA =  (inline caller) ACPI!RtlStringCchLengthA+14
fffff802`374131d2 ACPI!TraceLoggingSetInformation_EtwSetInformation =  (inline caller) ACPI!TraceLoggingRegisterEx_EtwRegister_EtwSetInformation+62
fffff802`3737f7c4 ACPI!_tlgWriteCommon =  (inline caller) ACPI!_tlgWriteTransfer_EtwWriteTransfer+4
fffff802`3741b514 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIDockIrpQueryCapabilities+24
fffff802`3741b7e3 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIDockIrpQueryDeviceRelations+23
fffff802`3741bc2f ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIDockIrpQueryID+1f
fffff802`3741bf90 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIDockIrpQueryInterface+20
fffff802`373ba4f5 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIDockIrpQueryPower+15
fffff802`373ba5b3 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIDockIrpQueryPower+d3
fffff802`373ba82a ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIDockIrpRemoveDevice+1ea
fffff802`373ba824 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIDockIrpRemoveDevice+1e4
fffff802`373ba81b ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDockIrpRemoveDevice+1db
fffff802`373ba79e ACPI!ACPIDebugGetIrpText =  (inline caller) ACPI!ACPIDockIrpRemoveDevice+15e
fffff802`3739d6d9 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIBusIrpSetDevicePower+15
fffff802`373ba88b ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIDockIrpSetPower+b
fffff802`373ba884 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIDockIrpSetPower+4
fffff802`373ba8cc ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIDockIrpSetSystemPower+18
fffff802`373ba904 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIDockIrpSetSystemPower+50
fffff802`373baa78 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIDockIrpSetSystemPower+1c4
fffff802`37390a04 ACPI!ACPIDockGetDockObject =  (inline caller) ACPI!ACPIDockIsDockDevice+24
fffff802`37390a04 ACPI!AMLIGetNameSpaceObject =  (inline caller) ACPI!ACPIDockIsDockDevice+24
fffff802`37390a29 ACPI!AMLIGetNameSpaceObjectNoLock =  (inline caller) ACPI!ACPIDockIsDockDevice+49
fffff802`373acca6 ACPI!CreateObjectHandle =  (inline caller) ACPI!ACPIDockIsDockDevice+1c2c6
fffff802`373acca6 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!ACPIDockIsDockDevice+1c2c6
fffff802`373acca6 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ACPIDockIsDockDevice+1c2c6
fffff802`3737e383 ACPI!KeGetCurrentIrql =  (inline caller) ACPI!ACPIIrpGenericFilterCompletionHandler+13
fffff802`3737e3a2 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIIrpGenericFilterCompletionHandler+32
fffff802`37408506 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIIrpSetPagableCompletionRoutineAndForward+ea
fffff802`374084c4 ACPI!IoSetCompletionRoutine =  (inline caller) ACPI!ACPIIrpSetPagableCompletionRoutineAndForward+a8
fffff802`374084f3 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIIrpSetPagableCompletionRoutineAndForward+d7
fffff802`374084bd ACPI!IoCopyCurrentIrpStackLocationToNext =  (inline caller) ACPI!ACPIIrpSetPagableCompletionRoutineAndForward+a1
fffff802`374084bd ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIIrpSetPagableCompletionRoutineAndForward+a1
fffff802`3742b89d ACPI!ACPIInitGetDriverOverrides =  (inline caller) ACPI!DriverEntry+81
fffff802`3742b8ba ACPI!Feature_Pldr_Ignore_Vetoes_IsEnabled =  (inline caller) ACPI!DriverEntry+9e
fffff802`3742b8ba ACPI!Feature_Pldr_Ignore_Vetoes__private_IsEnabledPreCheck =  (inline caller) ACPI!DriverEntry+9e
fffff802`3742b841 ACPI!WPP_INIT_CONTROL_ARRAY =  (inline caller) ACPI!DriverEntry+25
fffff802`3742bfa8 ACPI!AcpipInitPciBusStatePool =  (inline caller) ACPI!DriverEntry+78c
fffff802`3742bfe0 ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+7c4
fffff802`3742bdac ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+590
fffff802`3742bd97 ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+57b
fffff802`3742bd82 ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+566
fffff802`3742bd6d ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+551
fffff802`3742bd58 ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+53c
fffff802`3742bd43 ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+527
fffff802`3742bd2e ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+512
fffff802`3742bd19 ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+4fd
fffff802`3742bd04 ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+4e8
fffff802`3742bcef ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+4d3
fffff802`3742bcda ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+4be
fffff802`3742bcc5 ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+4a9
fffff802`3742bcb0 ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+494
fffff802`3742bc9b ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+47f
fffff802`3742bc86 ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+46a
fffff802`3742bc71 ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+455
fffff802`3742bc5c ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+440
fffff802`3742bc47 ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+42b
fffff802`3742bc32 ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+416
fffff802`3742bc1d ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+401
fffff802`3742bc08 ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+3ec
fffff802`3742bbf3 ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+3d7
fffff802`3742bbde ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+3c2
fffff802`3742bbc9 ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+3ad
fffff802`3742bbb4 ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+398
fffff802`3742bb9f ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+383
fffff802`3742bb8a ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+36e
fffff802`3742bb75 ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+359
fffff802`3742bb60 ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+344
fffff802`3742bb4b ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+32f
fffff802`3742bb36 ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+31a
fffff802`3742bb21 ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+305
fffff802`3742bb0c ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+2f0
fffff802`3742baf7 ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+2db
fffff802`3742bae2 ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+2c6
fffff802`3742bab4 ACPI!ExInitializeFastMutex =  (inline caller) ACPI!DriverEntry+298
fffff802`3742bab7 ACPI!WriteRaw =  (inline caller) ACPI!DriverEntry+29b
fffff802`3742ba86 ACPI!ExInitializeFastMutex =  (inline caller) ACPI!DriverEntry+26a
fffff802`3742ba89 ACPI!WriteRaw =  (inline caller) ACPI!DriverEntry+26d
fffff802`3742c0bd ACPI!AcpiInitializeSecureKernelState =  (inline caller) ACPI!DriverEntry+8a1
fffff802`3742c06e ACPI!AcpiInitializeDeviceFirmwareLockServices =  (inline caller) ACPI!DriverEntry+852
fffff802`3742c06e ACPI!InitializeListHead =  (inline caller) ACPI!DriverEntry+852
fffff802`3742dff1 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!NotifyHalWithMachineStatesAndRetrieveInterruptModel+1d5
fffff802`3742dfc1 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!NotifyHalWithMachineStatesAndRetrieveInterruptModel+1a5
fffff802`3741c876 ACPI!WppIsEqualGuid =  (inline caller) ACPI!WppTraceCallback+166
fffff802`37392cf0 ACPI!RtlStringValidateDestA =  (inline caller) ACPI!RtlStringCchCopyA+0
fffff802`37392d13 ACPI!RtlStringCopyWorkerA =  (inline caller) ACPI!RtlStringCchCopyA+23
fffff802`373a5c61 ACPI!RtlInitEmptyUnicodeString =  (inline caller) ACPI!ACPIAmliBuildObjectPathnameUnicode+255a1
fffff802`3737c599 ACPI!RtlStringValidateDestA =  (inline caller) ACPI!RtlStringCchPrintfA+11
fffff802`3737c5b8 ACPI!RtlStringVPrintfWorkerA =  (inline caller) ACPI!RtlStringCchPrintfA+30
fffff802`3741ce9a ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!AcpiArblibEjectInterface+e
fffff802`37398a59 ACPI!RtlStringExValidateDestW =  (inline caller) ACPI!RtlStringCchPrintfExW+1d
fffff802`37398a7b ACPI!RtlStringValidateDestW =  (inline caller) ACPI!RtlStringCchPrintfExW+3f
fffff802`37398a9e ACPI!RtlStringExValidateSrcW =  (inline caller) ACPI!RtlStringCchPrintfExW+62
fffff802`37398aca ACPI!RtlStringVPrintfWorkerW =  (inline caller) ACPI!RtlStringCchPrintfExW+8e
fffff802`37398b26 ACPI!RtlStringExHandleFillBehindNullW =  (inline caller) ACPI!RtlStringCchPrintfExW+ea
fffff802`3739858e ACPI!RtlStringValidateDestW =  (inline caller) ACPI!RtlStringCchPrintfW+e
fffff802`37381459 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIAddInitializationDependencies+141
fffff802`3738a492 ACPI!ACPIBuildScheduleDpc =  (inline caller) ACPI!ACPIBuildCompleteCommon+22
fffff802`373a7f6d ACPI!AMLIGetNSObjectNameSegment =  (inline caller) ACPI!ACPIBuildCompleteMustSucceed+2244d
fffff802`37385b49 ACPI!ACPIBuildCompleteCommon =  (inline caller) ACPI!ACPIBuildCompleteMustSucceed+29
fffff802`37385b67 ACPI!ACPIBuildScheduleDpc =  (inline caller) ACPI!ACPIBuildCompleteMustSucceed+47
fffff802`373a03b4 ACPI!InsertTailList =  (inline caller) ACPI!ACPIBuildDelayedDependencyRequest+84
fffff802`373b8328 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIBuildDelayedDependencyRequest+17ff8
fffff802`373b8328 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIBuildDelayedDependencyRequest+17ff8
fffff802`3738cbc8 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildDeviceDpc+58
fffff802`3738cc09 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildDeviceDpc+99
fffff802`3738ce80 ACPI!ACPIBuildProcessQueueList =  (inline caller) ACPI!ACPIBuildDeviceDpc+310
fffff802`3738ceaf ACPI!InsertTailList =  (inline caller) ACPI!ACPIBuildDeviceDpc+33f
fffff802`373ab12f ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIBuildDeviceDpc+1e5bf
fffff802`373ab12f ACPI!RtlFailFast =  (inline caller) ACPI!ACPIBuildDeviceDpc+1e5bf
fffff802`3738ce8a ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIBuildDeviceDpc+31a
fffff802`3738cd65 ACPI!ACPIBuildProcessGenericList =  (inline caller) ACPI!ACPIBuildDeviceDpc+1f5
fffff802`3738cc19 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildDeviceDpc+a9
fffff802`3738cc29 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildDeviceDpc+b9
fffff802`373ab0b6 ACPI!ACPIBuildProcessGenericList =  (inline caller) ACPI!ACPIBuildDeviceDpc+1e546
fffff802`3738cef3 ACPI!ACPIBuildProcessGenericList =  (inline caller) ACPI!ACPIBuildDeviceDpc+383
fffff802`3738cc39 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildDeviceDpc+c9
fffff802`3738cfe7 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildDeviceDpc+477
fffff802`3738cf90 ACPI!ACPIBuildProcessGenericList =  (inline caller) ACPI!ACPIBuildDeviceDpc+420
fffff802`3738cc50 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildDeviceDpc+e0
fffff802`373ab10e ACPI!ACPIBuildSynchronizationRequest =  (inline caller) ACPI!ACPIBuildDeviceDpc+1e59e
fffff802`3738cc90 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildDeviceDpc+120
fffff802`3738cc60 ACPI!ACPIBuildProcessGenericList =  (inline caller) ACPI!ACPIBuildDeviceDpc+f0
fffff802`3738ce2c ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildDeviceDpc+2bc
fffff802`3738ce1f ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildDeviceDpc+2af
fffff802`3738ce12 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildDeviceDpc+2a2
fffff802`3738cdfe ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildDeviceDpc+28e
fffff802`3738cca7 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildDeviceDpc+137
fffff802`3738d030 ACPI!ACPIBuildProcessGenericList =  (inline caller) ACPI!ACPIBuildDeviceDpc+4c0
fffff802`373ab136 ACPI!_ACPIInternalError =  (inline caller) ACPI!ACPIBuildDeviceDpc+1e5c6
fffff802`3738ce4c ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildDeviceDpc+2dc
fffff802`3738ccb4 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildDeviceDpc+144
fffff802`3738ccc8 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildDeviceDpc+158
fffff802`3738b962 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIBuildDeviceExtension+126
fffff802`3738b941 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIBuildDeviceExtension+105
fffff802`3738b933 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIBuildDeviceExtension+f7
fffff802`3738b925 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIBuildDeviceExtension+e9
fffff802`3738b917 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIBuildDeviceExtension+db
fffff802`3738b909 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIBuildDeviceExtension+cd
fffff802`3738b8bf ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!ACPIBuildDeviceExtension+83
fffff802`3738b8c6 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ACPIBuildDeviceExtension+8a
fffff802`3738b9f6 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildDeviceExtension+1ba
fffff802`3738b9d4 ACPI!InsertTailList =  (inline caller) ACPI!ACPIBuildDeviceExtension+198
fffff802`373aae02 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIBuildDeviceExtension+1f5c6
fffff802`373aae02 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIBuildDeviceExtension+1f5c6
fffff802`3738ba18 ACPI!ACPIInternalInterruptPolarityCacheInitialize =  (inline caller) ACPI!ACPIBuildDeviceExtension+1dc
fffff802`3738ba1f ACPI!InitializeListHead =  (inline caller) ACPI!ACPIBuildDeviceExtension+1e3
fffff802`3738ba0a ACPI!AMLISetNSObjectContext =  (inline caller) ACPI!ACPIBuildDeviceExtension+1ce
fffff802`37385cd9 ACPI!AMLIGetNSObjectType =  (inline caller) ACPI!ACPIBuildDevicePowerNodes+115
fffff802`373a7fcf ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildDevicePowerNodes+2240b
fffff802`37385d50 ACPI!InsertTailList =  (inline caller) ACPI!ACPIBuildDevicePowerNodes+18c
fffff802`373a80b2 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIBuildDevicePowerNodes+224ee
fffff802`373a80b2 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIBuildDevicePowerNodes+224ee
fffff802`373a8067 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIBuildDevicePowerNodes+224a3
fffff802`3738b29d ACPI!InsertTailList =  (inline caller) ACPI!ACPIBuildDeviceRequest+91
fffff802`373aad85 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIBuildDeviceRequest+1fb79
fffff802`373aad85 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIBuildDeviceRequest+1fb79
fffff802`373bb113 ACPI!AMLIGetNSObjectType =  (inline caller) ACPI!ACPIBuildDeviceResetPowerNode+157
fffff802`373bb13f ACPI!InsertTailList =  (inline caller) ACPI!ACPIBuildDeviceResetPowerNode+183
fffff802`373bb148 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIBuildDeviceResetPowerNode+18c
fffff802`373bb148 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIBuildDeviceResetPowerNode+18c
fffff802`373bb26b ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildDiscoverDeviceCompletion+2b
fffff802`373bb313 ACPI!ACPIBuildCompleteGeneric =  (inline caller) ACPI!ACPIBuildDiscoverDeviceCompletion+d3
fffff802`373bb374 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildDiscoverPowerNodeCompletion+34
fffff802`373bb3cf ACPI!ACPIBuildCompleteGeneric =  (inline caller) ACPI!ACPIBuildDiscoverPowerNodeCompletion+8f
fffff802`373bb37d ACPI!AMLIGetNSObjectNameSegment =  (inline caller) ACPI!ACPIBuildDiscoverPowerNodeCompletion+3d
fffff802`373bb37d ACPI!GetObjectFromHandle =  (inline caller) ACPI!ACPIBuildDiscoverPowerNodeCompletion+3d
fffff802`373bb5c0 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildDockExtension+1b4
fffff802`373bb689 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIBuildDockExtension+27d
fffff802`373bb6df ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildDockExtension+2d3
fffff802`373bb6b9 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIBuildDockExtension+2ad
fffff802`37380923 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildFilter+df
fffff802`373808ff ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildFilter+bb
fffff802`373808f6 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIBuildFilter+b2
fffff802`373a5ca7 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildFilter+25463
fffff802`373a5c9e ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildFilter+2545a
fffff802`373a10b6 ACPI!ACPIEnableQueryFixedEnables =  (inline caller) ACPI!ACPIBuildFixedButtonExtension+26
fffff802`373a1114 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildFixedButtonExtension+84
fffff802`373a1182 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildFixedButtonExtension+f2
fffff802`373b8ae2 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildFixedButtonExtension+17a52
fffff802`373b537c ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIBuildIssueInvalidateRelationsWorker+1ab48
fffff802`3739e400 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIBuildIssueNotifyInvalidateRelations+30
fffff802`373bb8fd ACPI!ACPIAmliNameObject =  (inline caller) ACPI!ACPIBuildIssueNotifyInvalidateRelationsForDockDevice+8d
fffff802`373bb8fd ACPI!AMLIGetNSObjectNameSegment =  (inline caller) ACPI!ACPIBuildIssueNotifyInvalidateRelationsForDockDevice+8d
fffff802`373bb8fd ACPI!GetObjectFromHandle =  (inline caller) ACPI!ACPIBuildIssueNotifyInvalidateRelationsForDockDevice+8d
fffff802`373bb98e ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildIssueNotifyInvalidateRelationsForDockDevice+11e
fffff802`37387296 ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!ACPIBuildMissingChildren+2a
fffff802`373872a0 ACPI!AMLIGetNSObjectType =  (inline caller) ACPI!ACPIBuildMissingChildren+34
fffff802`373bba24 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildMissingEjectionRelations+50
fffff802`373bb9fd ACPI!InitializeListHead =  (inline caller) ACPI!ACPIBuildMissingEjectionRelations+29
fffff802`373bba47 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildMissingEjectionRelations+73
fffff802`373bba58 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIBuildMissingEjectionRelations+84
fffff802`373bbb05 ACPI!InsertTailList =  (inline caller) ACPI!ACPIBuildMissingEjectionRelations+131
fffff802`373bbb4e ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIBuildMissingEjectionRelations+17a
fffff802`373bbbce ACPI!InsertTailList =  (inline caller) ACPI!ACPIBuildMissingEjectionRelations+1fa
fffff802`373bbc36 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIBuildMissingEjectionRelations+262
fffff802`373bbc36 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIBuildMissingEjectionRelations+262
fffff802`373bbb89 ACPI!InsertTailList =  (inline caller) ACPI!ACPIBuildMissingEjectionRelations+1b5
fffff802`37381000 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildPdo+c8
fffff802`37380ff7 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIBuildPdo+bf
fffff802`373811cd ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildPdo+295
fffff802`3739debf ACPI!AMLISetNSObjectContext =  (inline caller) ACPI!ACPIBuildPowerResourceExtension+c7
fffff802`3739deb8 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIBuildPowerResourceExtension+c0
fffff802`3739dead ACPI!InitializeListHead =  (inline caller) ACPI!ACPIBuildPowerResourceExtension+b5
fffff802`3739dea2 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIBuildPowerResourceExtension+aa
fffff802`3739de58 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!ACPIBuildPowerResourceExtension+60
fffff802`3739de58 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ACPIBuildPowerResourceExtension+60
fffff802`3739dda5 ACPI!InsertTailList =  (inline caller) ACPI!ACPIBuildPowerResourceRequest+7d
fffff802`373b6eae ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIBuildPowerResourceRequest+19186
fffff802`373b6eae ACPI!RtlFailFast =  (inline caller) ACPI!ACPIBuildPowerResourceRequest+19186
fffff802`3739e511 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIBuildProcessDelayedDependencyPhase0+61
fffff802`3739e4f0 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIBuildProcessDelayedDependencyPhase0+40
fffff802`373b6ff4 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIBuildProcessDelayedDependencyPhase0+18b44
fffff802`373b6ff4 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIBuildProcessDelayedDependencyPhase0+18b44
fffff802`3739e4e0 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessDelayedDependencyPhase0+30
fffff802`3739e5b8 ACPI!ACPIBuildCompleteGeneric =  (inline caller) ACPI!ACPIBuildProcessDelayedDependencyPhase0+108
fffff802`3739fb47 ACPI!InsertTailList =  (inline caller) ACPI!ACPIBuildProcessDelayedDependencyPhase1+77
fffff802`373b7dcc ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIBuildProcessDelayedDependencyPhase1+182fc
fffff802`373b7dcc ACPI!RtlFailFast =  (inline caller) ACPI!ACPIBuildProcessDelayedDependencyPhase1+182fc
fffff802`3739fb3b ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIBuildProcessDelayedDependencyPhase1+6b
fffff802`3739fbfb ACPI!ACPIBuildCompleteGeneric =  (inline caller) ACPI!ACPIBuildProcessDelayedDependencyPhase1+12b
fffff802`373bbd1c ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessDeviceFailure+9c
fffff802`3738e675 ACPI!AMLIGetNamedChild =  (inline caller) ACPI!ACPIBuildProcessDeviceGenericEval+45
fffff802`3738e7f1 ACPI!CreateObjectHandle =  (inline caller) ACPI!ACPIBuildProcessDeviceGenericEval+1c1
fffff802`3738e7f1 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!ACPIBuildProcessDeviceGenericEval+1c1
fffff802`3738e7fc ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ACPIBuildProcessDeviceGenericEval+1cc
fffff802`3738e7f8 ACPI!GetSelfHandle =  (inline caller) ACPI!ACPIBuildProcessDeviceGenericEval+1c8
fffff802`373abf3c ACPI!_ACPIInternalError =  (inline caller) ACPI!ACPIBuildProcessDeviceGenericEval+1d90c
fffff802`3738e816 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!ACPIBuildProcessDeviceGenericEval+1e6
fffff802`3738e81d ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ACPIBuildProcessDeviceGenericEval+1ed
fffff802`3738e6f5 ACPI!ACPIBuildCompleteGeneric =  (inline caller) ACPI!ACPIBuildProcessDeviceGenericEval+c5
fffff802`3738e708 ACPI!ACPIBuildCompleteCommon =  (inline caller) ACPI!ACPIBuildProcessDeviceGenericEval+d8
fffff802`3738f078 ACPI!AMLIGetNamedChild =  (inline caller) ACPI!ACPIBuildProcessDeviceGenericEvalStrict+48
fffff802`3738f23a ACPI!CreateObjectHandle =  (inline caller) ACPI!ACPIBuildProcessDeviceGenericEvalStrict+20a
fffff802`3738f23a ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!ACPIBuildProcessDeviceGenericEvalStrict+20a
fffff802`3738f23a ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ACPIBuildProcessDeviceGenericEvalStrict+20a
fffff802`3738f240 ACPI!GetSelfHandle =  (inline caller) ACPI!ACPIBuildProcessDeviceGenericEvalStrict+210
fffff802`373ac34a ACPI!_ACPIInternalError =  (inline caller) ACPI!ACPIBuildProcessDeviceGenericEvalStrict+1d31a
fffff802`3738f25f ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!ACPIBuildProcessDeviceGenericEvalStrict+22f
fffff802`3738f25f ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ACPIBuildProcessDeviceGenericEvalStrict+22f
fffff802`3738f170 ACPI!ACPIBuildCompleteMustSucceed =  (inline caller) ACPI!ACPIBuildProcessDeviceGenericEvalStrict+140
fffff802`373ac39a ACPI!AMLIGetNSObjectNameSegment =  (inline caller) ACPI!ACPIBuildProcessDeviceGenericEvalStrict+1d36a
fffff802`3738f18e ACPI!ACPIBuildCompleteCommon =  (inline caller) ACPI!ACPIBuildProcessDeviceGenericEvalStrict+15e
fffff802`3738f1ab ACPI!ACPIBuildScheduleDpc =  (inline caller) ACPI!ACPIBuildProcessDeviceGenericEvalStrict+17b
fffff802`373a79a3 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIBuildProcessDevicePhaseAdr+22a23
fffff802`373a7a3f ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessDevicePhaseAdr+22abf
fffff802`37385027 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessDevicePhaseAdr+a7
fffff802`373a7a7b ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessDevicePhaseAdr+22afb
fffff802`37384d49 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessDevicePhaseCid+1c9
fffff802`37384d3f ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessDevicePhaseCid+1bf
fffff802`37384c60 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIBuildProcessDevicePhaseCid+e0
fffff802`37384d0d ACPI!ACPIBuildCompleteMustSucceed =  (inline caller) ACPI!ACPIBuildProcessDevicePhaseCid+18d
fffff802`373a7ac7 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessDevicePhaseCls+22967
fffff802`37389dfc ACPI!ACPIBuildCompleteGeneric =  (inline caller) ACPI!ACPIBuildProcessDevicePhaseCrs+ac
fffff802`37385308 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessDevicePhaseDep+108
fffff802`373aa4a1 ACPI!InsertTailList =  (inline caller) ACPI!ACPIBuildProcessDevicePhaseEjd+20141
fffff802`373aa4bb ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIBuildProcessDevicePhaseEjd+2015b
fffff802`373aa4bb ACPI!RtlFailFast =  (inline caller) ACPI!ACPIBuildProcessDevicePhaseEjd+2015b
fffff802`373aa476 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIBuildProcessDevicePhaseEjd+20116
fffff802`3738a415 ACPI!ACPIBuildCompleteGeneric =  (inline caller) ACPI!ACPIBuildProcessDevicePhaseEjd+b5
fffff802`37384e24 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessDevicePhaseHid+94
fffff802`37384e14 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessDevicePhaseHid+84
fffff802`37384e0a ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessDevicePhaseHid+7a
fffff802`373a7b81 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessDevicePhaseHrv+22861
fffff802`3738a327 ACPI!ACPIBuildProcessNotifyPepDiscoverDevice =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePep+107
fffff802`3738a318 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePep+f8
fffff802`3738a2df ACPI!ACPIBuildCompleteGeneric =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePep+bf
fffff802`373a7c26 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePr3+22896
fffff802`373a7c14 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePr3+22884
fffff802`373a7c46 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePr3+228b6
fffff802`373a7c65 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePrr+226e5
fffff802`373a7c9b ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePrr+2271b
fffff802`3739a8f5 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePrs+45
fffff802`373b53b6 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePrs+1ab06
fffff802`3739a9a2 ACPI!ACPIBuildCompleteGeneric =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePrs+f2
fffff802`373a7cc8 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePrw+22628
fffff802`373a7cfe ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePrw+2265e
fffff802`373a7cf5 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePrw+22655
fffff802`373858d4 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePrw+234
fffff802`373a7e57 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePrw+227b7
fffff802`373859c3 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePrw+323
fffff802`3738eb6d ACPI!AMLIGetNamedChild =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePrx+7d
fffff802`3738ed28 ACPI!CreateObjectHandle =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePrx+238
fffff802`3738ed28 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePrx+238
fffff802`3738ed28 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePrx+238
fffff802`3738ed2e ACPI!GetSelfHandle =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePrx+23e
fffff802`373ac14a ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePrx+1d65a
fffff802`3738ed04 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePrx+214
fffff802`3738ec54 ACPI!ACPIBuildCompleteMustSucceed =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePrx+164
fffff802`3738ec79 ACPI!ACPIBuildCompleteCommon =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePrx+189
fffff802`373aa330 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePsc+20420
fffff802`373aa398 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePsc+20488
fffff802`3738a09b ACPI!ACPIBuildCompleteGeneric =  (inline caller) ACPI!ACPIBuildProcessDevicePhasePsc+18b
fffff802`3738a1c1 ACPI!ACPIBuildCompleteMustSucceed =  (inline caller) ACPI!ACPIBuildProcessDevicePhaseSta+a1
fffff802`373a7ed4 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessDevicePhaseSub+22444
fffff802`3739bd50 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessDevicePhaseUid+20
fffff802`3738d31b ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIBuildProcessGenericComplete+6b
fffff802`373ab202 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIBuildProcessGenericComplete+1df52
fffff802`373ab202 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIBuildProcessGenericComplete+1df52
fffff802`3738d35f ACPI!ExFreeToNPagedLookasideList =  (inline caller) ACPI!ACPIBuildProcessGenericComplete+af
fffff802`373b684a ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIBuildProcessNotifyPepDeleteDevice+198da
fffff802`373b6889 ACPI!AcpiUnreflectNativeObject =  (inline caller) ACPI!ACPIBuildProcessNotifyPepDeleteDevice+19919
fffff802`373bbd74 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIBuildProcessPowerResourceFailure+24
fffff802`373b833e ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!ACPIBuildProcessPowerResourcePhaseDep+17e2e
fffff802`373b833e ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ACPIBuildProcessPowerResourcePhaseDep+17e2e
fffff802`3739e740 ACPI!ACPIBuildProcessNotifyPepDiscoverPowerNode =  (inline caller) ACPI!ACPIBuildProcessPowerResourcePhasePep+50
fffff802`3739e737 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessPowerResourcePhasePep+47
fffff802`373b7076 ACPI!AMLIGetNSObjectNameSegment =  (inline caller) ACPI!ACPIBuildProcessPowerResourcePhasePep+18986
fffff802`373b7076 ACPI!GetObjectFromHandle =  (inline caller) ACPI!ACPIBuildProcessPowerResourcePhasePep+18986
fffff802`3739e759 ACPI!AMLIGetNSObjectNameSegment =  (inline caller) ACPI!ACPIBuildProcessPowerResourcePhasePep+69
fffff802`3739e759 ACPI!GetObjectFromHandle =  (inline caller) ACPI!ACPIBuildProcessPowerResourcePhasePep+69
fffff802`3739e7a8 ACPI!ACPIBuildCompleteGeneric =  (inline caller) ACPI!ACPIBuildProcessPowerResourcePhasePep+b8
fffff802`373a6882 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessPowerResourcePhaseSetupOnOff+24a42
fffff802`37381f16 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!ACPIBuildProcessPowerResourcePhaseSetupOnOff+d6
fffff802`37381f16 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ACPIBuildProcessPowerResourcePhaseSetupOnOff+d6
fffff802`373a68ff ACPI!ACPIBuildCompleteGeneric =  (inline caller) ACPI!ACPIBuildProcessPowerResourcePhaseSetupOnOff+24abf
fffff802`3739f5cf ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessPowerResourcePhaseSta+4f
fffff802`3739f5bc ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIBuildProcessPowerResourcePhaseSta+3c
fffff802`3739f5b7 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessPowerResourcePhaseSta+37
fffff802`3739f607 ACPI!InsertTailList =  (inline caller) ACPI!ACPIBuildProcessPowerResourcePhaseSta+87
fffff802`3739f636 ACPI!ACPIBuildCompleteGeneric =  (inline caller) ACPI!ACPIBuildProcessPowerResourcePhaseSta+b6
fffff802`3739f657 ACPI!InsertTailList =  (inline caller) ACPI!ACPIBuildProcessPowerResourcePhaseSta+d7
fffff802`3739f670 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIBuildProcessPowerResourcePhaseSta+f0
fffff802`3739f670 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIBuildProcessPowerResourcePhaseSta+f0
fffff802`373989a4 ACPI!ACPIBuildCompleteMustSucceed =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseCheckBridge+34
fffff802`373989c3 ACPI!ACPIBuildCompleteCommon =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseCheckBridge+53
fffff802`373989e0 ACPI!ACPIBuildScheduleDpc =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseCheckBridge+70
fffff802`3738fa6b ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseCheckDep+19b
fffff802`3738f986 ACPI!ACPIBuildCompleteMustSucceed =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseCheckDep+b6
fffff802`3738f9a4 ACPI!ACPIBuildCompleteCommon =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseCheckDep+d4
fffff802`3738f9c1 ACPI!ACPIBuildScheduleDpc =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseCheckDep+f1
fffff802`3738fc4c ACPI!ACPIBuildProcessNotifyPepDiscoverDevice =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseCheckPep+18c
fffff802`3738fc39 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseCheckPep+179
fffff802`3738fb8f ACPI!ACPIBuildCompleteMustSucceed =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseCheckPep+cf
fffff802`3738fbad ACPI!ACPIBuildCompleteCommon =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseCheckPep+ed
fffff802`3738fbca ACPI!ACPIBuildScheduleDpc =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseCheckPep+10a
fffff802`3738ef6e ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseCheckSta+1fe
fffff802`3738efa5 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseCheckSta+235
fffff802`373ac247 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseCheckSta+1d4d7
fffff802`373ac272 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseCheckSta+1d502
fffff802`3738edf7 ACPI!ACPIBuildCompleteMustSucceed =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseCheckSta+87
fffff802`3738ee15 ACPI!ACPIBuildCompleteCommon =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseCheckSta+a5
fffff802`3738ee32 ACPI!ACPIBuildScheduleDpc =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseCheckSta+c2
fffff802`373bbde6 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhasePostProcessResult+36
fffff802`373bbdd6 ACPI!AMLIPerformDLMObjectBindings =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhasePostProcessResult+26
fffff802`373bbdd6 ACPI!GetObjectFromHandle =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhasePostProcessResult+26
fffff802`3738f62c ACPI!ACPIExtListTestElement =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRecurse+8c
fffff802`3738f62c ACPI!ACPIExtListIsFinished =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRecurse+8c
fffff802`3738f751 ACPI!ACPIExtListEnumNext =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRecurse+1b1
fffff802`3738f754 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRecurse+1b4
fffff802`3738f779 ACPI!ACPIExtListIsFinished =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRecurse+1d9
fffff802`3738f5dd ACPI!ACPIExtListStartEnum =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRecurse+3d
fffff802`3738f648 ACPI!ACPIBuildRunMethodRequest =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRecurse+a8
fffff802`3738f648 ACPI!ExAllocateFromNPagedLookasideList =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRecurse+a8
fffff802`3738f707 ACPI!InsertTailList =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRecurse+167
fffff802`373ac64d ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRecurse+1d0ad
fffff802`373ac64d ACPI!RtlFailFast =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRecurse+1d0ad
fffff802`3738f81b ACPI!ACPIBuildCompleteMustSucceed =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRecurse+27b
fffff802`3738f82d ACPI!ACPIBuildCompleteCommon =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRecurse+28d
fffff802`3738f84a ACPI!ACPIBuildScheduleDpc =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRecurse+2aa
fffff802`3738f326 ACPI!AMLIGetNamedChild =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRunMethod+66
fffff802`3738f4c3 ACPI!CreateObjectHandle =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRunMethod+203
fffff802`3738f4c3 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRunMethod+203
fffff802`3738f4c3 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRunMethod+203
fffff802`3738f4c9 ACPI!GetSelfHandle =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRunMethod+209
fffff802`3738f4f9 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRunMethod+239
fffff802`373ac4e5 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRunMethod+1d225
fffff802`3738f52f ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRunMethod+26f
fffff802`3738f52f ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRunMethod+26f
fffff802`3738f40d ACPI!ACPIBuildCompleteMustSucceed =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRunMethod+14d
fffff802`373ac5ae ACPI!AMLIGetNSObjectNameSegment =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRunMethod+1d2ee
fffff802`3738f42d ACPI!ACPIBuildCompleteCommon =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRunMethod+16d
fffff802`3738f448 ACPI!ACPIBuildScheduleDpc =  (inline caller) ACPI!ACPIBuildProcessRunMethodPhaseRunMethod+188
fffff802`3738d100 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildProcessSpecialSynchronizationList+6c
fffff802`3738d150 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildProcessSpecialSynchronizationList+bc
fffff802`3738d164 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildProcessSpecialSynchronizationList+d0
fffff802`3738d178 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildProcessSpecialSynchronizationList+e4
fffff802`3738d18c ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildProcessSpecialSynchronizationList+f8
fffff802`3738d1a4 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildProcessSpecialSynchronizationList+110
fffff802`3738d1bc ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildProcessSpecialSynchronizationList+128
fffff802`373899b6 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIBuildProcessSynchronizationList+d2
fffff802`373b7eab ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIBuildProcessThermalZoneCheckType+1805b
fffff802`373b7f60 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessThermalZoneCheckType+18110
fffff802`373b7f80 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessThermalZoneCheckType+18130
fffff802`3739fedc ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessThermalZoneCheckType+8c
fffff802`3739ff71 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessThermalZoneCheckType+121
fffff802`3739ff5a ACPI!AMLIGetNSObjectNameSegment =  (inline caller) ACPI!ACPIBuildProcessThermalZoneCheckType+10a
fffff802`3739ff5a ACPI!GetObjectFromHandle =  (inline caller) ACPI!ACPIBuildProcessThermalZoneCheckType+10a
fffff802`373b80ae ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!ACPIBuildProcessThermalZoneCheckType+1825e
fffff802`373b80ae ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ACPIBuildProcessThermalZoneCheckType+1825e
fffff802`373b80fa ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!ACPIBuildProcessThermalZoneCheckType+182aa
fffff802`373b80fa ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ACPIBuildProcessThermalZoneCheckType+182aa
fffff802`373b889c ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessThermalZoneDep+17b6c
fffff802`373bbf59 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessThermalZoneFailure+99
fffff802`373bbf72 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIBuildProcessThermalZoneFailure+b2
fffff802`373bbfa8 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIBuildProcessThermalZoneFailure+e8
fffff802`373bc01d ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessThermalZoneHid+d
fffff802`373bc0ba ACPI!ACPIBuildCompleteGeneric =  (inline caller) ACPI!ACPIBuildProcessThermalZoneHid+aa
fffff802`373b88df ACPI!ACPIBuildProcessNotifyPepDiscoverDevice =  (inline caller) ACPI!ACPIBuildProcessThermalZonePep+17abf
fffff802`373b88d0 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessThermalZonePep+17ab0
fffff802`373bc100 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessThermalZoneUid+20
fffff802`37385e10 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessorExtension+4c
fffff802`37385f0d ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessorExtension+149
fffff802`373a8380 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIBuildProcessorExtension+225bc
fffff802`373a83b4 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIBuildProcessorExtension+225f0
fffff802`373a8413 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildProcessorExtension+2264f
fffff802`373a83e8 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIBuildProcessorExtension+22624
fffff802`373bc33b ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIBuildRegRequest+cf
fffff802`37395961 ACPI!InsertTailList =  (inline caller) ACPI!ACPIBuildRunMethodRequest+cd
fffff802`373959d4 ACPI!InsertTailList =  (inline caller) ACPI!ACPIBuildRunMethodRequest+140
fffff802`373959d4 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIBuildRunMethodRequest+140
fffff802`373959d4 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIBuildRunMethodRequest+140
fffff802`3738c5cd ACPI!InsertHeadList =  (inline caller) ACPI!ACPIBuildSpecialSynchronizationRequest+d1
fffff802`373aaf9b ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIBuildSpecialSynchronizationRequest+1ea9f
fffff802`373aaf9b ACPI!RtlFailFast =  (inline caller) ACPI!ACPIBuildSpecialSynchronizationRequest+1ea9f
fffff802`3739c91c ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildSurpriseRemovedExtension+dc
fffff802`3739c913 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIBuildSurpriseRemovedExtension+d3
fffff802`3739c930 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildSurpriseRemovedExtension+f0
fffff802`3739c94a ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildSurpriseRemovedExtension+10a
fffff802`373b6588 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildSurpriseRemovedExtension+19d48
fffff802`3739c96f ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildSurpriseRemovedExtension+12f
fffff802`3739c997 ACPI!AcpiCleanupDeviceExtensionEarly =  (inline caller) ACPI!ACPIBuildSurpriseRemovedExtension+157
fffff802`373b65c0 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIBuildSurpriseRemovedExtension+19d80
fffff802`373b65e6 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIBuildSurpriseRemovedExtension+19da6
fffff802`373b65e6 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIBuildSurpriseRemovedExtension+19da6
fffff802`3739c9dd ACPI!AMLISetNSObjectContext =  (inline caller) ACPI!ACPIBuildSurpriseRemovedExtension+19d
fffff802`3739c767 ACPI!InsertHeadList =  (inline caller) ACPI!ACPIBuildSynchronizationRequestInternal+d7
fffff802`373b652d ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIBuildSynchronizationRequestInternal+19e9d
fffff802`373b652d ACPI!RtlFailFast =  (inline caller) ACPI!ACPIBuildSynchronizationRequestInternal+19e9d
fffff802`3739f8a6 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildThermalZoneExtension+42
fffff802`3739f8ff ACPI!InitializeListHead =  (inline caller) ACPI!ACPIBuildThermalZoneExtension+9b
fffff802`373b7cf9 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildThermalZoneExtension+18495
fffff802`3739f811 ACPI!InsertTailList =  (inline caller) ACPI!ACPIBuildThermalZoneRequest+91
fffff802`373b7bdf ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIBuildThermalZoneRequest+1845f
fffff802`373b7bdf ACPI!RtlFailFast =  (inline caller) ACPI!ACPIBuildThermalZoneRequest+1845f
fffff802`373bc5a7 ACPI!AMLIGetNSObjectType =  (inline caller) ACPI!ACPIBuildWakeEventDeviceContext+193
fffff802`373bc5a7 ACPI!GetObjectFromHandle =  (inline caller) ACPI!ACPIBuildWakeEventDeviceContext+193
fffff802`373bc6a0 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBuildWakeEventDeviceContext+28c
fffff802`3739e48b ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIPendingInvalidate+2f
fffff802`373b703f ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!AreDependenciesSatisfied+189ab
fffff802`3740e83a ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIBusAndFilterIrpQueryCapabilities+2a
fffff802`3740eac0 ACPI!AcpiCheckSecureDevice =  (inline caller) ACPI!ACPIBusAndFilterIrpQueryCapabilities+2b0
fffff802`3741938a ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIBusAndFilterIrpQueryPnpDeviceState+af3a
fffff802`37412188 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIBusIrpDeviceUsageNotification+18
fffff802`373ff1ac ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIBusIrpQueryDeviceRelations+1c
fffff802`373ffc07 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIBusIrpQueryId+17
fffff802`37380a0c ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIBusIrpQueryInterface+1c
fffff802`373bd3a1 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIBusIrpQueryPower+21
fffff802`373bd394 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIBusIrpQueryPower+14
fffff802`373bd41a ACPI!ACPIDispatchPowerIrpFailure =  (inline caller) ACPI!ACPIBusIrpQueryPower+9a
fffff802`373bd7e1 ACPI!ACPIDebugGetIrpText =  (inline caller) ACPI!ACPIBusIrpRemoveDevice+381
fffff802`3739d6d9 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIBusIrpSetDevicePower+15
fffff802`3739d69b ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIBusIrpSetPower+b
fffff802`3739d694 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIBusIrpSetPower+4
fffff802`373bd8b2 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIBusIrpSetSystemPower+5e
fffff802`373bda2c ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIBusIrpSetSystemPower+1d8
fffff802`37400c17 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIBusIrpStartDevice+17
fffff802`37400d53 ACPI!_ObReferenceObjectByHandle =  (inline caller) ACPI!ACPIBusIrpStartDevice+153
fffff802`373a0616 ACPI!ExInitializeWorkItem =  (inline caller) ACPI!ACPIBusIrpStartDeviceCompletion+76
fffff802`373b8477 ACPI!ACPIDebugGetIrpText =  (inline caller) ACPI!ACPIBusIrpStartDeviceCompletion+17ed7
fffff802`3741ddb1 ACPI!IsPciBus =  (inline caller) ACPI!ACPIBusIrpStopDevice+81
fffff802`3741ddb6 ACPI!IsPciBusExtension =  (inline caller) ACPI!ACPIBusIrpStopDevice+86
fffff802`373bdad9 ACPI!ACPIDispatchIrpSurpriseRemoved =  (inline caller) ACPI!ACPIBusIrpSurpriseRemoval+39
fffff802`373bdc65 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIBusIrpSurpriseRemoval+1c5
fffff802`373bdc70 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIBusIrpSurpriseRemoval+1d0
fffff802`373bdd09 ACPI!ACPIDebugGetIrpText =  (inline caller) ACPI!ACPIBusIrpSurpriseRemoval+269
fffff802`3739afb9 ACPI!ACPIDebugGetIrpText =  (inline caller) ACPI!ACPIBusIrpUnhandled+a9
fffff802`373723e8 ACPI!RtlStringExValidateDestW =  (inline caller) ACPI!RtlStringCbPrintfExW+18
fffff802`37372414 ACPI!RtlStringValidateDestW =  (inline caller) ACPI!RtlStringCbPrintfExW+44
fffff802`37372435 ACPI!RtlStringExValidateSrcW =  (inline caller) ACPI!RtlStringCbPrintfExW+65
fffff802`373a5267 ACPI!RtlStringExHandleFillBehindNullW =  (inline caller) ACPI!RtlStringCbPrintfExW+32e97
fffff802`373bdecd ACPI!RtlStringValidateDestW =  (inline caller) ACPI!RtlStringCbPrintfW+11
fffff802`373be602 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIButtonCancelRequest+32
fffff802`373be64f ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIButtonCancelRequest+7f
fffff802`373be64f ACPI!RtlFailFast =  (inline caller) ACPI!ACPIButtonCancelRequest+7f
fffff802`373be66c ACPI!InitializeListHead =  (inline caller) ACPI!ACPIButtonCompletePendingIrps+10
fffff802`373be6bc ACPI!IoSetCancelRoutine =  (inline caller) ACPI!ACPIButtonCompletePendingIrps+60
fffff802`373be6fd ACPI!InsertTailList =  (inline caller) ACPI!ACPIButtonCompletePendingIrps+a1
fffff802`373be6dc ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIButtonCompletePendingIrps+80
fffff802`373be756 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIButtonCompletePendingIrps+fa
fffff802`373be79b ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIButtonCompletePendingIrps+13f
fffff802`373be79b ACPI!RtlFailFast =  (inline caller) ACPI!ACPIButtonCompletePendingIrps+13f
fffff802`3739fc9a ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIButtonDeviceControl+1a
fffff802`373b7dfa ACPI!ACPIDispatchIrpInvalid =  (inline caller) ACPI!ACPIButtonDeviceControl+1817a
fffff802`373b7e0e ACPI!IoSetCancelRoutine =  (inline caller) ACPI!ACPIButtonDeviceControl+1818e
fffff802`3739fce5 ACPI!IoSetCancelRoutine =  (inline caller) ACPI!ACPIButtonDeviceControl+65
fffff802`3739fd04 ACPI!InsertTailList =  (inline caller) ACPI!ACPIButtonDeviceControl+84
fffff802`373b7e3e ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIButtonDeviceControl+181be
fffff802`373b7e3e ACPI!RtlFailFast =  (inline caller) ACPI!ACPIButtonDeviceControl+181be
fffff802`3739fcfd ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIButtonDeviceControl+7d
fffff802`373be934 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPICMButtonSetPower+24
fffff802`373be92d ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPICMButtonSetPower+1d
fffff802`373be974 ACPI!ACPICMButtonWaitWakeCancel =  (inline caller) ACPI!ACPICMButtonSetPower+64
fffff802`373a183b ACPI!ExInitializeWorkItem =  (inline caller) ACPI!ACPICMButtonStartCompletion+4b
fffff802`373b918b ACPI!ACPIDebugGetIrpText =  (inline caller) ACPI!ACPICMButtonStartCompletion+1799b
fffff802`3737c94c ACPI!ACPIInternalWaitWakeLoop =  (inline caller) ACPI!ACPICMButtonStartWorker+9c
fffff802`3737ca16 ACPI!ACPIDebugGetIrpText =  (inline caller) ACPI!ACPICMButtonStartWorker+166
fffff802`373bedf6 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPICMLidPowerStateCallBack+116
fffff802`373bede5 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPICMLidPowerStateCallBack+105
fffff802`373bee5c ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPICMLidSetPower+1c
fffff802`373bee55 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPICMLidSetPower+15
fffff802`373beefd ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPICMLidSetPowerCompletion+1d
fffff802`373bf190 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!CmosConfigSpaceHandler+60
fffff802`373bf190 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!CmosConfigSpaceHandler+60
fffff802`37411c53 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!CmosGetInterface+bf
fffff802`373bf331 ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!CmosGetOpRegionType+29
fffff802`373bf331 ACPI!GetObjectFromHandle =  (inline caller) ACPI!CmosGetOpRegionType+29
fffff802`373862ff ACPI!AMLIIterateSiblingsNext =  (inline caller) ACPI!EnableDisableCMOSRegions+5f
fffff802`37386368 ACPI!AMLIDereferenceHandleEx =  (inline caller) ACPI!EnableDisableCMOSRegions+c8
fffff802`37386368 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!EnableDisableCMOSRegions+c8
fffff802`373a856e ACPI!FreeObjectHandle =  (inline caller) ACPI!EnableDisableCMOSRegions+222ce
fffff802`373862ff ACPI!AMLIGetNextSibling =  (inline caller) ACPI!EnableDisableCMOSRegions+5f
fffff802`37386312 ACPI!GetObjectFromHandle =  (inline caller) ACPI!EnableDisableCMOSRegions+72
fffff802`37386335 ACPI!CreateObjectHandle =  (inline caller) ACPI!EnableDisableCMOSRegions+95
fffff802`37386335 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!EnableDisableCMOSRegions+95
fffff802`37386335 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!EnableDisableCMOSRegions+95
fffff802`3738633b ACPI!GetSelfHandle =  (inline caller) ACPI!EnableDisableCMOSRegions+9b
fffff802`3740dbbd ACPI!ACPIMatchHardwareAddress =  (inline caller) ACPI!ACPIDetectCouldExtensionBeInRelation+139
fffff802`3740dbbd ACPI!ACPIInternalGetDeviceCapabilities =  (inline caller) ACPI!ACPIDetectCouldExtensionBeInRelation+139
fffff802`373aa6d4 ACPI!ACPIExtListExitEnumEarly =  (inline caller) ACPI!ACPIDetectDockDevices+20134
fffff802`3738ac3b ACPI!ACPIExtListTestElement =  (inline caller) ACPI!ACPIDetectDuplicateHID+a7
fffff802`3738ac3b ACPI!ACPIExtListIsFinished =  (inline caller) ACPI!ACPIDetectDuplicateHID+a7
fffff802`373aac44 ACPI!ACPIExtListExitEnumEarly =  (inline caller) ACPI!ACPIDetectDuplicateHID+200b0
fffff802`373bf69e ACPI!ACPIExtListExitEnumEarly =  (inline caller) ACPI!ACPIDetectEjectDevices+22e
fffff802`373890b5 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDetectFilterDevices+311
fffff802`37388e53 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDetectFilterDevices+af
fffff802`37388f8b ACPI!ACPIInitDereferenceDeviceExtensionUnlocked =  (inline caller) ACPI!ACPIDetectFilterDevices+1e7
fffff802`37388f72 ACPI!ACPIInitReferenceDeviceExtension =  (inline caller) ACPI!ACPIDetectFilterDevices+1ce
fffff802`373a9a04 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDetectPdoDevices+2092c
fffff802`3738942c ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDetectPdoDevices+354
fffff802`373895c4 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDetectPdoDevices+4ec
fffff802`373891c0 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDetectPdoDevices+e8
fffff802`373891ef ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIDetectPdoDevices+117
fffff802`373893e4 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDetectPdoDevices+30c
fffff802`373892bb ACPI!ACPIInitDereferenceDeviceExtensionUnlocked =  (inline caller) ACPI!ACPIDetectPdoDevices+1e3
fffff802`37389295 ACPI!ACPIInitReferenceDeviceExtension =  (inline caller) ACPI!ACPIDetectPdoDevices+1bd
fffff802`373894a7 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDetectPdoDevices+3cf
fffff802`373895b6 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDetectPdoDevices+4de
fffff802`373a0c2a ACPI!InitializeDeviceFirmwareLock =  (inline caller) ACPI!AcpiHandleDeviceFirmwareLock+1a
fffff802`373a0c37 ACPI!InitializeListHead =  (inline caller) ACPI!AcpiHandleDeviceFirmwareLock+27
fffff802`37412f14 ACPI!InitializeListHead =  (inline caller) ACPI!AcpiRegisterDeviceFirmwareLockHandler+98
fffff802`37412efa ACPI!InitializeListHead =  (inline caller) ACPI!AcpiRegisterDeviceFirmwareLockHandler+7e
fffff802`3741ae5c ACPI!DestroyUnlinkedDeviceFirmwareLockHandlerEntry =  (inline caller) ACPI!AcpiRegisterDeviceFirmwareLockHandler+7fe0
fffff802`3741e162 ACPI!DestroyDeviceFirmwareLockHandlerEntry =  (inline caller) ACPI!AcpiUnregisterDeviceFirmwareLockHandler+6
fffff802`373bfa1c ACPI!IsListEmpty =  (inline caller) ACPI!AcquireDeviceFirmwareLock+230
fffff802`373bfa2d ACPI!AcquireReferenceDeviceFirmwareLockHandlerLocked =  (inline caller) ACPI!AcquireDeviceFirmwareLock+241
fffff802`373bf8bb ACPI!InsertTailList =  (inline caller) ACPI!AcquireDeviceFirmwareLock+cf
fffff802`373bfaa9 ACPI!FatalListEntryError =  (inline caller) ACPI!AcquireDeviceFirmwareLock+2bd
fffff802`373bfaa9 ACPI!RtlFailFast =  (inline caller) ACPI!AcquireDeviceFirmwareLock+2bd
fffff802`373bfb40 ACPI!IsListEmpty =  (inline caller) ACPI!DereferenceDeviceFirmwareLockHandlerEntry+88
fffff802`373bfb23 ACPI!RemoveEntryList =  (inline caller) ACPI!DereferenceDeviceFirmwareLockHandlerEntry+6b
fffff802`373bfb48 ACPI!RemoveHeadList =  (inline caller) ACPI!DereferenceDeviceFirmwareLockHandlerEntry+90
fffff802`373bfb6a ACPI!FatalListEntryError =  (inline caller) ACPI!DereferenceDeviceFirmwareLockHandlerEntry+b2
fffff802`373bfb6a ACPI!RtlFailFast =  (inline caller) ACPI!DereferenceDeviceFirmwareLockHandlerEntry+b2
fffff802`373bfbbc ACPI!DestroyUnlinkedDeviceFirmwareLockHandlerEntry =  (inline caller) ACPI!DereferenceDeviceFirmwareLockHandlerEntry+104
fffff802`373bfc91 ACPI!RemoveEntryList =  (inline caller) ACPI!DestroyDeviceFirmwareLock+65
fffff802`373bfcee ACPI!FatalListEntryError =  (inline caller) ACPI!DestroyDeviceFirmwareLock+c2
fffff802`373bfcee ACPI!RtlFailFast =  (inline caller) ACPI!DestroyDeviceFirmwareLock+c2
fffff802`373a0799 ACPI!InsertTailList =  (inline caller) ACPI!InsertDeviceFirmwareLockHandlerEntry+3d
fffff802`373b84c4 ACPI!FatalListEntryError =  (inline caller) ACPI!InsertDeviceFirmwareLockHandlerEntry+17d68
fffff802`373b84c4 ACPI!RtlFailFast =  (inline caller) ACPI!InsertDeviceFirmwareLockHandlerEntry+17d68
fffff802`373c034c ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIDeviceCancelWaitWakeIrp+21c
fffff802`373c0441 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIDeviceCancelWaitWakeIrp+311
fffff802`373c0441 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIDeviceCancelWaitWakeIrp+311
fffff802`373c03f7 ACPI!ACPIDeviceNotifyWakeEventDevice =  (inline caller) ACPI!ACPIDeviceCancelWaitWakeIrp+2c7
fffff802`3738fd18 ACPI!ACPIDeviceCompleteCommon =  (inline caller) ACPI!ACPIDeviceCompleteGenericPhase+98
fffff802`3738fd3e ACPI!ACPIPowerScheduleDpc =  (inline caller) ACPI!ACPIDeviceCompleteGenericPhase+be
fffff802`3739d3ca ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDeviceCompletePhase3Off+6a
fffff802`3739d3e1 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDeviceCompletePhase3Off+81
fffff802`3739d3db ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDeviceCompletePhase3Off+7b
fffff802`3739d3ea ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDeviceCompletePhase3Off+8a
fffff802`373b6988 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIDeviceCompletePhase3Off+19628
fffff802`3739d4ca ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDeviceCompletePhase3On+6a
fffff802`3739d4e1 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDeviceCompletePhase3On+81
fffff802`3739d4db ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIDeviceCompletePhase3On+7b
fffff802`3739d4ea ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDeviceCompletePhase3On+8a
fffff802`373b69c6 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIDeviceCompletePhase3On+19566
fffff802`3738e939 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDeviceCompleteRequest+b1
fffff802`3738e949 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDeviceCompleteRequest+c1
fffff802`373abfc6 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIDeviceCompleteRequest+1d73e
fffff802`373abf9e ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIDeviceCompleteRequest+1d716
fffff802`373abf97 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIDeviceCompleteRequest+1d70f
fffff802`373abf76 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIDeviceCompleteRequest+1d6ee
fffff802`373ac02c ACPI!InitializeListHead =  (inline caller) ACPI!ACPIDeviceCompleteRequest+1d7a4
fffff802`373ac004 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIDeviceCompleteRequest+1d77c
fffff802`373abffd ACPI!InitializeListHead =  (inline caller) ACPI!ACPIDeviceCompleteRequest+1d775
fffff802`373abfd8 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIDeviceCompleteRequest+1d750
fffff802`373ac082 ACPI!InsertTailList =  (inline caller) ACPI!ACPIDeviceCompleteRequest+1d7fa
fffff802`373ac065 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIDeviceCompleteRequest+1d7dd
fffff802`3738e9e2 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIDeviceCompleteRequest+15a
fffff802`3738e9ba ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIDeviceCompleteRequest+132
fffff802`3738ea10 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDeviceCompleteRequest+188
fffff802`373ac0e6 ACPI!InsertTailList =  (inline caller) ACPI!ACPIDeviceCompleteRequest+1d85e
fffff802`373ac124 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIDeviceCompleteRequest+1d89c
fffff802`373ac124 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIDeviceCompleteRequest+1d89c
fffff802`3738ea44 ACPI!ExFreeToNPagedLookasideList =  (inline caller) ACPI!ACPIDeviceCompleteRequest+1bc
fffff802`373b4757 ACPI!InsertTailList =  (inline caller) ACPI!ACPIDeviceDiscoverDependencies+1b343
fffff802`373b486e ACPI!InsertTailList =  (inline caller) ACPI!ACPIDeviceDiscoverDependencies+1b45a
fffff802`373b486e ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIDeviceDiscoverDependencies+1b45a
fffff802`373b486e ACPI!RtlFailFast =  (inline caller) ACPI!ACPIDeviceDiscoverDependencies+1b45a
fffff802`373b477c ACPI!InsertTailList =  (inline caller) ACPI!ACPIDeviceDiscoverDependencies+1b368
fffff802`3738c7a0 ACPI!ExAllocateFromNPagedLookasideList =  (inline caller) ACPI!ACPIDeviceInitializePowerRequest+1c
fffff802`3738c80b ACPI!InitializeListHead =  (inline caller) ACPI!ACPIDeviceInitializePowerRequest+87
fffff802`3738c800 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIDeviceInitializePowerRequest+7c
fffff802`3738c7ee ACPI!InitializeListHead =  (inline caller) ACPI!ACPIDeviceInitializePowerRequest+6a
fffff802`3738c83f ACPI!InitializeListHead =  (inline caller) ACPI!ACPIDeviceInitializePowerRequest+bb
fffff802`373aafde ACPI!KeGetCurrentIrql =  (inline caller) ACPI!ACPIDeviceInitializePowerRequest+1e85a
fffff802`373ab00f ACPI!ACPIDeviceNotifyWakeEventDevice =  (inline caller) ACPI!ACPIDeviceInitializePowerRequest+1e88b
fffff802`3738c9fe ACPI!InsertHeadList =  (inline caller) ACPI!ACPIDeviceInternalQueueRequest+e
fffff802`3738ca54 ACPI!InsertTailList =  (inline caller) ACPI!ACPIDeviceInternalQueueRequest+64
fffff802`3738ca71 ACPI!InsertTailList =  (inline caller) ACPI!ACPIDeviceInternalQueueRequest+81
fffff802`3738ca97 ACPI!InsertTailList =  (inline caller) ACPI!ACPIDeviceInternalQueueRequest+a7
fffff802`3738cac0 ACPI!InsertTailList =  (inline caller) ACPI!ACPIDeviceInternalQueueRequest+d0
fffff802`3738cac0 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIDeviceInternalQueueRequest+d0
fffff802`3738cac0 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIDeviceInternalQueueRequest+d0
fffff802`3737df0f ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIDeviceIrpCompleteRequest+cf
fffff802`373c06a5 ACPI!IoSetCompletionRoutine =  (inline caller) ACPI!ACPIDeviceIrpDelayedDeviceOffRequest+d5
fffff802`373c06d4 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIDeviceIrpDelayedDeviceOffRequest+104
fffff802`373c069e ACPI!IoCopyCurrentIrpStackLocationToNext =  (inline caller) ACPI!ACPIDeviceIrpDelayedDeviceOffRequest+ce
fffff802`373c069e ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIDeviceIrpDelayedDeviceOffRequest+ce
fffff802`373c07fc ACPI!IoSetCompletionRoutine =  (inline caller) ACPI!ACPIDeviceIrpDelayedDeviceOnRequest+dc
fffff802`373c082b ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIDeviceIrpDelayedDeviceOnRequest+10b
fffff802`373c07f5 ACPI!IoCopyCurrentIrpStackLocationToNext =  (inline caller) ACPI!ACPIDeviceIrpDelayedDeviceOnRequest+d5
fffff802`373c07f5 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIDeviceIrpDelayedDeviceOnRequest+d5
fffff802`373a11d3 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIDeviceIrpDeviceFilterRequest+23
fffff802`373a126d ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIDeviceIrpDeviceFilterRequest+bd
fffff802`3739d74c ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIDeviceIrpDeviceRequest+28
fffff802`373b6c06 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIDeviceIrpDeviceRequest+194e2
fffff802`3737cb14 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIDeviceIrpForwardRequest+14
fffff802`373c0899 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIDeviceIrpSystemRequest+21
fffff802`373c0980 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIDeviceIrpSystemRequest+108
fffff802`373c0a70 ACPI!IoSetCancelRoutine =  (inline caller) ACPI!ACPIDeviceIrpWaitWakeRequestComplete+84
fffff802`37395471 ACPI!ACPIReferenceWaitWakePowerRequest =  (inline caller) ACPI!ACPIDeviceIrpWaitWakeRequestPending+e1
fffff802`3739547c ACPI!InsertTailList =  (inline caller) ACPI!ACPIDeviceIrpWaitWakeRequestPending+ec
fffff802`373b2e9f ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIDeviceIrpWaitWakeRequestPending+1db0f
fffff802`373b2e9f ACPI!RtlFailFast =  (inline caller) ACPI!ACPIDeviceIrpWaitWakeRequestPending+1db0f
fffff802`373954bb ACPI!IoSetCancelRoutine =  (inline caller) ACPI!ACPIDeviceIrpWaitWakeRequestPending+12b
fffff802`373c0cb2 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIDeviceIrpWarmEjectRequest+e2
fffff802`3738fdef ACPI!InitializeListHead =  (inline caller) ACPI!ACPIDevicePowerDpc+1f
fffff802`3738fe76 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+a6
fffff802`3738fea3 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+d3
fffff802`3738feb0 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+e0
fffff802`373904d3 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+703
fffff802`3738febd ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+ed
fffff802`3738fecd ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+fd
fffff802`3738fee1 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+111
fffff802`373900ae ACPI!ACPIDevicePowerProcessGenericPhase =  (inline caller) ACPI!ACPIDevicePowerDpc+2de
fffff802`37390124 ACPI!ACPIIsPowerRequestBlocked =  (inline caller) ACPI!ACPIDevicePowerDpc+354
fffff802`373ac82c ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+1ca5c
fffff802`373ac87e ACPI!InsertTailList =  (inline caller) ACPI!ACPIDevicePowerDpc+1caae
fffff802`373ac85d ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIDevicePowerDpc+1ca8d
fffff802`373903ce ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+5fe
fffff802`3738fef1 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+121
fffff802`3738ff10 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+140
fffff802`3738ff07 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+137
fffff802`3738fefe ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+12e
fffff802`3738ff3d ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+16d
fffff802`3738ff44 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+174
fffff802`3738ff2b ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+15b
fffff802`3738ff24 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+154
fffff802`3738ff51 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+181
fffff802`3738ff65 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+195
fffff802`3738ffd6 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+206
fffff802`3738fffa ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+22a
fffff802`3738ffdf ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+20f
fffff802`3738fff1 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+221
fffff802`3738ffe8 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+218
fffff802`3738ffc0 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+1f0
fffff802`3738ffcd ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+1fd
fffff802`37390233 ACPI!ACPIDevicePowerProcessGenericPhase =  (inline caller) ACPI!ACPIDevicePowerDpc+463
fffff802`373ac8e5 ACPI!_ACPIInternalError =  (inline caller) ACPI!ACPIDevicePowerDpc+1cb15
fffff802`37390270 ACPI!ACPIIsPowerRequestBlocked =  (inline caller) ACPI!ACPIDevicePowerDpc+4a0
fffff802`3739051f ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+74f
fffff802`37390568 ACPI!InsertTailList =  (inline caller) ACPI!ACPIDevicePowerDpc+798
fffff802`37390591 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIDevicePowerDpc+7c1
fffff802`37390591 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIDevicePowerDpc+7c1
fffff802`37390544 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIDevicePowerDpc+774
fffff802`37390034 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+264
fffff802`37390068 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerDpc+298
fffff802`37390077 ACPI!ACPIDevicePowerProcessSynchronizeList =  (inline caller) ACPI!ACPIDevicePowerDpc+2a7
fffff802`373991a1 ACPI!InsertTailList =  (inline caller) ACPI!ACPIDevicePowerProcessBlockedItems+69
fffff802`373991bf ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIDevicePowerProcessBlockedItems+87
fffff802`373991bf ACPI!RtlFailFast =  (inline caller) ACPI!ACPIDevicePowerProcessBlockedItems+87
fffff802`37399184 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIDevicePowerProcessBlockedItems+4c
fffff802`373b46c4 ACPI!_ACPIInternalError =  (inline caller) ACPI!ACPIDevicePowerProcessGenericPhase+1b690
fffff802`373b466f ACPI!InsertTailList =  (inline caller) ACPI!ACPIDevicePowerProcessGenericPhase+1b63b
fffff802`373b46bd ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIDevicePowerProcessGenericPhase+1b689
fffff802`373b46bd ACPI!RtlFailFast =  (inline caller) ACPI!ACPIDevicePowerProcessGenericPhase+1b689
fffff802`373b4656 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIDevicePowerProcessGenericPhase+1b622
fffff802`373c0e3e ACPI!ACPIDeviceCompleteInterpreterRequest =  (inline caller) ACPI!ACPIDevicePowerProcessPhase0SystemSubPhase1+ae
fffff802`3738bd34 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIDevicePowerProcessPhase1DeviceSubPhase1+194
fffff802`3738bd14 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIDevicePowerProcessPhase1DeviceSubPhase1+174
fffff802`3738c165 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIDevicePowerProcessPhase1DeviceSubPhase4+95
fffff802`3738c16c ACPI!FreeDataBuffs =  (inline caller) ACPI!ACPIDevicePowerProcessPhase1DeviceSubPhase4+9c
fffff802`373b7add ACPI!AMLIGetNSObjectNameSegment =  (inline caller) ACPI!ACPIDevicePowerProcessPhase1DeviceSubPhase4EnumPowerNodes+1845d
fffff802`373b7add ACPI!GetObjectFromHandle =  (inline caller) ACPI!ACPIDevicePowerProcessPhase1DeviceSubPhase4EnumPowerNodes+1845d
fffff802`373b7b39 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDevicePowerProcessPhase1DeviceSubPhase4EnumPowerNodes+184b9
fffff802`373b7b30 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIDevicePowerProcessPhase1DeviceSubPhase4EnumPowerNodes+184b0
fffff802`373b7b44 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDevicePowerProcessPhase1DeviceSubPhase4EnumPowerNodes+184c4
fffff802`373c0fc4 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDevicePowerProcessPhase2SystemSubPhase1+164
fffff802`373c0fcf ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIDevicePowerProcessPhase2SystemSubPhase1+16f
fffff802`373c1008 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDevicePowerProcessPhase2SystemSubPhase1+1a8
fffff802`373c1021 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIDevicePowerProcessPhase2SystemSubPhase1+1c1
fffff802`373c102d ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDevicePowerProcessPhase2SystemSubPhase1+1cd
fffff802`373b5c66 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerProcessPhase4+1a4f2
fffff802`373b5c56 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerProcessPhase4+1a4e2
fffff802`373b5c46 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDevicePowerProcessPhase4+1a4d2
fffff802`373b5c76 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDevicePowerProcessPhase4+1a502
fffff802`3738b4e2 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDevicePowerProcessPhase5DeviceSubPhase2+1f2
fffff802`3738b3d2 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDevicePowerProcessPhase5DeviceSubPhase2+e2
fffff802`3738bfa0 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIDevicePowerProcessPhase5DeviceSubPhase3+180
fffff802`3738bf40 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDevicePowerProcessPhase5DeviceSubPhase3+120
fffff802`373aae51 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIDevicePowerProcessPhase5DeviceSubPhase3+1f031
fffff802`373aae5f ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDevicePowerProcessPhase5DeviceSubPhase3+1f03f
fffff802`373c13ed ACPI!InitializeListHead =  (inline caller) ACPI!ACPIDevicePowerProcessPhase5SystemSubPhase1+ad
fffff802`373c1429 ACPI!ACPIDeviceCompleteInterpreterRequest =  (inline caller) ACPI!ACPIDevicePowerProcessPhase5SystemSubPhase1+e9
fffff802`373c1502 ACPI!ACPIDeviceCompleteInterpreterRequest =  (inline caller) ACPI!ACPIDevicePowerProcessPhase5SystemSubPhase2+b2
fffff802`373c194d ACPI!InitializeListHead =  (inline caller) ACPI!ACPIDevicePowerProcessPhase5SystemSubPhase5+ad
fffff802`373c1989 ACPI!ACPIDeviceCompleteInterpreterRequest =  (inline caller) ACPI!ACPIDevicePowerProcessPhase5SystemSubPhase5+e9
fffff802`373c1b90 ACPI!_ACPIInternalError =  (inline caller) ACPI!ACPIDevicePowerProcessPhase5WarmEjectSubPhase1+80
fffff802`373b90cd ACPI!InsertTailList =  (inline caller) ACPI!ACPIDeviceRecordBlockedOnPhase3List+179f5
fffff802`373b90f4 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIDeviceRecordBlockedOnPhase3List+17a1c
fffff802`373b90f4 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIDeviceRecordBlockedOnPhase3List+17a1c
fffff802`373b90b4 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIDeviceRecordBlockedOnPhase3List+179dc
fffff802`37399316 ACPI!ACPIDeviceSetupDependencyFlags =  (inline caller) ACPI!ACPIDeviceRecordDependencies+3a
fffff802`3739ac5a ACPI!ACPIIsPowerNodeBlocked =  (inline caller) ACPI!ACPIIsPhase3ListEmptyOfUnblockedItems+d2
fffff802`3739ac69 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIIsPhase3ListEmptyOfUnblockedItems+e1
fffff802`373b5498 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIIsPhase3ListEmptyOfUnblockedItems+1a910
fffff802`3739ac0a ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIIsPhase3ListEmptyOfUnblockedItems+82
fffff802`373b46ec ACPI!IsListEmpty =  (inline caller) ACPI!ACPIIsPowerRequestBlocked+1b520
fffff802`3737c650 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIMarkPagingPathPowerNodeEnum+0
fffff802`373c1f93 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIMovePowerListUnblockedItems+13
fffff802`373c1fda ACPI!InsertTailList =  (inline caller) ACPI!ACPIMovePowerListUnblockedItems+5a
fffff802`373c204d ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIMovePowerListUnblockedItems+cd
fffff802`373c204d ACPI!RtlFailFast =  (inline caller) ACPI!ACPIMovePowerListUnblockedItems+cd
fffff802`373c1fbd ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIMovePowerListUnblockedItems+3d
fffff802`373c201a ACPI!IsListEmpty =  (inline caller) ACPI!ACPIMovePowerListUnblockedItems+9a
fffff802`373b4a9c ACPI!InsertTailList =  (inline caller) ACPI!ACPIPowerNodeDiscoverDependencies+1b5e0
fffff802`373b4b1a ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIPowerNodeDiscoverDependencies+1b65e
fffff802`373b4b1a ACPI!RtlFailFast =  (inline caller) ACPI!ACPIPowerNodeDiscoverDependencies+1b65e
fffff802`373b4a79 ACPI!InsertTailList =  (inline caller) ACPI!ACPIPowerNodeDiscoverDependencies+1b5bd
fffff802`373a1945 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!AcpiSetD3ColdSupport+15
fffff802`373a1950 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!AcpiSetD3ColdSupport+20
fffff802`373c25e1 ACPI!AcpiDeviceResetReference =  (inline caller) ACPI!AcpiDeviceResetCompleteResetWorker+31
fffff802`373c2680 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!AcpiDeviceResetCompleteResetWorker+d0
fffff802`373a0f3c ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!AcpiDeviceResetInterface+1c
fffff802`373b8a5b ACPI!ExInitializeWorkItem =  (inline caller) ACPI!AcpiDeviceResetInterface+17b3b
fffff802`373c2a84 ACPI!AcpiDeviceResetReference =  (inline caller) ACPI!AcpiPlatformLevelDeviceReset+9c
fffff802`373c2bcb ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDeferredWakeCompletion+9b
fffff802`373c2be6 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIDeferredWakeCompletion+b6
fffff802`373952a0 ACPI!ACPIWmiInitLog =  (inline caller) ACPI!ACPIDispatchAddDevice+2a0
fffff802`37395257 ACPI!ACPIInternalInterruptPolarityCacheInitialize =  (inline caller) ACPI!ACPIDispatchAddDevice+257
fffff802`3739525e ACPI!InitializeListHead =  (inline caller) ACPI!ACPIDispatchAddDevice+25e
fffff802`37395250 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIDispatchAddDevice+250
fffff802`37395242 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIDispatchAddDevice+242
fffff802`37395234 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIDispatchAddDevice+234
fffff802`37395226 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIDispatchAddDevice+226
fffff802`37395215 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIDispatchAddDevice+215
fffff802`373951f8 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIDispatchAddDevice+1f8
fffff802`37371e75 ACPI!ACPIInternalGetDeviceExtension =  (inline caller) ACPI!ACPIDispatchForwardIrp+15
fffff802`373a2d9c ACPI!_ACPIInternalErrorEx =  (inline caller) ACPI!ACPIDispatchForwardIrp+30f3c
fffff802`37371ec2 ACPI!IoSkipCurrentIrpStackLocation =  (inline caller) ACPI!ACPIDispatchForwardIrp+62
fffff802`373c2c4f ACPI!ACPIDispatchIrpSuccess =  (inline caller) ACPI!ACPIDispatchForwardIrpWithExceptions+2f
fffff802`3739e26a ACPI!IoCopyCurrentIrpStackLocationToNext =  (inline caller) ACPI!ACPIDispatchForwardOrFailPowerIrp+2a
fffff802`3739e26a ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIDispatchForwardOrFailPowerIrp+2a
fffff802`3737ca96 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIDispatchForwardPowerIrp+6
fffff802`3737cac1 ACPI!IoSkipCurrentIrpStackLocation =  (inline caller) ACPI!ACPIDispatchForwardPowerIrp+31
fffff802`3737103f ACPI!ACPIInternalGetDispatchTable =  (inline caller) ACPI!ACPIDispatchIrp+2f
fffff802`373a2552 ACPI!_ACPIInternalErrorEx =  (inline caller) ACPI!ACPIDispatchIrp+31542
fffff802`37371028 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIDispatchIrp+18
fffff802`373a25c4 ACPI!ACPIDispatchIrpSurpriseRemoved =  (inline caller) ACPI!ACPIDispatchIrp+315b4
fffff802`373a27b7 ACPI!ACPIDeferredWakeHandler =  (inline caller) ACPI!ACPIDispatchIrp+317a7
fffff802`373a27b7 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIDispatchIrp+317a7
fffff802`373a27e2 ACPI!ACPIDispatchIrpInvalid =  (inline caller) ACPI!ACPIDispatchIrp+317d2
fffff802`373712dd ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIDispatchIrp+2cd
fffff802`3737136b ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIDispatchIrp+35b
fffff802`373a271a ACPI!ACPIDispatchIrpInvalid =  (inline caller) ACPI!ACPIDispatchIrp+3170a
fffff802`373a2631 ACPI!ACPIDispatchIrpWithStatus =  (inline caller) ACPI!ACPIDispatchIrp+31621
fffff802`373711f7 ACPI!ACPIInternalDecrementIrpReferenceCount =  (inline caller) ACPI!ACPIDispatchIrp+1e7
fffff802`37371188 ACPI!ACPIDispatchForwardIrp =  (inline caller) ACPI!ACPIDispatchIrp+178
fffff802`37371188 ACPI!ACPIInternalGetDeviceExtension =  (inline caller) ACPI!ACPIDispatchIrp+178
fffff802`373a2607 ACPI!_ACPIInternalErrorEx =  (inline caller) ACPI!ACPIDispatchIrp+315f7
fffff802`373711d4 ACPI!IoSkipCurrentIrpStackLocation =  (inline caller) ACPI!ACPIDispatchIrp+1c4
fffff802`373c2ca9 ACPI!ACPIDispatchIrpInvalid =  (inline caller) ACPI!ACPIDispatchIrpCreateClose+19
fffff802`373c2d14 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIDispatchPowerIrpSuccess+4
fffff802`37396900 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIGetPortRangeInterfaces+a4
fffff802`3741e37f ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIEcInternalControl+f
fffff802`373c3521 ACPI!InsertTailList =  (inline caller) ACPI!ACPIEcQueueEcIrp+e1
fffff802`373c352a ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIEcQueueEcIrp+ea
fffff802`373c352a ACPI!RtlFailFast =  (inline caller) ACPI!ACPIEcQueueEcIrp+ea
fffff802`3741e452 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIEcReadWrite+12
fffff802`3741e497 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIEcReadWrite+57
fffff802`3741e6b5 ACPI!ACPIEcDisconnectGpioInterrupt =  (inline caller) ACPI!ACPIEcDisconnectInterrupt+19
fffff802`373c3761 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIEcCreateEcData+a9
fffff802`373c387f ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIEcStartDevice+1f
fffff802`373c38d4 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!ACPIEcStartDevice+74
fffff802`373c38db ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ACPIEcStartDevice+7b
fffff802`373c3997 ACPI!ExInitializeWorkItem =  (inline caller) ACPI!ACPIEcStartDeviceCompletion+57
fffff802`373c3a46 ACPI!ACPIDebugGetIrpText =  (inline caller) ACPI!ACPIEcStartDeviceCompletion+106
fffff802`373c3aec ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIEcStartDeviceWorker+3c
fffff802`373c3bea ACPI!ACPIDebugGetIrpText =  (inline caller) ACPI!ACPIEcStartDeviceWorker+13a
fffff802`3741e9a4 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIEcConnectHandler+14
fffff802`3741ebdd ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIEcDisconnectHandler+1d
fffff802`373c4331 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIEcServiceIoLoop+1d
fffff802`373c43b2 ACPI!WRITE_PORT_UCHAR =  (inline caller) ACPI!ACPIEcServiceIoLoop+9e
fffff802`373c4446 ACPI!WRITE_PORT_UCHAR =  (inline caller) ACPI!ACPIEcServiceIoLoop+132
fffff802`373c449a ACPI!READ_PORT_UCHAR =  (inline caller) ACPI!ACPIEcServiceIoLoop+186
fffff802`373c44fb ACPI!READ_PORT_UCHAR =  (inline caller) ACPI!ACPIEcServiceIoLoop+1e7
fffff802`373c472b ACPI!InsertTailList =  (inline caller) ACPI!ACPIEcServiceIoLoop+417
fffff802`373c4898 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIEcServiceIoLoop+584
fffff802`373c48a5 ACPI!RemoveHeadList =  (inline caller) ACPI!ACPIEcServiceIoLoop+591
fffff802`373c48e5 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIEcServiceIoLoop+5d1
fffff802`373c48e5 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIEcServiceIoLoop+5d1
fffff802`373c493b ACPI!READ_PORT_UCHAR =  (inline caller) ACPI!ACPIEcWatchdogDpc+1b
fffff802`373c4a62 ACPI!WRITE_PORT_UCHAR =  (inline caller) ACPI!ACPIEcWatchdogDpc+142
fffff802`3741f259 ACPI!IrqLibUpdateInterruptProperties =  (inline caller) ACPI!AcpiUpdateInterruptProperties+19
fffff802`3740f671 ACPI!_ObReferenceObjectByHandle =  (inline caller) ACPI!QueryExternalTranslatorInterface+ad
fffff802`3740f738 ACPI!RESOURCE_TRANSLATION_INTERFACE_STANDARD_INIT =  (inline caller) ACPI!QueryExternalTranslatorInterface+174
fffff802`3740f82f ACPI!ValidateExternalTranslationInterface =  (inline caller) ACPI!QueryExternalTranslatorInterface+26b
fffff802`3738afb1 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIExtListEnumNext+121
fffff802`3738aed1 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIExtListEnumNext+41
fffff802`3738afc7 ACPI!ACPIExtListIsFinished =  (inline caller) ACPI!ACPIExtListEnumNext+137
fffff802`3738af74 ACPI!ACPIExtListIsFinished =  (inline caller) ACPI!ACPIExtListEnumNext+e4
fffff802`3738aefb ACPI!ACPIInitDereferenceDeviceExtensionUnlocked =  (inline caller) ACPI!ACPIExtListEnumNext+6b
fffff802`3738af24 ACPI!ACPIInitDereferenceDeviceExtensionLocked =  (inline caller) ACPI!ACPIExtListEnumNext+94
fffff802`373aaca3 ACPI!_ACPIInternalErrorEx =  (inline caller) ACPI!ACPIExtListEnumNext+1fe13
fffff802`3738ab70 ACPI!ACPIExtListIsFinished =  (inline caller) ACPI!ACPIExtListStartEnum+38
fffff802`3738a6a8 ACPI!ACPIExtListIsFinished =  (inline caller) ACPI!ACPIExtListTestElement+4
fffff802`3738a6c2 ACPI!ACPIInitReferenceDeviceExtension =  (inline caller) ACPI!ACPIExtListTestElement+1e
fffff802`373c50ae ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIFanCancelRequest+ce
fffff802`373c5100 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIFanCancelRequest+120
fffff802`373c5100 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIFanCancelRequest+120
fffff802`3737d3a0 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIFanCompletePendingIrps+14
fffff802`3737d43e ACPI!IoSetCancelRoutine =  (inline caller) ACPI!ACPIFanCompletePendingIrps+b2
fffff802`3737d49e ACPI!InsertTailList =  (inline caller) ACPI!ACPIFanCompletePendingIrps+112
fffff802`3737d47d ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIFanCompletePendingIrps+f1
fffff802`3737d4da ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIFanCompletePendingIrps+14e
fffff802`373a3d32 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIFanCompletePendingIrps+269a6
fffff802`373a3d32 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIFanCompletePendingIrps+269a6
fffff802`373a3b64 ACPI!ACPIDispatchIrpInvalid =  (inline caller) ACPI!ACPIFanDeviceControl+26b24
fffff802`373a3b75 ACPI!IoSetCancelRoutine =  (inline caller) ACPI!ACPIFanDeviceControl+26b35
fffff802`3737d141 ACPI!IoSetCancelRoutine =  (inline caller) ACPI!ACPIFanDeviceControl+101
fffff802`3737d174 ACPI!InsertTailList =  (inline caller) ACPI!ACPIFanDeviceControl+134
fffff802`373a3b9a ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIFanDeviceControl+26b5a
fffff802`373a3b9a ACPI!RtlFailFast =  (inline caller) ACPI!ACPIFanDeviceControl+26b5a
fffff802`3737d156 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIFanDeviceControl+116
fffff802`373c5510 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIFanFSTCallback+330
fffff802`373c552e ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIFanFSTCallback+34e
fffff802`373a3cbf ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIFanLoop+26af3
fffff802`373a3d12 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIFanLoop+26b46
fffff802`373a3d12 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIFanLoop+26b46
fffff802`3737d328 ACPI!InsertTailList =  (inline caller) ACPI!ACPIFanLoop+15c
fffff802`3737cf27 ACPI!AcpiDiagTraceFanPowerStateChange =  (inline caller) ACPI!ACPIFanPowerCallback+27
fffff802`3737cf27 ACPI!EventDataDescCreate =  (inline caller) ACPI!ACPIFanPowerCallback+27
fffff802`3740107c ACPI!InitializeListHead =  (inline caller) ACPI!ACPIFanStartDevice+7c
fffff802`373816e6 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!AcpiFanEjectInterface+6
fffff802`37411816 ACPI!IoSetCompletionRoutine =  (inline caller) ACPI!ACPIFilterIrpDeviceUsageNotification+46
fffff802`3741181d ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpDeviceUsageNotification+4d
fffff802`374117e7 ACPI!IoCopyCurrentIrpStackLocationToNext =  (inline caller) ACPI!ACPIFilterIrpDeviceUsageNotification+17
fffff802`374117e7 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpDeviceUsageNotification+17
fffff802`3737e1db ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpDeviceUsageNotificationCompletion+2b
fffff802`373a43e8 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIFilterIrpDeviceUsageNotificationCompletion+26238
fffff802`3740ba07 ACPI!IoSetCompletionRoutine =  (inline caller) ACPI!ACPIFilterIrpFilterResourceRequirements+87
fffff802`3740ba0e ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpFilterResourceRequirements+8e
fffff802`3740b9d8 ACPI!IoCopyCurrentIrpStackLocationToNext =  (inline caller) ACPI!ACPIFilterIrpFilterResourceRequirements+58
fffff802`3740b9d8 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpFilterResourceRequirements+58
fffff802`3741032a ACPI!ACPIIrpSetPagableCompletionRoutineAndForward =  (inline caller) ACPI!ACPIFilterIrpQueryCapabilities+1a
fffff802`374103e4 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIFilterIrpQueryCapabilities+d4
fffff802`374103a2 ACPI!IoSetCompletionRoutine =  (inline caller) ACPI!ACPIFilterIrpQueryCapabilities+92
fffff802`374103d1 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpQueryCapabilities+c1
fffff802`3741039b ACPI!IoCopyCurrentIrpStackLocationToNext =  (inline caller) ACPI!ACPIFilterIrpQueryCapabilities+8b
fffff802`3741039b ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpQueryCapabilities+8b
fffff802`373ffe28 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpQueryDeviceRelations+28
fffff802`373fff3f ACPI!IoSetCompletionRoutine =  (inline caller) ACPI!ACPIFilterIrpQueryDeviceRelations+13f
fffff802`373fff6e ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpQueryDeviceRelations+16e
fffff802`373fff38 ACPI!IoCopyCurrentIrpStackLocationToNext =  (inline caller) ACPI!ACPIFilterIrpQueryDeviceRelations+138
fffff802`373fff38 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpQueryDeviceRelations+138
fffff802`37408e83 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpQueryInterface+23
fffff802`37409207 ACPI!IoSetCompletionRoutine =  (inline caller) ACPI!ACPIFilterIrpQueryIommuInterface+4b
fffff802`37409236 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpQueryIommuInterface+7a
fffff802`37409200 ACPI!IoCopyCurrentIrpStackLocationToNext =  (inline caller) ACPI!ACPIFilterIrpQueryIommuInterface+44
fffff802`37409200 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpQueryIommuInterface+44
fffff802`37408b8b ACPI!IoSetCompletionRoutine =  (inline caller) ACPI!ACPIFilterIrpQueryPnpLocationInterface+4f
fffff802`37408bbc ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpQueryPnpLocationInterface+80
fffff802`37408b84 ACPI!IoCopyCurrentIrpStackLocationToNext =  (inline caller) ACPI!ACPIFilterIrpQueryPnpLocationInterface+48
fffff802`37408b84 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpQueryPnpLocationInterface+48
fffff802`373c5626 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIFilterIrpQueryPower+26
fffff802`373c561f ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpQueryPower+1f
fffff802`3739caf2 ACPI!IoSetCompletionRoutine =  (inline caller) ACPI!ACPIFilterIrpRemoveDevice+c2
fffff802`3739cb21 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpRemoveDevice+f1
fffff802`3739caeb ACPI!IoCopyCurrentIrpStackLocationToNext =  (inline caller) ACPI!ACPIFilterIrpRemoveDevice+bb
fffff802`3739caeb ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpRemoveDevice+bb
fffff802`373b6676 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIFilterIrpRemoveDevice+19c46
fffff802`3739cbae ACPI!ACPIDebugGetIrpText =  (inline caller) ACPI!ACPIFilterIrpRemoveDevice+17e
fffff802`3739d564 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIFilterIrpSetPower+34
fffff802`3739d554 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpSetPower+24
fffff802`373b6a21 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIFilterIrpSetPower+194f1
fffff802`373b6be2 ACPI!ACPIBuildRegOffRequest =  (inline caller) ACPI!ACPIFilterIrpSetPower+196b2
fffff802`3739d622 ACPI!IoSetCompletionRoutine =  (inline caller) ACPI!ACPIFilterIrpSetPower+f2
fffff802`3739d64e ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpSetPower+11e
fffff802`3739d61b ACPI!IoCopyCurrentIrpStackLocationToNext =  (inline caller) ACPI!ACPIFilterIrpSetPower+eb
fffff802`3739d61b ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpSetPower+eb
fffff802`37401228 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpStartDevice+18
fffff802`3739eba5 ACPI!ExInitializeWorkItem =  (inline caller) ACPI!ACPIFilterIrpStartDeviceCompletion+25
fffff802`37410ce2 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpStartDeviceWorker+32
fffff802`37410dad ACPI!IoSetCompletionRoutine =  (inline caller) ACPI!ACPIFilterIrpStartDeviceWorker+fd
fffff802`37410dad ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpStartDeviceWorker+fd
fffff802`37410d77 ACPI!IoCopyCurrentIrpStackLocationToNext =  (inline caller) ACPI!ACPIFilterIrpStartDeviceWorker+c7
fffff802`37410d77 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpStartDeviceWorker+c7
fffff802`3741f86e ACPI!IsPciBus =  (inline caller) ACPI!ACPIFilterIrpStopDevice+5e
fffff802`3741f873 ACPI!IsPciBusExtension =  (inline caller) ACPI!ACPIFilterIrpStopDevice+63
fffff802`3741f8a0 ACPI!IoSetCompletionRoutine =  (inline caller) ACPI!ACPIFilterIrpStopDevice+90
fffff802`3741f8cc ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpStopDevice+bc
fffff802`3741f899 ACPI!IoCopyCurrentIrpStackLocationToNext =  (inline caller) ACPI!ACPIFilterIrpStopDevice+89
fffff802`3741f899 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpStopDevice+89
fffff802`373c5794 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIFilterIrpStopDeviceCompletion+c4
fffff802`37412fa1 ACPI!IoSkipCurrentIrpStackLocation =  (inline caller) ACPI!ACPIFilterIrpSurpriseRemoval+31
fffff802`3738a771 ACPI!ACPIExtListTestElement =  (inline caller) ACPI!ACPIFilterRemoveNonPresentDevices+5d
fffff802`3738a771 ACPI!ACPIExtListIsFinished =  (inline caller) ACPI!ACPIFilterRemoveNonPresentDevices+5d
fffff802`3738a78f ACPI!ACPIInitReferenceDeviceExtension =  (inline caller) ACPI!ACPIFilterRemoveNonPresentDevices+7b
fffff802`373aa97d ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIFilterRemoveNonPresentDevices+20269
fffff802`3738a82c ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIFilterRemoveNonPresentDevices+118
fffff802`373ad00d ACPI!_ACPIInternalError =  (inline caller) ACPI!ACPIGet+3955d
fffff802`37373c0f ACPI!InsertTailList =  (inline caller) ACPI!ACPIGet+15f
fffff802`37373c7c ACPI!AMLIGetNamedChild =  (inline caller) ACPI!ACPIGet+1cc
fffff802`37373ccd ACPI!CreateObjectHandle =  (inline caller) ACPI!ACPIGet+21d
fffff802`37373ccd ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!ACPIGet+21d
fffff802`37373ccd ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ACPIGet+21d
fffff802`37373cd3 ACPI!GetSelfHandle =  (inline caller) ACPI!ACPIGet+223
fffff802`37373ecb ACPI!AMLIAsyncEvalObject =  (inline caller) ACPI!ACPIGet+41b
fffff802`37373f04 ACPI!GetObjectFromHandle =  (inline caller) ACPI!ACPIGet+454
fffff802`37373f2d ACPI!GetBaseObject =  (inline caller) ACPI!ACPIGet+47d
fffff802`37373f3d ACPI!ReferenceObjectEx =  (inline caller) ACPI!ACPIGet+48d
fffff802`37373f3d ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ACPIGet+48d
fffff802`373ad112 ACPI!KeGetCurrentThread =  (inline caller) ACPI!ACPIGet+39662
fffff802`37373f86 ACPI!DereferenceObjectEx =  (inline caller) ACPI!ACPIGet+4d6
fffff802`37373f86 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ACPIGet+4d6
fffff802`373ad197 ACPI!Simulator_Post_AsyncEvalObject =  (inline caller) ACPI!ACPIGet+396e7
fffff802`373ad1a4 ACPI!Simulator_Post_Generic =  (inline caller) ACPI!ACPIGet+396f4
fffff802`37373fc6 ACPI!AMLIDereferenceHandleEx =  (inline caller) ACPI!ACPIGet+516
fffff802`37373fc6 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ACPIGet+516
fffff802`373ad206 ACPI!FreeObjectHandle =  (inline caller) ACPI!ACPIGet+39756
fffff802`37373d2a ACPI!AMLIEvalNameSpaceObject =  (inline caller) ACPI!ACPIGet+27a
fffff802`37373d56 ACPI!GetObjectFromHandle =  (inline caller) ACPI!ACPIGet+2a6
fffff802`37373d83 ACPI!GetBaseObject =  (inline caller) ACPI!ACPIGet+2d3
fffff802`37373d93 ACPI!ReferenceObjectEx =  (inline caller) ACPI!ACPIGet+2e3
fffff802`37373d93 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ACPIGet+2e3
fffff802`373ad2cc ACPI!KeGetCurrentThread =  (inline caller) ACPI!ACPIGet+3981c
fffff802`37373dc4 ACPI!DereferenceObjectEx =  (inline caller) ACPI!ACPIGet+314
fffff802`37373dc4 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ACPIGet+314
fffff802`373ad35b ACPI!Simulator_Post_EvalNameSpaceObject =  (inline caller) ACPI!ACPIGet+398ab
fffff802`373ad35b ACPI!Simulator_Post_Generic =  (inline caller) ACPI!ACPIGet+398ab
fffff802`37373ea7 ACPI!AMLIDereferenceHandleEx =  (inline caller) ACPI!ACPIGet+3f7
fffff802`37373ea7 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ACPIGet+3f7
fffff802`373ad3be ACPI!FreeObjectHandle =  (inline caller) ACPI!ACPIGet+3990e
fffff802`37373e35 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIGet+385
fffff802`373ad3e8 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIGet+39938
fffff802`373ad3e8 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIGet+39938
fffff802`373c584d ACPI!_ACPIInternalError =  (inline caller) ACPI!ACPIGetConvertToClassCode+75
fffff802`373c581f ACPI!_ACPIInternalError =  (inline caller) ACPI!ACPIGetConvertToClassCode+47
fffff802`373c58c3 ACPI!_ACPIInternalError =  (inline caller) ACPI!ACPIGetConvertToClassCode+eb
fffff802`373b4085 ACPI!_ACPIInternalError =  (inline caller) ACPI!ACPIGetConvertToCompatibleIDWide+1c58d
fffff802`373c5bec ACPI!ACPIFindCharacterInString =  (inline caller) ACPI!ACPIGetConvertToStringWideWithPrepend+40
fffff802`37396ee5 ACPI!AMLIGetNSObjectType =  (inline caller) ACPI!ACPIGetProcessorStatus+51
fffff802`373b3a9e ACPI!AMLIGetNSObjectType =  (inline caller) ACPI!ACPIGetProcessorStatus+1cc0a
fffff802`37396f70 ACPI!AMLIGetNSObjectType =  (inline caller) ACPI!ACPIGetProcessorStatus+dc
fffff802`37396f70 ACPI!GetObjectFromHandle =  (inline caller) ACPI!ACPIGetProcessorStatus+dc
fffff802`373b3b56 ACPI!AMLIGetNSObjectType =  (inline caller) ACPI!ACPIGetProcessorStatus+1ccc2
fffff802`373b3b56 ACPI!GetObjectFromHandle =  (inline caller) ACPI!ACPIGetProcessorStatus+1ccc2
fffff802`373b3ba3 ACPI!AMLIGetNSObjectType =  (inline caller) ACPI!ACPIGetProcessorStatus+1cd0f
fffff802`373b3ba3 ACPI!GetObjectFromHandle =  (inline caller) ACPI!ACPIGetProcessorStatus+1cd0f
fffff802`373b5593 ACPI!_ACPIInternalError =  (inline caller) ACPI!ACPIGetWorkerForBuffer+1a793
fffff802`3739aedf ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIGetWorkerForBuffer+df
fffff802`373b55f4 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIGetWorkerForBuffer+1a7f4
fffff802`373b5639 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIGetWorkerForBuffer+1a839
fffff802`373b5639 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIGetWorkerForBuffer+1a839
fffff802`373b5a30 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIGetWorkerForData+1a770
fffff802`373b5a83 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIGetWorkerForData+1a7c3
fffff802`373b5ac8 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIGetWorkerForData+1a808
fffff802`373b5ac8 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIGetWorkerForData+1a808
fffff802`37396ccf ACPI!ACPIGetConvertToAddress =  (inline caller) ACPI!ACPIGetWorkerForInteger+23f
fffff802`37396aed ACPI!ACPIGetConvertToDevicePresence =  (inline caller) ACPI!ACPIGetWorkerForInteger+5d
fffff802`37396b7e ACPI!ACPIInternalUpdateDeviceStatus =  (inline caller) ACPI!ACPIGetWorkerForInteger+ee
fffff802`37396b88 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIGetWorkerForInteger+f8
fffff802`37396e2b ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIGetWorkerForInteger+39b
fffff802`37396ba2 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIGetWorkerForInteger+112
fffff802`37396df3 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIGetWorkerForInteger+363
fffff802`37396bb6 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIGetWorkerForInteger+126
fffff802`37396e01 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIGetWorkerForInteger+371
fffff802`37396bd0 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIGetWorkerForInteger+140
fffff802`37396e15 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIGetWorkerForInteger+385
fffff802`37396caf ACPI!ACPIBuildSynchronizationRequest =  (inline caller) ACPI!ACPIGetWorkerForInteger+21f
fffff802`37396c14 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIGetWorkerForInteger+184
fffff802`37396c25 ACPI!FreeDataBuffs =  (inline caller) ACPI!ACPIGetWorkerForInteger+195
fffff802`37396c25 ACPI!FreeData =  (inline caller) ACPI!ACPIGetWorkerForInteger+195
fffff802`37396d47 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIGetWorkerForInteger+2b7
fffff802`373b3a81 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIGetWorkerForInteger+1cff1
fffff802`373b3a81 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIGetWorkerForInteger+1cff1
fffff802`373a0459 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIGetWorkerForNothing+29
fffff802`373a04a9 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIGetWorkerForNothing+79
fffff802`373a04f9 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIGetWorkerForNothing+c9
fffff802`373a04f9 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIGetWorkerForNothing+c9
fffff802`3737c212 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIGetWorkerForString+e2
fffff802`3737c219 ACPI!FreeDataBuffs =  (inline caller) ACPI!ACPIGetWorkerForString+e9
fffff802`3737c27e ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIGetWorkerForString+14e
fffff802`373b4289 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIGetWorkerForString+38159
fffff802`373b4289 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIGetWorkerForString+38159
fffff802`3739866d ACPI!RtlStringValidateDestA =  (inline caller) ACPI!RtlStringCchCopyNA+5
fffff802`37398698 ACPI!RtlStringCopyWorkerA =  (inline caller) ACPI!RtlStringCchCopyNA+30
fffff802`37397928 ACPI!RtlStringExValidateDestA =  (inline caller) ACPI!RtlStringCchPrintfExA+18
fffff802`3739794b ACPI!RtlStringValidateDestA =  (inline caller) ACPI!RtlStringCchPrintfExA+3b
fffff802`3739796e ACPI!RtlStringExValidateSrcA =  (inline caller) ACPI!RtlStringCchPrintfExA+5e
fffff802`373b3f38 ACPI!RtlStringExHandleFillBehindNullA =  (inline caller) ACPI!RtlStringCchPrintfExA+1c628
fffff802`37386fa5 ACPI!AMLIGetNSObjectType =  (inline caller) ACPI!ACPIGpeBuildEventMasks+79
fffff802`37386fd6 ACPI!ACPIInternalConvertToNumber =  (inline caller) ACPI!ACPIGpeBuildEventMasks+aa
fffff802`37386fb5 ACPI!AMLIGetNSObjectNameSegment =  (inline caller) ACPI!ACPIGpeBuildEventMasks+89
fffff802`3738702d ACPI!ACPIVectorBuildVectorMasks =  (inline caller) ACPI!ACPIGpeBuildEventMasks+101
fffff802`3738ad9f ACPI!ACPIExtListTestElement =  (inline caller) ACPI!ACPIGpeBuildWakeMasks+57
fffff802`3738ad9f ACPI!ACPIExtListIsFinished =  (inline caller) ACPI!ACPIGpeBuildWakeMasks+57
fffff802`3738ad7b ACPI!ACPIExtListStartEnum =  (inline caller) ACPI!ACPIGpeBuildWakeMasks+33
fffff802`373a8f05 ACPI!ExInitializeWorkItem =  (inline caller) ACPI!ACPIGpeInstallRemoveIndex+21e81
fffff802`37389eef ACPI!ACPIValidateGPEEventIndex =  (inline caller) ACPI!ACPIGpeValidIndex+f
fffff802`37371f17 ACPI!AMLIGetNSObjectNameSegment =  (inline caller) ACPI!ACPINsObjMatchCallback+17
fffff802`37371f17 ACPI!GetObjectFromHandle =  (inline caller) ACPI!ACPINsObjMatchCallback+17
fffff802`373b923d ACPI!ACPIInternalWaitWakeLoop =  (inline caller) ACPI!ACPIInternalDeviceClockIrpStartDeviceCompletion+178dd
fffff802`374108a6 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIInternalDeviceQueryDeviceRelations+16
fffff802`374092d0 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIBusIommuBusInterface+1c
fffff802`374090e4 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIEjectPnpLocationInterface+14
fffff802`3742c195 ACPI!ACPILoadFindRSDT =  (inline caller) ACPI!ACPIGlobalInitialize+71
fffff802`373c65e9 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIInitDeleteDeviceExtension+341
fffff802`373c65b2 ACPI!InsertTailList =  (inline caller) ACPI!ACPIInitDeleteDeviceExtension+30a
fffff802`373c65ab ACPI!AMLIGetNSObjectNameSegment =  (inline caller) ACPI!ACPIInitDeleteDeviceExtension+303
fffff802`373c65ab ACPI!GetObjectFromHandle =  (inline caller) ACPI!ACPIInitDeleteDeviceExtension+303
fffff802`373c6380 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIInitDeleteDeviceExtension+d8
fffff802`373c6379 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIInitDeleteDeviceExtension+d1
fffff802`373c6351 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIInitDeleteDeviceExtension+a9
fffff802`373c6608 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIInitDeleteDeviceExtension+360
fffff802`373c6608 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIInitDeleteDeviceExtension+360
fffff802`373c633e ACPI!InitializeListHead =  (inline caller) ACPI!ACPIInitDeleteDeviceExtension+96
fffff802`373c631a ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIInitDeleteDeviceExtension+72
fffff802`373c6514 ACPI!ACPIThermalCleanupZone =  (inline caller) ACPI!ACPIInitDeleteDeviceExtension+26c
fffff802`373a9ce7 ACPI!_ACPIInternalErrorEx =  (inline caller) ACPI!ACPIInitDereferenceDeviceExtensionLocked+2066f
fffff802`373a8a62 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIInitDosDeviceName+2225a
fffff802`373a8abe ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIInitDosDeviceName+222b6
fffff802`3740758a ACPI!OSCloseHandle =  (inline caller) ACPI!ACPIInitGlobalHeapSize+9e
fffff802`37380407 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIInitRemoveDeviceExtension+7f
fffff802`37380400 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIInitRemoveDeviceExtension+78
fffff802`373803d8 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIInitRemoveDeviceExtension+50
fffff802`373a5a98 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIInitRemoveDeviceExtension+25710
fffff802`373a5a98 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIInitRemoveDeviceExtension+25710
fffff802`373803c5 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIInitRemoveDeviceExtension+3d
fffff802`373803a1 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIInitRemoveDeviceExtension+19
fffff802`373c663d ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIInitRemovePowerNodes+25
fffff802`373c667e ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIInitRemovePowerNodes+66
fffff802`373c66ef ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIInitRemovePowerNodes+d7
fffff802`373c66ef ACPI!RtlFailFast =  (inline caller) ACPI!ACPIInitRemovePowerNodes+d7
fffff802`3739ce26 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIInitResetDeviceExtension+126
fffff802`3739ce1d ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIInitResetDeviceExtension+11d
fffff802`3739ce47 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIInitResetDeviceExtension+147
fffff802`3739ce41 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIInitResetDeviceExtension+141
fffff802`3739ce38 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIInitResetDeviceExtension+138
fffff802`3742b400 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIInitStartACPI+3c
fffff802`3742b4e7 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIInitStartACPI+123
fffff802`373a3d3a ACPI!ACPIContainsEmulatedWakeInterruptResources =  (inline caller) ACPI!ACPIInitStartDevice+26792
fffff802`373a3ea4 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIInitStartDevice+268fc
fffff802`373a3e92 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIInitStartDevice+268ea
fffff802`373a3e89 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIInitStartDevice+268e1
fffff802`373a4220 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIInitStartDevice+26c78
fffff802`373a3ff9 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIInitStartDevice+26a51
fffff802`3737d860 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIInitStartDevice+2b8
fffff802`373a4052 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIInitStartDevice+26aaa
fffff802`3737d704 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIInitStartDevice+15c
fffff802`37400966 ACPI!IsPciBusExtension =  (inline caller) ACPI!ACPIInitStopDevice+3a
fffff802`3742ec0f ACPI!ACPIRegisterWithEM =  (inline caller) ACPI!ACPIInitialize+13
fffff802`3742ecd8 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIInitialize+dc
fffff802`3742eca8 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIInitialize+ac
fffff802`3742e854 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIInitializeDDBs+14
fffff802`3742e885 ACPI!ACPIInitializeDDB =  (inline caller) ACPI!ACPIInitializeDDBs+45
fffff802`373c6738 ACPI!AMLIGetNSObjectType =  (inline caller) ACPI!ACPIQueryGedDeviceInterface+3c
fffff802`373c67d2 ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!ACPIQueryGedDeviceInterface+d6
fffff802`373c698f ACPI!wil_atomic_uint32_compare_exchange_relaxed =  (inline caller) ACPI!wil_details_FeatureReporting_IncrementOpportunityInCache+b3
fffff802`373c6a7d ACPI!wil_atomic_uint32_compare_exchange_relaxed =  (inline caller) ACPI!wil_details_FeatureReporting_IncrementUsageInCache+b9
fffff802`3737fec4 ACPI!wil_details_MapReportingKind =  (inline caller) ACPI!wil_details_FeatureReporting_ReportUsageToService+8
fffff802`3737ff38 ACPI!wil_details_FeatureReporting_RecordUsageInCache =  (inline caller) ACPI!wil_details_FeatureReporting_ReportUsageToServiceDirect+30
fffff802`3737ff84 ACPI!wil_atomic_uint32_fetch_or_relaxed =  (inline caller) ACPI!wil_details_FeatureReporting_ReportUsageToServiceDirect+7c
fffff802`373a571c ACPI!wil_atomic_uint32_compare_exchange_relaxed =  (inline caller) ACPI!wil_details_FeatureReporting_ReportUsageToServiceDirect+25814
fffff802`373a57f4 ACPI!wil_RtlStagingConfig_RecordFeatureUsage =  (inline caller) ACPI!wil_details_FeatureReporting_ReportUsageToServiceDirect+258ec
fffff802`373aa5f9 ACPI!ACPIExtListExitEnumEarly =  (inline caller) ACPI!ACPIInternalFindDeviceExtensionNoLock+20109
fffff802`373ab32a ACPI!_ACPIInternalErrorEx =  (inline caller) ACPI!ACPIInternalGetDeviceExtension+389aa
fffff802`3739cf2a ACPI!InitializeListHead =  (inline caller) ACPI!ACPIInternalInterruptPolarityCacheCleanup+22
fffff802`37386165 ACPI!InsertTailList =  (inline caller) ACPI!ACPIInternalInterruptPolarityCacheStorePolarity+c5
fffff802`373a8487 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIInternalInterruptPolarityCacheStorePolarity+223e7
fffff802`373a8487 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIInternalInterruptPolarityCacheStorePolarity+223e7
fffff802`37412d9c ACPI!IsPciBus =  (inline caller) ACPI!ACPIInternalIsPci+50
fffff802`37412da4 ACPI!IsPciBusExtension =  (inline caller) ACPI!ACPIInternalIsPci+58
fffff802`373a1668 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIInternalMoveList+0
fffff802`373a1686 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIInternalMoveList+1e
fffff802`3738e387 ACPI!ACPIInternalMoveList =  (inline caller) ACPI!ACPIInternalMovePowerList+53
fffff802`3738e387 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIInternalMovePowerList+53
fffff802`3738e3a2 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIInternalMovePowerList+6e
fffff802`3737c6f9 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIInternalRegisterPowerCallBack+49
fffff802`373a3189 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIInternalRegisterPowerCallBack+26ad9
fffff802`3740de62 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIInternalSendSynchronousIrp+a6
fffff802`3740de9e ACPI!IoSetCompletionRoutine =  (inline caller) ACPI!ACPIInternalSendSynchronousIrp+e2
fffff802`3740de9e ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIInternalSendSynchronousIrp+e2
fffff802`37418196 ACPI!ACPIModuleIsSpare =  (inline caller) ACPI!ACPIInternalSetSpare+bb66
fffff802`37396000 ACPI!ACPIGpeRegisterToGpeIndex =  (inline caller) ACPI!ACPIInterruptDispatchEventDpc+200
fffff802`373960cc ACPI!ULongToPtr =  (inline caller) ACPI!ACPIInterruptDispatchEventDpc+2cc
fffff802`37395f6a ACPI!ACPIGpeUpdateCurrentEnable =  (inline caller) ACPI!ACPIInterruptDispatchEventDpc+16a
fffff802`3739658f ACPI!AcpiDiagTraceUnexpectedGpe =  (inline caller) ACPI!ACPIInterruptDispatchEvents+147
fffff802`373b3522 ACPI!EventDataDescCreate =  (inline caller) ACPI!ACPIInterruptDispatchEvents+1d0da
fffff802`373b351a ACPI!EventDataDescCreate =  (inline caller) ACPI!ACPIInterruptDispatchEvents+1d0d2
fffff802`37395c57 ACPI!ACPIGpeIsEvent =  (inline caller) ACPI!ACPIInterruptServiceRoutine+27
fffff802`37395c4b ACPI!ACPIIoReadPm1Status =  (inline caller) ACPI!ACPIInterruptServiceRoutine+1b
fffff802`37395cab ACPI!ACPIPccSciReceived =  (inline caller) ACPI!ACPIInterruptServiceRoutine+7b
fffff802`37395b7b ACPI!ACPIEnablePMInterruptOnly =  (inline caller) ACPI!ACPIInterruptServiceRoutineDPC+2b
fffff802`373b3113 ACPI!ACPIHardwareGlobalLockReleased =  (inline caller) ACPI!ACPIInterruptServiceRoutineDPC+1d5c3
fffff802`373b313b ACPI!IsListEmpty =  (inline caller) ACPI!ACPIInterruptServiceRoutineDPC+1d5eb
fffff802`373c714c ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIIoctlAcquireGlobalLock+c0
fffff802`373c7315 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIIoctlAsyncEvalControlMethod+1b1
fffff802`373c7447 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIIoctlAsyncEvalControlMethodCompletion+97
fffff802`373c73f4 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIIoctlAsyncEvalControlMethodCompletion+44
fffff802`373839ef ACPI!OSConvertDeviceHandleToNSHANDLE =  (inline caller) ACPI!ACPIIoctlEnumChildren+3f
fffff802`37383a88 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIIoctlEnumChildren+d8
fffff802`37383a56 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIIoctlEnumChildren+a6
fffff802`3737b7d9 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIIoctlEvalControlMethod+d5
fffff802`3737b7ed ACPI!FreeDataBuffs =  (inline caller) ACPI!ACPIIoctlEvalControlMethod+e9
fffff802`3737b2c9 ACPI!OSConvertDeviceHandleToNSHANDLE =  (inline caller) ACPI!ACPIIoctlEvalPreProcessingV1+95
fffff802`373999a9 ACPI!OSConvertDeviceHandleToNSHANDLE =  (inline caller) ACPI!ACPIIoctlEvalPreProcessingV1Ex+55
fffff802`373c7889 ACPI!OSConvertDeviceHandleToNSHANDLE =  (inline caller) ACPI!ACPIIoctlEvalPreProcessingV2+a1
fffff802`373c7bb9 ACPI!OSConvertDeviceHandleToNSHANDLE =  (inline caller) ACPI!ACPIIoctlEvalPreProcessingV2Ex+61
fffff802`3739c4a0 ACPI!OSConvertDeviceHandleToNSHANDLE =  (inline caller) ACPI!ACPIIoctlGetDeviceSpecificData+54
fffff802`373b6329 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIIoctlGetDeviceSpecificData+19edd
fffff802`3739be88 ACPI!OSConvertDeviceHandleToNSHANDLE =  (inline caller) ACPI!ACPIIoctlRegisterOpRegionHandler+20
fffff802`373c81ed ACPI!OSConvertDeviceHandleToNSHANDLE =  (inline caller) ACPI!ACPIIoctlUnRegisterOpRegionHandler+11
fffff802`3737b4ef ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIIrpDispatchDeviceControl+f
fffff802`373b1234 ACPI!ACPIDispatchIrpWithStatus =  (inline caller) ACPI!ACPIIrpDispatchDeviceControl+35d54
fffff802`3737b602 ACPI!ACPIDispatchForwardIrp =  (inline caller) ACPI!ACPIIrpDispatchDeviceControl+122
fffff802`3737b602 ACPI!ACPIInternalGetDeviceExtension =  (inline caller) ACPI!ACPIIrpDispatchDeviceControl+122
fffff802`373b1241 ACPI!_ACPIInternalErrorEx =  (inline caller) ACPI!ACPIIrpDispatchDeviceControl+35d61
fffff802`3737b51f ACPI!ACPIDispatchForwardIrp =  (inline caller) ACPI!ACPIIrpDispatchDeviceControl+3f
fffff802`3737b51f ACPI!ACPIInternalGetDeviceExtension =  (inline caller) ACPI!ACPIIrpDispatchDeviceControl+3f
fffff802`373b1305 ACPI!_ACPIInternalErrorEx =  (inline caller) ACPI!ACPIIrpDispatchDeviceControl+35e25
fffff802`3742e989 ACPI!InsertHeadList =  (inline caller) ACPI!ACPILoadAddDynamicDataBlockTable+85
fffff802`3742e959 ACPI!InsertTailList =  (inline caller) ACPI!ACPILoadAddDynamicDataBlockTable+55
fffff802`3742e9aa ACPI!FatalListEntryError =  (inline caller) ACPI!ACPILoadAddDynamicDataBlockTable+a6
fffff802`3742e9aa ACPI!RtlFailFast =  (inline caller) ACPI!ACPILoadAddDynamicDataBlockTable+a6
fffff802`373b8f97 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIMatchKernelPorts+17a03
fffff802`3741ff66 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIEjectPartitionUnitInterface+e
fffff802`3738d46a ACPI!ACPIAmliNameObject =  (inline caller) ACPI!OSNotifyCreate+7a
fffff802`3738b183 ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!OSNotifyCreateDevice+27
fffff802`3738b1c9 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!OSNotifyCreateDevice+6d
fffff802`373880ab ACPI!AMLIGetNSObjectType =  (inline caller) ACPI!OSNotifyCreateOperationRegion+23
fffff802`373880be ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!OSNotifyCreateOperationRegion+36
fffff802`373a9403 ACPI!ExInitializeWorkItem =  (inline caller) ACPI!OSNotifyCreateOperationRegion+2137b
fffff802`37385ff7 ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!OSNotifyCreateProcessor+2b
fffff802`37386069 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!OSNotifyCreateProcessor+9d
fffff802`3739f748 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!OSNotifyCreateThermalZone+38
fffff802`373c8964 ACPI!ACPIAmliNameObject =  (inline caller) ACPI!OSNotifyDeviceCheck+30
fffff802`373c89fa ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!OSNotifyDeviceCheck+c6
fffff802`373c8a56 ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!OSNotifyDeviceCheck+122
fffff802`373c8a92 ACPI!ACPIBuildSynchronizationRequest =  (inline caller) ACPI!OSNotifyDeviceCheck+15e
fffff802`373c8b2d ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!OSNotifyDeviceEject+65
fffff802`373c8ae1 ACPI!ACPIAmliNameObject =  (inline caller) ACPI!OSNotifyDeviceEject+19
fffff802`373c8b39 ACPI!ACPIBuildSynchronizationRequest =  (inline caller) ACPI!OSNotifyDeviceEject+71
fffff802`3739ee77 ACPI!ACPIAmliNameObject =  (inline caller) ACPI!OSNotifyDeviceEnum+2b
fffff802`373b7520 ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!OSNotifyDeviceEnum+186d4
fffff802`3739eee1 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!OSNotifyDeviceEnum+95
fffff802`3739eee1 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!OSNotifyDeviceEnum+95
fffff802`373b7530 ACPI!ACPIBuildSynchronizationRequest =  (inline caller) ACPI!OSNotifyDeviceEnum+186e4
fffff802`3739ef1d ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!OSNotifyDeviceEnum+d1
fffff802`3739ef5c ACPI!ACPIBuildSynchronizationRequest =  (inline caller) ACPI!OSNotifyDeviceEnum+110
fffff802`373c8b78 ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!OSNotifyDeviceWake+1c
fffff802`373c8bdd ACPI!ACPIAmliNameObject =  (inline caller) ACPI!OSNotifyDeviceWake+81
fffff802`373c8d11 ACPI!IsListEmpty =  (inline caller) ACPI!OSNotifyDeviceWake+1b5
fffff802`373c8cba ACPI!InitializeListHead =  (inline caller) ACPI!OSNotifyDeviceWake+15e
fffff802`373c8e93 ACPI!InitializeListHead =  (inline caller) ACPI!OSNotifyDeviceWakeByGPEEvent+ab
fffff802`373c8f23 ACPI!IsListEmpty =  (inline caller) ACPI!OSNotifyDeviceWakeByGPEEvent+13b
fffff802`373c90c3 ACPI!InitializeListHead =  (inline caller) ACPI!OSNotifyDeviceWakeByInterrupt+bb
fffff802`373c916c ACPI!IsListEmpty =  (inline caller) ACPI!OSNotifyDeviceWakeByInterrupt+164
fffff802`373c91f9 ACPI!IsListEmpty =  (inline caller) ACPI!OSNotifyDeviceWakeCallBack+9
fffff802`373c92d4 ACPI!ExInitializeWorkItem =  (inline caller) ACPI!OSNotifyFatalError+64
fffff802`374205e6 ACPI!RtlULongLongMult =  (inline caller) ACPI!ACPIPccInitialize+17e
fffff802`374206ef ACPI!KeMemoryBarrier =  (inline caller) ACPI!ACPIPccInitialize+287
fffff802`373c9843 ACPI!InsertTailList =  (inline caller) ACPI!AcpiPccAcquireSubspaceCore+9b
fffff802`373c984c ACPI!FatalListEntryError =  (inline caller) ACPI!AcpiPccAcquireSubspaceCore+a4
fffff802`373c984c ACPI!RtlFailFast =  (inline caller) ACPI!AcpiPccAcquireSubspaceCore+a4
fffff802`373c994b ACPI!IsListEmpty =  (inline caller) ACPI!AcpiPccCallbackDpc+6b
fffff802`373c9957 ACPI!RemoveHeadList =  (inline caller) ACPI!AcpiPccCallbackDpc+77
fffff802`373c99da ACPI!FatalListEntryError =  (inline caller) ACPI!AcpiPccCallbackDpc+fa
fffff802`373c99da ACPI!RtlFailFast =  (inline caller) ACPI!AcpiPccCallbackDpc+fa
fffff802`373c99a7 ACPI!AcpiPccSyncCompletionCallback =  (inline caller) ACPI!AcpiPccCallbackDpc+c7
fffff802`373c9af1 ACPI!IsListEmpty =  (inline caller) ACPI!AcpiPccCommandComplete+101
fffff802`373c9af9 ACPI!RemoveHeadList =  (inline caller) ACPI!AcpiPccCommandComplete+109
fffff802`373c9b1d ACPI!FatalListEntryError =  (inline caller) ACPI!AcpiPccCommandComplete+12d
fffff802`373c9b1d ACPI!RtlFailFast =  (inline caller) ACPI!AcpiPccCommandComplete+12d
fffff802`373c9b44 ACPI!AcpiPccSyncCompletionCallback =  (inline caller) ACPI!AcpiPccCommandComplete+154
fffff802`373817c8 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!AcpiPccEjectInterface+1c
fffff802`373c9bf9 ACPI!RtlULongLongMult =  (inline caller) ACPI!AcpiPccExecuteCommandAsync+79
fffff802`373c9d64 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!AcpiPccGetInterfaceInformation+18
fffff802`37420a25 ACPI!InitializeListHead =  (inline caller) ACPI!AcpiPccInitializeSubspace+1e1
fffff802`373c9fda ACPI!IsListEmpty =  (inline caller) ACPI!AcpiPccReleaseSubspace+4a
fffff802`373c9fe2 ACPI!RemoveHeadList =  (inline caller) ACPI!AcpiPccReleaseSubspace+52
fffff802`373ca006 ACPI!FatalListEntryError =  (inline caller) ACPI!AcpiPccReleaseSubspace+76
fffff802`373ca006 ACPI!RtlFailFast =  (inline caller) ACPI!AcpiPccReleaseSubspace+76
fffff802`373ca02f ACPI!AcpiPccSyncCompletionCallback =  (inline caller) ACPI!AcpiPccReleaseSubspace+9f
fffff802`373ca152 ACPI!WriteGenAddr =  (inline caller) ACPI!AcpiPccRingDoorbell+e2
fffff802`373ca109 ACPI!ReadGenAddr =  (inline caller) ACPI!AcpiPccRingDoorbell+99
fffff802`373ca2c9 ACPI!READ_PORT_ULONG =  (inline caller) ACPI!ReadIoMemRaw+41
fffff802`373ca2d1 ACPI!READ_PORT_USHORT =  (inline caller) ACPI!ReadIoMemRaw+49
fffff802`373ca2db ACPI!READ_PORT_UCHAR =  (inline caller) ACPI!ReadIoMemRaw+53
fffff802`373ca342 ACPI!READ_REGISTER_ULONG =  (inline caller) ACPI!ReadIoMemRaw+ba
fffff802`373ca346 ACPI!READ_REGISTER_USHORT =  (inline caller) ACPI!ReadIoMemRaw+be
fffff802`373ca34b ACPI!READ_REGISTER_UCHAR =  (inline caller) ACPI!ReadIoMemRaw+c3
fffff802`373ca39f ACPI!WRITE_PORT_ULONG =  (inline caller) ACPI!WriteIoMemRaw+3f
fffff802`373ca3a8 ACPI!WRITE_PORT_USHORT =  (inline caller) ACPI!WriteIoMemRaw+48
fffff802`373ca3b3 ACPI!WRITE_PORT_UCHAR =  (inline caller) ACPI!WriteIoMemRaw+53
fffff802`373ca415 ACPI!WRITE_REGISTER_ULONG64 =  (inline caller) ACPI!WriteIoMemRaw+b5
fffff802`373ca41a ACPI!WRITE_REGISTER_ULONG =  (inline caller) ACPI!WriteIoMemRaw+ba
fffff802`373ca41f ACPI!WRITE_REGISTER_USHORT =  (inline caller) ACPI!WriteIoMemRaw+bf
fffff802`373ca425 ACPI!WRITE_REGISTER_UCHAR =  (inline caller) ACPI!WriteIoMemRaw+c5
fffff802`373b91d8 ACPI!AcpiEvaluateBiosMethodsOnPciRootBusOnResume =  (inline caller) ACPI!PciRootBusBiosMethodDispatcherOnResume+17948
fffff802`3740865a ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!PciBusEjectInterface+e
fffff802`374081ac ACPI!AcpiUpdatePciRootFromDsmEvaluation =  (inline caller) ACPI!PciGetRootBusCapability+4c
fffff802`373a1537 ACPI!InsertHeadList =  (inline caller) ACPI!CacheBBNResult+87
fffff802`373b8e02 ACPI!FatalListEntryError =  (inline caller) ACPI!CacheBBNResult+17952
fffff802`373b8e02 ACPI!RtlFailFast =  (inline caller) ACPI!CacheBBNResult+17952
fffff802`373a1517 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!CacheBBNResult+67
fffff802`373a1517 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!CacheBBNResult+67
fffff802`37387a50 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!GetOpRegionScope+5c
fffff802`37387a5c ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!GetOpRegionScope+68
fffff802`37387b42 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!GetOpRegionScopeWorker+82
fffff802`37387b49 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!GetOpRegionScopeWorker+89
fffff802`3739ea03 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!GetPciAddress+57
fffff802`3739ea03 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!GetPciAddress+57
fffff802`3738890f ACPI!AMLIIsNamedChildPresent =  (inline caller) ACPI!GetPciAddressWorker+ff
fffff802`373888f3 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!GetPciAddressWorker+e3
fffff802`373888f3 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!GetPciAddressWorker+e3
fffff802`37388983 ACPI!AMLIGetParent =  (inline caller) ACPI!GetPciAddressWorker+173
fffff802`373889a6 ACPI!CreateObjectHandle =  (inline caller) ACPI!GetPciAddressWorker+196
fffff802`373889a6 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!GetPciAddressWorker+196
fffff802`373889a6 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!GetPciAddressWorker+196
fffff802`373889ac ACPI!GetSelfHandle =  (inline caller) ACPI!GetPciAddressWorker+19c
fffff802`37388964 ACPI!AMLIDereferenceHandleEx =  (inline caller) ACPI!GetPciAddressWorker+154
fffff802`37388964 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!GetPciAddressWorker+154
fffff802`373a968e ACPI!FreeObjectHandle =  (inline caller) ACPI!GetPciAddressWorker+20e7e
fffff802`373889e6 ACPI!AMLIIsNamedChildPresent =  (inline caller) ACPI!GetPciAddressWorker+1d6
fffff802`37388a38 ACPI!AMLIIsNamedChildPresent =  (inline caller) ACPI!GetPciAddressWorker+228
fffff802`37388aa4 ACPI!GetCachedBBNResult =  (inline caller) ACPI!GetPciAddressWorker+294
fffff802`37388ada ACPI!AMLIIsEqualHandle =  (inline caller) ACPI!GetPciAddressWorker+2ca
fffff802`37388b4a ACPI!AMLIIsNamedChildPresent =  (inline caller) ACPI!GetPciAddressWorker+33a
fffff802`37388bc3 ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!GetPciAddressWorker+3b3
fffff802`37388bcf ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!GetPciAddressWorker+3bf
fffff802`37388c04 ACPI!AMLIDereferenceHandleEx =  (inline caller) ACPI!GetPciAddressWorker+3f4
fffff802`37388c04 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!GetPciAddressWorker+3f4
fffff802`373a9803 ACPI!FreeObjectHandle =  (inline caller) ACPI!GetPciAddressWorker+20ff3
fffff802`37388c39 ACPI!AMLIDereferenceHandleEx =  (inline caller) ACPI!GetPciAddressWorker+429
fffff802`37388c39 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!GetPciAddressWorker+429
fffff802`373a983d ACPI!FreeObjectHandle =  (inline caller) ACPI!GetPciAddressWorker+2102d
fffff802`37409aed ACPI!IsPciBusExtension =  (inline caller) ACPI!IsPciBus+9
fffff802`373873d0 ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!IsPciBusAsync+20
fffff802`3738740b ACPI!AcpipAllocatePciBusState =  (inline caller) ACPI!IsPciBusAsync+5b
fffff802`37387444 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!IsPciBusAsync+94
fffff802`37387444 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!IsPciBusAsync+94
fffff802`373874f1 ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!IsPciBusAsyncWorker+41
fffff802`3738799c ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!IsPciBusAsyncWorker+4ec
fffff802`373a9194 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!IsPciBusAsyncWorker+21ce4
fffff802`373879d2 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!IsPciBusAsyncWorker+522
fffff802`37387831 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!IsPciBusAsyncWorker+381
fffff802`3738785b ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!IsPciBusAsyncWorker+3ab
fffff802`373a91e3 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!IsPciBusAsyncWorker+21d33
fffff802`373876ec ACPI!AcpipFreePciBusState =  (inline caller) ACPI!IsPciBusAsyncWorker+23c
fffff802`373876ec ACPI!AcpipCheckIfMemFromPciBusStatePool =  (inline caller) ACPI!IsPciBusAsyncWorker+23c
fffff802`37387be9 ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!IsPciDevice+19
fffff802`37387c53 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!IsPciDevice+83
fffff802`37387c53 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!IsPciDevice+83
fffff802`373864b9 ACPI!AMLIGetNSObjectType =  (inline caller) ACPI!IsPciDeviceWorker+39
fffff802`373864cf ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!IsPciDeviceWorker+4f
fffff802`373a864f ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!IsPciDeviceWorker+221cf
fffff802`373a8761 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!IsPciDeviceWorker+222e1
fffff802`373867bc ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!IsPciDeviceWorker+33c
fffff802`373866c6 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!IsPciDeviceWorker+246
fffff802`373866f0 ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!IsPciDeviceWorker+270
fffff802`373a87ba ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!IsPciDeviceWorker+2233a
fffff802`37387f5a ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!PciConfigInternal+5e
fffff802`37387f5a ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!PciConfigInternal+5e
fffff802`37388174 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!PciConfigSpaceHandler+44
fffff802`37388174 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!PciConfigSpaceHandler+44
fffff802`373881ec ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!PciConfigSpaceHandler+bc
fffff802`373881ec ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!PciConfigSpaceHandler+bc
fffff802`373882b0 ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!PciConfigSpaceHandlerWorker+70
fffff802`373882b0 ACPI!GetObjectFromHandle =  (inline caller) ACPI!PciConfigSpaceHandlerWorker+70
fffff802`37388761 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!PciConfigSpaceHandlerWorker+521
fffff802`37388761 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!PciConfigSpaceHandlerWorker+521
fffff802`37388752 ACPI!AMLISetNSObjectContext =  (inline caller) ACPI!PciConfigSpaceHandlerWorker+512
fffff802`373884f8 ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!PciConfigSpaceHandlerWorker+2b8
fffff802`3738830e ACPI!GetPciAddress =  (inline caller) ACPI!PciConfigSpaceHandlerWorker+ce
fffff802`3738835c ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!PciConfigSpaceHandlerWorker+11c
fffff802`3738835c ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!PciConfigSpaceHandlerWorker+11c
fffff802`373883c9 ACPI!KeGetCurrentIrql =  (inline caller) ACPI!PciConfigSpaceHandlerWorker+189
fffff802`373a9588 ACPI!ACPIAmliNameObject =  (inline caller) ACPI!PciConfigSpaceHandlerWorker+21348
fffff802`373a95ab ACPI!ACPIAmliNameObject =  (inline caller) ACPI!PciConfigSpaceHandlerWorker+2136b
fffff802`37388457 ACPI!AMLIDereferenceHandleEx =  (inline caller) ACPI!PciConfigSpaceHandlerWorker+217
fffff802`37388457 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!PciConfigSpaceHandlerWorker+217
fffff802`373a960d ACPI!FreeObjectHandle =  (inline caller) ACPI!PciConfigSpaceHandlerWorker+213cd
fffff802`37388480 ACPI!AMLIDereferenceHandleEx =  (inline caller) ACPI!PciConfigSpaceHandlerWorker+240
fffff802`37388480 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!PciConfigSpaceHandlerWorker+240
fffff802`373a9647 ACPI!FreeObjectHandle =  (inline caller) ACPI!PciConfigSpaceHandlerWorker+21407
fffff802`37420bed ACPI!ExInitializeFastMutex =  (inline caller) ACPI!ACPIPepInitializePlatformNotificationSupport+2d
fffff802`37420c0f ACPI!WriteRaw =  (inline caller) ACPI!ACPIPepInitializePlatformNotificationSupport+4f
fffff802`37421136 ACPI!ACPIPepGetNextPlatformNotification =  (inline caller) ACPI!ACPIPepWorker+36
fffff802`3737fbb9 ACPI!KeGetCurrentIrql =  (inline caller) ACPI!ACPIEnableEnterACPIMode+6d
fffff802`3737fc0d ACPI!WRITE_PORT_UCHAR =  (inline caller) ACPI!ACPIEnableEnterACPIMode+c1
fffff802`373ca694 ACPI!WRITE_PORT_UCHAR =  (inline caller) ACPI!ACPILateRestore+34
fffff802`373caf7d ACPI!InsertTailList =  (inline caller) ACPI!AcpiCreateDiscoveryDeleteParameters+55
fffff802`373cb0dd ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!AcpiHandleInternalNotify+85
fffff802`373cb0dd ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!AcpiHandleInternalNotify+85
fffff802`373cb083 ACPI!ACPIAmliNameObject =  (inline caller) ACPI!AcpiHandleInternalNotify+2b
fffff802`373cb119 ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!AcpiHandleInternalNotify+c1
fffff802`373cb13d ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!AcpiHandleInternalNotify+e5
fffff802`373cb31d ACPI!IsListEmpty =  (inline caller) ACPI!AcpiNotifyDiscoverDeleteMainCompletion+d
fffff802`373cb329 ACPI!RemoveHeadList =  (inline caller) ACPI!AcpiNotifyDiscoverDeleteMainCompletion+19
fffff802`373cb3c1 ACPI!FatalListEntryError =  (inline caller) ACPI!AcpiNotifyDiscoverDeleteMainCompletion+b1
fffff802`373cb3c1 ACPI!RtlFailFast =  (inline caller) ACPI!AcpiNotifyDiscoverDeleteMainCompletion+b1
fffff802`373cb351 ACPI!AcpiNotifyDiscoverDeviceAsyncCompletion =  (inline caller) ACPI!AcpiNotifyDiscoverDeleteMainCompletion+41
fffff802`373cb36f ACPI!AcpiNotifyDeleteDeviceAsyncCompletion =  (inline caller) ACPI!AcpiNotifyDiscoverDeleteMainCompletion+5f
fffff802`373cb428 ACPI!AcpiQueryPlatformExtensionRegistered =  (inline caller) ACPI!AcpiNotifyPlExtDeleteDeviceAsync+38
fffff802`373cb4be ACPI!InitializeListHead =  (inline caller) ACPI!AcpiNotifyPlExtDeleteDeviceAsync+ce
fffff802`3739a787 ACPI!AcpiQueryPlatformExtensionRegistered =  (inline caller) ACPI!AcpiNotifyPlExtDiscoverDeviceAsync+3b
fffff802`373b520f ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!AcpiNotifyPlExtDiscoverDeviceAsync+1aac3
fffff802`373b5215 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!AcpiNotifyPlExtDiscoverDeviceAsync+1aac9
fffff802`373b51fb ACPI!InitializeListHead =  (inline caller) ACPI!AcpiNotifyPlExtDiscoverDeviceAsync+1aaaf
fffff802`373cb6b6 ACPI!InitializeListHead =  (inline caller) ACPI!AcpiPauseInterpreterForNamespaceUpdates+46
fffff802`3740f373 ACPI!_ObReferenceObjectByHandle =  (inline caller) ACPI!AcpiSetupNativeMethodInterface+c3
fffff802`3740f3dc ACPI!PLEXT_NATIVE_METHOD_INTERFACE_INIT =  (inline caller) ACPI!AcpiSetupNativeMethodInterface+12c
fffff802`3740f4d8 ACPI!AcpiValidateExternalNativeMethodInterface =  (inline caller) ACPI!AcpiSetupNativeMethodInterface+228
fffff802`3740f50c ACPI!AcpiRegisterNativeMethodInterface =  (inline caller) ACPI!AcpiSetupNativeMethodInterface+25c
fffff802`3737f247 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIAsyncAcquireGlobalLock+87
fffff802`3737f250 ACPI!ACPIAcquireHardwareGlobalLock =  (inline caller) ACPI!ACPIAsyncAcquireGlobalLock+90
fffff802`3737f325 ACPI!InsertTailList =  (inline caller) ACPI!ACPIAsyncAcquireGlobalLock+165
fffff802`3737f3a3 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIAsyncAcquireGlobalLock+1e3
fffff802`3737f3a3 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIAsyncAcquireGlobalLock+1e3
fffff802`3737f18a ACPI!IsListEmpty =  (inline caller) ACPI!ACPIReleaseGlobalLock+a6
fffff802`3737f117 ACPI!ACPIReleaseHardwareGlobalLock =  (inline caller) ACPI!ACPIReleaseGlobalLock+33
fffff802`3737e74f ACPI!IsListEmpty =  (inline caller) ACPI!ACPIStartNextGlobalLockRequest+2f
fffff802`3737e75b ACPI!RemoveHeadList =  (inline caller) ACPI!ACPIStartNextGlobalLockRequest+3b
fffff802`373a459a ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIStartNextGlobalLockRequest+25e7a
fffff802`373a459a ACPI!RtlFailFast =  (inline caller) ACPI!ACPIStartNextGlobalLockRequest+25e7a
fffff802`3737dc30 ACPI!OSPowerFindPowerInfoByContext =  (inline caller) ACPI!ACPIRegisterForDeviceNotifications+10
fffff802`3737dcbd ACPI!ExInitializeWorkItem =  (inline caller) ACPI!ACPIRegisterForDeviceNotificationsByPowerInfo+59
fffff802`373cc536 ACPI!OSPowerFindPowerInfoByContext =  (inline caller) ACPI!ACPIUnregisterForDeviceNotifications+6
fffff802`373b7438 ACPI!InsertTailList =  (inline caller) ACPI!DispatchNotification+18744
fffff802`373b7441 ACPI!FatalListEntryError =  (inline caller) ACPI!DispatchNotification+1874d
fffff802`373b7441 ACPI!RtlFailFast =  (inline caller) ACPI!DispatchNotification+1874d
fffff802`373b7407 ACPI!AcquireNotificationDispatchLock =  (inline caller) ACPI!DispatchNotification+18713
fffff802`373b7411 ACPI!InitializeListHead =  (inline caller) ACPI!DispatchNotification+1871d
fffff802`373b7467 ACPI!ReleaseNotificationDispatchLock =  (inline caller) ACPI!DispatchNotification+18773
fffff802`373cc62c ACPI!IsListEmpty =  (inline caller) ACPI!DispatchNotificationWorker+7c
fffff802`373cc601 ACPI!AcquireNotificationDispatchLock =  (inline caller) ACPI!DispatchNotificationWorker+51
fffff802`373cc646 ACPI!ReleaseNotificationDispatchLock =  (inline caller) ACPI!DispatchNotificationWorker+96
fffff802`373cc634 ACPI!RemoveHeadList =  (inline caller) ACPI!DispatchNotificationWorker+84
fffff802`373cc6a5 ACPI!FatalListEntryError =  (inline caller) ACPI!DispatchNotificationWorker+f5
fffff802`373cc6a5 ACPI!RtlFailFast =  (inline caller) ACPI!DispatchNotificationWorker+f5
fffff802`373cc6ac ACPI!ReleaseNotificationDispatchLock =  (inline caller) ACPI!DispatchNotificationWorker+fc
fffff802`373cc686 ACPI!AcquireNotificationDispatchLock =  (inline caller) ACPI!DispatchNotificationWorker+d6
fffff802`3739ec14 ACPI!AMLIGetNSObjectType =  (inline caller) ACPI!NotifyHandler+24
fffff802`3739ec74 ACPI!OSPowerFindPowerInfo =  (inline caller) ACPI!NotifyHandler+84
fffff802`3739ec89 ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!NotifyHandler+99
fffff802`373cc8e0 ACPI!AMLIGetFieldUnitRegionObj =  (inline caller) ACPI!InternalRawAccessOpRegionHandler+20
fffff802`373cc91f ACPI!CreateObjectHandle =  (inline caller) ACPI!InternalRawAccessOpRegionHandler+5f
fffff802`373cc91f ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!InternalRawAccessOpRegionHandler+5f
fffff802`373cc91f ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!InternalRawAccessOpRegionHandler+5f
fffff802`373cc925 ACPI!GetSelfHandle =  (inline caller) ACPI!InternalRawAccessOpRegionHandler+65
fffff802`37411a07 ACPI!InitializeListHead =  (inline caller) ACPI!RegisterOperationRegionHandler+77
fffff802`37411aa9 ACPI!InsertHeadList =  (inline caller) ACPI!RegisterOperationRegionHandler+119
fffff802`3741a28f ACPI!FatalListEntryError =  (inline caller) ACPI!RegisterOperationRegionHandler+88ff
fffff802`3741a28f ACPI!RtlFailFast =  (inline caller) ACPI!RegisterOperationRegionHandler+88ff
fffff802`37421a06 ACPI!IsListEmpty =  (inline caller) ACPI!UnRegisterOperationRegionHandler+b2
fffff802`37421b2c ACPI!InitializeListHead =  (inline caller) ACPI!UnRegisterOperationRegionHandler+1d8
fffff802`37421b10 ACPI!RemoveEntryList =  (inline caller) ACPI!UnRegisterOperationRegionHandler+1bc
fffff802`37421b54 ACPI!FatalListEntryError =  (inline caller) ACPI!UnRegisterOperationRegionHandler+200
fffff802`37421b54 ACPI!RtlFailFast =  (inline caller) ACPI!UnRegisterOperationRegionHandler+200
fffff802`37421d99 ACPI!ArbBacktrackAllocation =  (inline caller) ACPI!AcpiPortarbBacktrackAllocation+69
fffff802`3740a6b0 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIProcessorDeviceControl+40
fffff802`373a3701 ACPI!ExInitializeWorkItem =  (inline caller) ACPI!ACPIProcessorStartDevice+26ad1
fffff802`373a36f2 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIProcessorStartDevice+26ac2
fffff802`3737cdc4 ACPI!ACPIProcessorContainerLinkChildProcessor =  (inline caller) ACPI!ACPIProcessorStartDeviceWorker+144
fffff802`373a3921 ACPI!InsertTailList =  (inline caller) ACPI!ACPIProcessorStartDeviceWorker+26ca1
fffff802`373a392a ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIProcessorStartDeviceWorker+26caa
fffff802`373a392a ACPI!RtlFailFast =  (inline caller) ACPI!ACPIProcessorStartDeviceWorker+26caa
fffff802`37421f2d ACPI!InitializeListHead =  (inline caller) ACPI!ACPIProcessorContainerStartDevice+3d
fffff802`37421f1f ACPI!InitializeListHead =  (inline caller) ACPI!ACPIProcessorContainerStartDevice+2f
fffff802`373cd674 ACPI!ExInitializeWorkItem =  (inline caller) ACPI!ACPIProcessorContainerStartDeviceCompletion+114
fffff802`373cd622 ACPI!ACPIDebugGetIrpText =  (inline caller) ACPI!ACPIProcessorContainerStartDeviceCompletion+c2
fffff802`373cd766 ACPI!InsertTailList =  (inline caller) ACPI!ACPIProcessorContainerStartDeviceWorker+96
fffff802`373cd77f ACPI!InsertTailList =  (inline caller) ACPI!ACPIProcessorContainerStartDeviceWorker+af
fffff802`373cd792 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIProcessorContainerStartDeviceWorker+c2
fffff802`373cd792 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIProcessorContainerStartDeviceWorker+c2
fffff802`373cd83a ACPI!ACPIDebugGetIrpText =  (inline caller) ACPI!ACPIProcessorContainerStartDeviceWorker+16a
fffff802`373cd8c2 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIIgnoreResourceMapValidation+e
fffff802`373cd9a2 ACPI!InsertTailList =  (inline caller) ACPI!ACPIInitIgnoreResourceMapDescriptor+32
fffff802`373cd9ca ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIInitIgnoreResourceMapDescriptor+5a
fffff802`373cd9ca ACPI!RtlFailFast =  (inline caller) ACPI!ACPIInitIgnoreResourceMapDescriptor+5a
fffff802`37422156 ACPI!OSCloseHandle =  (inline caller) ACPI!ACPIRegGetTableFromSimulatorRegistryEntry+1fe
fffff802`37422167 ACPI!OSCloseHandle =  (inline caller) ACPI!ACPIRegGetTableFromSimulatorRegistryEntry+20f
fffff802`37416648 ACPI!OSCloseHandle =  (inline caller) ACPI!ACPIRegReadAMLRegistryEntry+16c68
fffff802`3741665a ACPI!OSCloseHandle =  (inline caller) ACPI!ACPIRegReadAMLRegistryEntry+16c7a
fffff802`3742288e ACPI!OSCloseHandle =  (inline caller) ACPI!OSOpenLargestSubkey+fa
fffff802`3742290c ACPI!OSCloseHandle =  (inline caller) ACPI!OSOpenLargestSubkey+178
fffff802`3741631d ACPI!OSCloseHandle =  (inline caller) ACPI!OSReadRegValue+f1e9
fffff802`3740726c ACPI!OSCloseHandle =  (inline caller) ACPI!OSReadRegValue+138
fffff802`374164d4 ACPI!OSCloseHandle =  (inline caller) ACPI!OSReadRegValue+f3a0
fffff802`3741639b ACPI!OSCloseHandle =  (inline caller) ACPI!OSReadRegValue+f267
fffff802`374163c2 ACPI!OSCloseHandle =  (inline caller) ACPI!OSReadRegValue+f28e
fffff802`373ce285 ACPI!RtlStringValidateDestA =  (inline caller) ACPI!RtlStringValidateDestAndLengthA+5
fffff802`373ce2a9 ACPI!RtlStringLengthWorkerA =  (inline caller) ACPI!RtlStringValidateDestAndLengthA+29
fffff802`3739a9fb ACPI!PnpBiosScanForGpioInterrupt =  (inline caller) ACPI!PnpBiosSetFlagsForNotableInterrupts+2b
fffff802`373b53db ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!PnpBiosSetFlagsForNotableInterrupts+1aa0b
fffff802`373b53d2 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!PnpBiosSetFlagsForNotableInterrupts+1aa02
fffff802`373b53c0 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!PnpBiosSetFlagsForNotableInterrupts+1a9f0
fffff802`373b53f7 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!PnpBiosSetFlagsForNotableInterrupts+1aa27
fffff802`3740d58f ACPI!PnpiBiosAddressHandlePortFlags =  (inline caller) ACPI!PnpiBiosAddressDoubleToIoDescriptor+203
fffff802`374236b5 ACPI!PnpiBiosAddressHandleExtendedMemoryFlags =  (inline caller) ACPI!PnpiBiosAddressExtendedToIoDescriptor+3d9
fffff802`3742365c ACPI!PnpiBiosAddressHandlePortFlags =  (inline caller) ACPI!PnpiBiosAddressExtendedToIoDescriptor+380
fffff802`37423a9e ACPI!PnpiBiosAddressHandlePortFlags =  (inline caller) ACPI!PnpiBiosAddressQuadToIoDescriptor+37a
fffff802`3741aa32 ACPI!PnpiBiosAddressHandlePortFlags =  (inline caller) ACPI!PnpiBiosAddressToIoDescriptor+865a
fffff802`3742419f ACPI!OSCloseHandle =  (inline caller) ACPI!PnpiUpdateForceActiveBothInterrupts+2e3
fffff802`3740079a ACPI!PnpiCmResourceToBiosDma =  (inline caller) ACPI!PnpCmResourcesToBiosResources+15a
fffff802`37413776 ACPI!PnpiCmResourceToBiosMemory32 =  (inline caller) ACPI!PnpCmResourcesToBiosResources+13136
fffff802`37413827 ACPI!PnpiCmResourceToSerialBusDescriptor =  (inline caller) ACPI!PnpCmResourcesToBiosResources+131e7
fffff802`37400815 ACPI!PnpiCmResourceValidEmptyList =  (inline caller) ACPI!PnpCmResourcesToBiosResources+1d5
fffff802`374245f8 ACPI!PnpiCmResourceSidebandInterrupt =  (inline caller) ACPI!PnpiCmResourceRemoveSidebandResources+108
fffff802`3739a66d ACPI!AMLIQueryPreDefinedRootObjects =  (inline caller) ACPI!ACPIAmliPreDefinedRootObjectsNotifyPepDiscoverDevice+49
fffff802`3739a66d ACPI!CreateObjectHandle =  (inline caller) ACPI!ACPIAmliPreDefinedRootObjectsNotifyPepDiscoverDevice+49
fffff802`3739a675 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!ACPIAmliPreDefinedRootObjectsNotifyPepDiscoverDevice+51
fffff802`3739a680 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ACPIAmliPreDefinedRootObjectsNotifyPepDiscoverDevice+5c
fffff802`3739a66d ACPI!GetSelfHandle =  (inline caller) ACPI!ACPIAmliPreDefinedRootObjectsNotifyPepDiscoverDevice+49
fffff802`373a59b7 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIEvaluateDsmEmcaMethodOnRootBus+256e3
fffff802`373a5a41 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIEvaluateDsmEmcaMethodOnRootBus+2576d
fffff802`373ce7f8 ACPI!ExInitializeWorkItem =  (inline caller) ACPI!ACPIInitShutdownInProgress+3c
fffff802`373ce8ab ACPI!ExInitializeWorkItem =  (inline caller) ACPI!ACPINotifyOsShutdown+4f
fffff802`373ce90d ACPI!ACPIQueueShutdownInProgress =  (inline caller) ACPI!ACPINotifyOsShutdownWorker+1d
fffff802`373b4ff3 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIRootDeviceNotifyPepDiscoverDevice+1acb7
fffff802`3739a46e ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIRootDeviceNotifyPepDiscoverDevice+132
fffff802`37407da8 ACPI!HviIsCpuManagementPartition =  (inline caller) ACPI!ACPIRootInitialize+10c
fffff802`37407da8 ACPI!HviGetPartitionPrivileges =  (inline caller) ACPI!ACPIRootInitialize+10c
fffff802`37407e6f ACPI!AcpiEvaluateOscVsmMethodOnRootBus =  (inline caller) ACPI!ACPIRootInitialize+1d3
fffff802`37407e40 ACPI!ACPIEvaluateOscIovMethodOnRootBus =  (inline caller) ACPI!ACPIRootInitialize+1a4
fffff802`37407ed1 ACPI!ACPIWriteEmcaSupportToRegistry =  (inline caller) ACPI!ACPIRootInitialize+235
fffff802`37407f25 ACPI!OSCloseHandle =  (inline caller) ACPI!ACPIRootInitialize+289
fffff802`37407f66 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIRootInitialize+2ca
fffff802`37424ce2 ACPI!IoSkipCurrentIrpStackLocation =  (inline caller) ACPI!ACPIRootIrpCancelRemoveOrStopDevice+62
fffff802`37372e8b ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIRootIrpCompleteRoutine+5b
fffff802`37372e4a ACPI!ACPIInternalGetDeviceExtension =  (inline caller) ACPI!ACPIRootIrpCompleteRoutine+1a
fffff802`373ac1a2 ACPI!_ACPIInternalErrorEx =  (inline caller) ACPI!ACPIRootIrpCompleteRoutine+39372
fffff802`37372ee9 ACPI!ACPIDebugGetIrpText =  (inline caller) ACPI!ACPIRootIrpCompleteRoutine+b9
fffff802`37411412 ACPI!IoSetCompletionRoutine =  (inline caller) ACPI!ACPIRootIrpQueryCapabilities+82
fffff802`37411419 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIRootIrpQueryCapabilities+89
fffff802`374113e0 ACPI!IoCopyCurrentIrpStackLocationToNext =  (inline caller) ACPI!ACPIRootIrpQueryCapabilities+50
fffff802`374113e0 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIRootIrpQueryCapabilities+50
fffff802`37411451 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIRootIrpQueryCapabilities+c1
fffff802`37412887 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIRootIrpQueryDeviceRelations+47
fffff802`3741298a ACPI!IoSetCompletionRoutine =  (inline caller) ACPI!ACPIRootIrpQueryDeviceRelations+14a
fffff802`374129b9 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIRootIrpQueryDeviceRelations+179
fffff802`37412983 ACPI!IoCopyCurrentIrpStackLocationToNext =  (inline caller) ACPI!ACPIRootIrpQueryDeviceRelations+143
fffff802`37412983 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIRootIrpQueryDeviceRelations+143
fffff802`37408c5c ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIRootIrpQueryInterface+1c
fffff802`373ceb59 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIRootIrpQueryPower+39
fffff802`373ceb4b ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIRootIrpQueryPower+2b
fffff802`37424e30 ACPI!IoSkipCurrentIrpStackLocation =  (inline caller) ACPI!ACPIRootIrpQueryRemoveOrStopDevice+70
fffff802`373ced10 ACPI!IoSkipCurrentIrpStackLocation =  (inline caller) ACPI!ACPIRootIrpRemoveDevice+40
fffff802`373cedd8 ACPI!ACPIWmiUnRegisterLog =  (inline caller) ACPI!ACPIRootIrpRemoveDevice+108
fffff802`373ced93 ACPI!ACPIDebugGetIrpText =  (inline caller) ACPI!ACPIRootIrpRemoveDevice+c3
fffff802`373ceea2 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIRootIrpRemoveDevice+1d2
fffff802`373cee9c ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIRootIrpRemoveDevice+1cc
fffff802`373cee93 ACPI!ACPIInternalClearFlags =  (inline caller) ACPI!ACPIRootIrpRemoveDevice+1c3
fffff802`373cef2a ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIRootIrpSetPower+1a
fffff802`373cef67 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIRootIrpSetPower+57
fffff802`373cef44 ACPI!_ACPIInternalError =  (inline caller) ACPI!ACPIRootIrpSetPower+34
fffff802`3742b227 ACPI!IoSetCompletionRoutine =  (inline caller) ACPI!ACPIRootIrpStartDevice+f7
fffff802`3742b256 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIRootIrpStartDevice+126
fffff802`3742b220 ACPI!IoCopyCurrentIrpStackLocationToNext =  (inline caller) ACPI!ACPIRootIrpStartDevice+f0
fffff802`3742b220 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIRootIrpStartDevice+f0
fffff802`3742b1ff ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIRootIrpStartDevice+cf
fffff802`3742b28e ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIRootIrpStartDevice+15e
fffff802`3742b343 ACPI!ACPIDebugGetIrpText =  (inline caller) ACPI!ACPIRootIrpStartDevice+213
fffff802`37424f68 ACPI!IoSkipCurrentIrpStackLocation =  (inline caller) ACPI!ACPIRootIrpStopDevice+58
fffff802`374250b0 ACPI!OSCloseHandle =  (inline caller) ACPI!ACPIRootWorker+70
fffff802`37425168 ACPI!OSCloseHandle =  (inline caller) ACPI!ACPIRootWorker+128
fffff802`374069e3 ACPI!OSCloseHandle =  (inline caller) ACPI!ACPIWriteOscSupportToRegistry+87
fffff802`373b6e10 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!AcpiRootIsFeatureSupported+19370
fffff802`3742b08f ACPI!RtlSizeOfCmResourceList =  (inline caller) ACPI!RtlDuplicateCmResourceList+f
fffff802`374253c5 ACPI!AcpiSdevEntryCompare =  (inline caller) ACPI!AcpiSearchSdevTable+55
fffff802`374253ce ACPI!AcpiSdevStringCompare =  (inline caller) ACPI!AcpiSearchSdevTable+5e
fffff802`3738a91a ACPI!ACPIExtListTestElement =  (inline caller) ACPI!ACPISystemPowerDetermineSupportedDeviceStates+8a
fffff802`3738a91a ACPI!ACPIExtListIsFinished =  (inline caller) ACPI!ACPISystemPowerDetermineSupportedDeviceStates+8a
fffff802`3738a984 ACPI!ACPIInitReferenceDeviceExtension =  (inline caller) ACPI!ACPISystemPowerDetermineSupportedDeviceStates+f4
fffff802`3738aa20 ACPI!ACPISystemPowerDetermineSupportedSystemState =  (inline caller) ACPI!ACPISystemPowerDetermineSupportedDeviceStates+190
fffff802`3739ba75 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPISystemPowerInitializeRootMapping+125
fffff802`37389cb7 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPISystemPowerUpdateDeviceCapabilities+2cb
fffff802`373a8c37 ACPI!MapWakeDepthToDstate =  (inline caller) ACPI!ACPISystemPowerUpdateWakeCapabilitiesForFilters+2224b
fffff802`373a8c83 ACPI!MapWakeDepthToDstate =  (inline caller) ACPI!ACPISystemPowerUpdateWakeCapabilitiesForFilters+22297
fffff802`373a930d ACPI!MapWakeDepthToDstate =  (inline caller) ACPI!ACPISystemPowerUpdateWakeCapabilitiesForPDOs+215ad
fffff802`37395863 ACPI!ACPIMoveBuildPreStageQueueEntries =  (inline caller) ACPI!ACPITableLoad+213
fffff802`37395719 ACPI!AMLIIsECDTKnownBad =  (inline caller) ACPI!ACPITableLoad+c9
fffff802`373b2fe4 ACPI!_ACPIInternalError =  (inline caller) ACPI!ACPITableLoad+1d994
fffff802`373a018b ACPI!IsListEmpty =  (inline caller) ACPI!ACPITableLoadCallBack+8b
fffff802`373b820b ACPI!_ACPIInternalError =  (inline caller) ACPI!ACPITableLoadCallBack+1810b
fffff802`373cf79c ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!ACPITableNotifyFreeObject+16c
fffff802`373cf679 ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!ACPITableNotifyFreeObject+49
fffff802`373cf6ec ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!ACPITableNotifyFreeObject+bc
fffff802`373cf6e2 ACPI!AMLISetNSObjectContext =  (inline caller) ACPI!ACPITableNotifyFreeObject+b2
fffff802`373cf6de ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!ACPITableNotifyFreeObject+ae
fffff802`373cf6fc ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPITableNotifyFreeObject+cc
fffff802`373cf72e ACPI!AMLISetNSObjectContext =  (inline caller) ACPI!ACPITableNotifyFreeObject+fe
fffff802`373cf717 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPITableNotifyFreeObject+e7
fffff802`373cfa61 ACPI!ACPIBuildIssueInvalidateRelations =  (inline caller) ACPI!ACPITableUnloadCallBack+11
fffff802`3737e06b ACPI!InsertTailList =  (inline caller) ACPI!ACPIThermalActivateConstraint+47
fffff802`373a43e1 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIThermalActivateConstraint+263bd
fffff802`373a43e1 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIThermalActivateConstraint+263bd
fffff802`3737e05b ACPI!InsertTailList =  (inline caller) ACPI!ACPIThermalActivateConstraint+37
fffff802`3737e102 ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!ACPIThermalActivateConstraint+de
fffff802`3737dd93 ACPI!InsertTailList =  (inline caller) ACPI!ACPIThermalAssocaiteConstraint+3b
fffff802`3737dde3 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIThermalAssocaiteConstraint+8b
fffff802`3737dde3 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIThermalAssocaiteConstraint+8b
fffff802`3737dd76 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIThermalAssocaiteConstraint+1e
fffff802`373cfd11 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIThermalCancelRequest+141
fffff802`373cfd80 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIThermalCancelRequest+1b0
fffff802`373cfd80 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIThermalCancelRequest+1b0
fffff802`3740a605 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIThermalCheckNativeTemperatureSupport+25
fffff802`3740a560 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIThermalCheckPolicySupport+34
fffff802`37382c4c ACPI!InitializeListHead =  (inline caller) ACPI!ACPIThermalCompletePendingIrps+38
fffff802`37382c94 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIThermalCompletePendingIrps+80
fffff802`37382e83 ACPI!IoSetCancelRoutine =  (inline caller) ACPI!ACPIThermalCompletePendingIrps+26f
fffff802`37382d4d ACPI!InsertTailList =  (inline caller) ACPI!ACPIThermalCompletePendingIrps+139
fffff802`37382d2c ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIThermalCompletePendingIrps+118
fffff802`37382d85 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIThermalCompletePendingIrps+171
fffff802`373a6f4f ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIThermalCompletePendingIrps+2433b
fffff802`373a6f4f ACPI!RtlFailFast =  (inline caller) ACPI!ACPIThermalCompletePendingIrps+2433b
fffff802`373822fd ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIThermalDeviceControl+4d
fffff802`373a6b68 ACPI!ACPIDispatchIrpInvalid =  (inline caller) ACPI!ACPIThermalDeviceControl+248b8
fffff802`373a6c48 ACPI!IoSetCancelRoutine =  (inline caller) ACPI!ACPIThermalDeviceControl+24998
fffff802`373824a3 ACPI!IoSetCancelRoutine =  (inline caller) ACPI!ACPIThermalDeviceControl+1f3
fffff802`37382506 ACPI!ACPIThermalLoop =  (inline caller) ACPI!ACPIThermalDeviceControl+256
fffff802`373824bf ACPI!InsertTailList =  (inline caller) ACPI!ACPIThermalDeviceControl+20f
fffff802`373a6c70 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIThermalDeviceControl+249c0
fffff802`373a6c70 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIThermalDeviceControl+249c0
fffff802`373824b8 ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIThermalDeviceControl+208
fffff802`373cfebf ACPI!ACPIThermalLoop =  (inline caller) ACPI!ACPIThermalEvent+12f
fffff802`37408766 ACPI!RtlUnicodeStringInit =  (inline caller) ACPI!ACPIThermalGetOverrideHandle+1e
fffff802`37408766 ACPI!RtlUnicodeStringInitWorker =  (inline caller) ACPI!ACPIThermalGetOverrideHandle+1e
fffff802`37416dd0 ACPI!OSCloseHandle =  (inline caller) ACPI!ACPIThermalGetOverrideHandle+e688
fffff802`373a6269 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIThermalGetSensorDevice+24959
fffff802`373a61b3 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIThermalGetSensorDevice+248a3
fffff802`373a62b1 ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!ACPIThermalGetSensorDevice+249a1
fffff802`373a6450 ACPI!_ObReferenceObjectByHandle =  (inline caller) ACPI!ACPIThermalGetSensorDevice+24b40
fffff802`37382a70 ACPI!ULongToPtr =  (inline caller) ACPI!ACPIThermalLoopEx+2a8
fffff802`373a6e86 ACPI!ULongToPtr =  (inline caller) ACPI!ACPIThermalLoopEx+246be
fffff802`37382bc8 ACPI!InsertTailList =  (inline caller) ACPI!ACPIThermalLoopEx+400
fffff802`373a6ee5 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIThermalLoopEx+2471d
fffff802`373a6ee5 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIThermalLoopEx+2471d
fffff802`3737e49c ACPI!ACPIGetRootDeviceObject =  (inline caller) ACPI!ACPIThermalQueryCoolingInterfaces+c0
fffff802`3737e520 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIThermalQueryCoolingInterfaces+144
fffff802`3737e5b8 ACPI!InsertTailList =  (inline caller) ACPI!ACPIThermalQueryCoolingInterfaces+1dc
fffff802`373a447d ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIThermalQueryCoolingInterfaces+260a1
fffff802`373a447d ACPI!RtlFailFast =  (inline caller) ACPI!ACPIThermalQueryCoolingInterfaces+260a1
fffff802`374256df ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIThermalReadTemperature+167
fffff802`37425730 ACPI!IoSetCompletionRoutine =  (inline caller) ACPI!ACPIThermalReadTemperature+1b8
fffff802`37425730 ACPI!IoGetNextIrpStackLocation =  (inline caller) ACPI!ACPIThermalReadTemperature+1b8
fffff802`373cffa3 ACPI!ACPIThermalLoop =  (inline caller) ACPI!ACPIThermalReadTemperatureComplete+a3
fffff802`373b8c74 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIThermalReleaseCoolingInterfaces+17854
fffff802`373b8d1c ACPI!InsertTailList =  (inline caller) ACPI!ACPIThermalReleaseCoolingInterfaces+178fc
fffff802`373b8dde ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIThermalReleaseCoolingInterfaces+179be
fffff802`373b8dde ACPI!RtlFailFast =  (inline caller) ACPI!ACPIThermalReleaseCoolingInterfaces+179be
fffff802`373b8cfb ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIThermalReleaseCoolingInterfaces+178db
fffff802`373d00c5 ACPI!ACPIThermalLoop =  (inline caller) ACPI!ACPIThermalRereadTemperature+f1
fffff802`373d0111 ACPI!ACPIThermalLoop =  (inline caller) ACPI!ACPIThermalStopZone+d
fffff802`373d0292 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIThermalStopZoneWorker+146
fffff802`373d0351 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIThermalStopZoneWorker+205
fffff802`373d0351 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIThermalStopZoneWorker+205
fffff802`373d031d ACPI!ACPIThermalLoop =  (inline caller) ACPI!ACPIThermalStopZoneWorker+1d1
fffff802`37382270 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!ACPIThermalTMPCallback+20
fffff802`37417596 ACPI!RtlUnicodeStringInit =  (inline caller) ACPI!ACPIThermalWorker+cdb6
fffff802`37417596 ACPI!RtlUnicodeStringInitWorker =  (inline caller) ACPI!ACPIThermalWorker+cdb6
fffff802`374175ab ACPI!RtlStringLengthWorkerW =  (inline caller) ACPI!ACPIThermalWorker+cdcb
fffff802`373d0393 ACPI!RemoveHeadList =  (inline caller) ACPI!AcpiThermalDestroyContraints+33
fffff802`373d03fd ACPI!RemoveEntryList =  (inline caller) ACPI!AcpiThermalDestroyContraints+9d
fffff802`373d046b ACPI!FatalListEntryError =  (inline caller) ACPI!AcpiThermalDestroyContraints+10b
fffff802`373d046b ACPI!RtlFailFast =  (inline caller) ACPI!AcpiThermalDestroyContraints+10b
fffff802`37413328 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!AcpiEjectBusNumberTranslator+1c
fffff802`37409eb1 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIFreePhysicalDeviceLocationDescriptors+9
fffff802`37409eb9 ACPI!RemoveHeadList =  (inline caller) ACPI!ACPIFreePhysicalDeviceLocationDescriptors+11
fffff802`37409edd ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIFreePhysicalDeviceLocationDescriptors+35
fffff802`37409edd ACPI!RtlFailFast =  (inline caller) ACPI!ACPIFreePhysicalDeviceLocationDescriptors+35
fffff802`37412dfc ACPI!InsertTailList =  (inline caller) ACPI!ACPIInsertPhysicalDeviceLocationDescriptor+0
fffff802`3741ae1a ACPI!InsertTailList =  (inline caller) ACPI!ACPIInsertPhysicalDeviceLocationDescriptor+801e
fffff802`3741ae4b ACPI!InsertTailList =  (inline caller) ACPI!ACPIInsertPhysicalDeviceLocationDescriptor+804f
fffff802`3741ae4b ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIInsertPhysicalDeviceLocationDescriptor+804f
fffff802`3741ae4b ACPI!RtlFailFast =  (inline caller) ACPI!ACPIInsertPhysicalDeviceLocationDescriptor+804f
fffff802`3740e435 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIProcessPhysicalDeviceLocation+21d
fffff802`3740e42a ACPI!InitializeListHead =  (inline caller) ACPI!ACPIProcessPhysicalDeviceLocation+212
fffff802`3740e426 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIProcessPhysicalDeviceLocation+20e
fffff802`374192f9 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIProcessPhysicalDeviceLocation+b0e1
fffff802`373d0889 ACPI!AMLIIsPreDefinedRootObjects =  (inline caller) ACPI!AcpiGetNativeMethodHandleFromAcpiObject+5
fffff802`373d0889 ACPI!GetObjectFromHandle =  (inline caller) ACPI!AcpiGetNativeMethodHandleFromAcpiObject+5
fffff802`373d08eb ACPI!AcpiGetAmliPreDefinedRootObjectNativeHandle =  (inline caller) ACPI!AcpiGetNativeMethodHandleFromAcpiObject+67
fffff802`373d08b8 ACPI!AMLIGetNSObjectContext =  (inline caller) ACPI!AcpiGetNativeMethodHandleFromAcpiObject+34
fffff802`373d08c1 ACPI!AMLIGetNSObjectType =  (inline caller) ACPI!AcpiGetNativeMethodHandleFromAcpiObject+3d
fffff802`373d0cc9 ACPI!ACPIVectorRemove =  (inline caller) ACPI!ACPIVectorDisconnect+69
fffff802`373d0cf8 ACPI!ACPIVectorFreeEntry =  (inline caller) ACPI!ACPIVectorDisconnect+98
fffff802`373d0ec3 ACPI!RtlULongMult =  (inline caller) ACPI!ACPIVectorGetEntry+37
fffff802`373d0ec7 ACPI!RtlULongLongToULong =  (inline caller) ACPI!ACPIVectorGetEntry+3b
fffff802`373d0eb8 ACPI!RtlULongAdd =  (inline caller) ACPI!ACPIVectorGetEntry+2c
fffff802`373d10f4 ACPI!InsertTailList =  (inline caller) ACPI!ACPIAssociateWakeInterrupt+cc
fffff802`373d1127 ACPI!OSPowerAcquireWakeInterruptChangeStateLock =  (inline caller) ACPI!ACPIAssociateWakeInterrupt+ff
fffff802`373d115f ACPI!OSPowerReleaseWakeInterruptChangeStateLock =  (inline caller) ACPI!ACPIAssociateWakeInterrupt+137
fffff802`373d1252 ACPI!InsertTailList =  (inline caller) ACPI!ACPIAssociateWakeInterrupt+22a
fffff802`373d134d ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIAssociateWakeInterrupt+325
fffff802`373d134d ACPI!RtlFailFast =  (inline caller) ACPI!ACPIAssociateWakeInterrupt+325
fffff802`373d1242 ACPI!InsertTailList =  (inline caller) ACPI!ACPIAssociateWakeInterrupt+21a
fffff802`373d120f ACPI!InitializeListHead =  (inline caller) ACPI!ACPIAssociateWakeInterrupt+1e7
fffff802`373d1204 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIAssociateWakeInterrupt+1dc
fffff802`373d1306 ACPI!OSPowerReleaseWakeInterruptChangeStateLock =  (inline caller) ACPI!ACPIAssociateWakeInterrupt+2de
fffff802`37425fde ACPI!InitializeListHead =  (inline caller) ACPI!ACPICreateWakeInterruptRegistrationEntries+4e
fffff802`373d141e ACPI!OSPowerReleaseWakeInterruptChangeStateLock =  (inline caller) ACPI!ACPIDelayedFreeWakeInterrupt+c2
fffff802`373d1467 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIDelayedFreeWakeInterrupt+10b
fffff802`373d1444 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIDelayedFreeWakeInterrupt+e8
fffff802`373d149b ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIDelayedFreeWakeInterrupt+13f
fffff802`373d149b ACPI!RtlFailFast =  (inline caller) ACPI!ACPIDelayedFreeWakeInterrupt+13f
fffff802`373b2ee2 ACPI!KeGetCurrentIrql =  (inline caller) ACPI!ACPIDereferenceWaitWakePowerRequest+1d9ce
fffff802`373b2ef3 ACPI!ExInitializeWorkItem =  (inline caller) ACPI!ACPIDereferenceWaitWakePowerRequest+1d9df
fffff802`373d156a ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDisconnectWakeInterrupt+26
fffff802`373d15aa ACPI!InitializeListHead =  (inline caller) ACPI!ACPIDisconnectWakeInterrupt+66
fffff802`373d158a ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIDisconnectWakeInterrupt+46
fffff802`373d15c9 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIDisconnectWakeInterrupt+85
fffff802`373d15c9 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIDisconnectWakeInterrupt+85
fffff802`373d17a1 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIWakeDeferredRestoreEnables+15
fffff802`373d1a73 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIWakeDisableAsync+257
fffff802`373d1a6f ACPI!InsertTailList =  (inline caller) ACPI!ACPIWakeDisableAsync+253
fffff802`373d1a7b ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIWakeDisableAsync+25f
fffff802`373d1a7b ACPI!RtlFailFast =  (inline caller) ACPI!ACPIWakeDisableAsync+25f
fffff802`37395574 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIWakeEmptyRequestQueue+8
fffff802`373b7835 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIWakeEnableDisableAsync+18531
fffff802`373b783e ACPI!InsertTailList =  (inline caller) ACPI!ACPIWakeEnableDisableAsync+1853a
fffff802`373b7848 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIWakeEnableDisableAsync+18544
fffff802`373b7848 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIWakeEnableDisableAsync+18544
fffff802`373d1e24 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIWakeEnableDisableAsyncCallBack+d4
fffff802`373d20d4 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIWakeEnableDisableAsyncCallBack+384
fffff802`373d20d4 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIWakeEnableDisableAsyncCallBack+384
fffff802`373d2159 ACPI!ACPIGpeEnableWakeEvents =  (inline caller) ACPI!ACPIWakeEnableWakeEvents+69
fffff802`3739b564 ACPI!ACPIInternalSetFlags =  (inline caller) ACPI!ACPIWakeInitializePciDevice+a4
fffff802`373b339e ACPI!IoSetCancelRoutine =  (inline caller) ACPI!ACPIWakeRemoveDevicesAndUpdate+1d266
fffff802`373b33de ACPI!InsertTailList =  (inline caller) ACPI!ACPIWakeRemoveDevicesAndUpdate+1d2a6
fffff802`373b34c7 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIWakeRemoveDevicesAndUpdate+1d38f
fffff802`373b34c7 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIWakeRemoveDevicesAndUpdate+1d38f
fffff802`373b33bd ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIWakeRemoveDevicesAndUpdate+1d285
fffff802`3739e20a ACPI!IoMarkIrpPending =  (inline caller) ACPI!ACPIWakeWaitIrp+28a
fffff802`373d2aea ACPI!AcquireMutex =  (inline caller) ACPI!AcpiRecordBlackboxInformationWorker+3a
fffff802`373d2c7b ACPI!ReleaseMutex =  (inline caller) ACPI!AcpiRecordBlackboxInformationWorker+1cb
fffff802`373d2f09 ACPI!AmliDisableWatchdogNoLock =  (inline caller) ACPI!AmliWatchdogTimeoutAction+35
fffff802`373a083a ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!ACPIDispatchWmiLog+a
fffff802`373b84f0 ACPI!ACPIWmiDisableLog =  (inline caller) ACPI!ACPIDispatchWmiLog+17cc0
fffff802`373d2fb3 ACPI!RtlStringValidateDestA =  (inline caller) ACPI!RtlStringCchVPrintfA+f
fffff802`373d2fce ACPI!RtlStringVPrintfWorkerA =  (inline caller) ACPI!RtlStringCchVPrintfA+2a
fffff802`3739d2a4 ACPI!IsListEmpty =  (inline caller) ACPI!ACPIDeviceWorkerThread+24
fffff802`3739d2b9 ACPI!RemoveEntryList =  (inline caller) ACPI!ACPIDeviceWorkerThread+39
fffff802`373b6980 ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIDeviceWorkerThread+19700
fffff802`373b6980 ACPI!RtlFailFast =  (inline caller) ACPI!ACPIDeviceWorkerThread+19700
fffff802`3742b681 ACPI!InitializeListHead =  (inline caller) ACPI!ACPIInitializeWorker+8d
fffff802`3742b63c ACPI!InitializeListHead =  (inline caller) ACPI!ACPIInitializeWorker+48
fffff802`3742b620 ACPI!ExInitializeWorkItem =  (inline caller) ACPI!ACPIInitializeWorker+2c
fffff802`3742b6ea ACPI!_ObReferenceObjectByHandle =  (inline caller) ACPI!ACPIInitializeWorker+f6
fffff802`3742f1ba ACPI!_ACPIInternalError =  (inline caller) ACPI!ACPIInitializeWorker+3bc6
fffff802`3742f1de ACPI!_ACPIInternalError =  (inline caller) ACPI!ACPIInitializeWorker+3bea
fffff802`3738324d ACPI!InsertTailList =  (inline caller) ACPI!ACPISetDeviceWorker+3d
fffff802`373a71aa ACPI!FatalListEntryError =  (inline caller) ACPI!ACPISetDeviceWorker+23f9a
fffff802`373a71aa ACPI!RtlFailFast =  (inline caller) ACPI!ACPISetDeviceWorker+23f9a
fffff802`37398b99 ACPI!PsGetCurrentThread =  (inline caller) ACPI!ACPIWorkerThread+19
fffff802`37398b99 ACPI!KeGetCurrentThread =  (inline caller) ACPI!ACPIWorkerThread+19
fffff802`37398c1a ACPI!IsListEmpty =  (inline caller) ACPI!ACPIWorkerThread+9a
fffff802`37398c29 ACPI!RemoveHeadList =  (inline caller) ACPI!ACPIWorkerThread+a9
fffff802`373b45ca ACPI!FatalListEntryError =  (inline caller) ACPI!ACPIWorkerThread+1ba4a
fffff802`373b45ca ACPI!RtlFailFast =  (inline caller) ACPI!ACPIWorkerThread+1ba4a
fffff802`37398c87 ACPI!KeGetCurrentIrql =  (inline caller) ACPI!ACPIWorkerThread+107
fffff802`373b459a ACPI!KeGetCurrentIrql =  (inline caller) ACPI!ACPIWorkerThread+1ba1a
fffff802`3739b710 ACPI!InsertTailList =  (inline caller) ACPI!OSQueueWorkItem+1c
fffff802`373b5c3e ACPI!FatalListEntryError =  (inline caller) ACPI!OSQueueWorkItem+1a54a
fffff802`373b5c3e ACPI!RtlFailFast =  (inline caller) ACPI!OSQueueWorkItem+1a54a
fffff802`3738446b ACPI!GetObjectFromHandle =  (inline caller) ACPI!AMLIAsyncEvalObject+4f
fffff802`373a742f ACPI!KeGetCurrentThread =  (inline caller) ACPI!AMLIAsyncEvalObject+23013
fffff802`373a747a ACPI!Simulator_Post_AsyncEvalObject =  (inline caller) ACPI!AMLIAsyncEvalObject+2305e
fffff802`373a7483 ACPI!Simulator_Post_Generic =  (inline caller) ACPI!AMLIAsyncEvalObject+23067
fffff802`3737b8bc ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!AMLIDereferenceHandleEx+10
fffff802`373b13f5 ACPI!FreeObjectHandle =  (inline caller) ACPI!AMLIDereferenceHandleEx+35b49
fffff802`3737b92b ACPI!GetObjectFromHandle =  (inline caller) ACPI!AMLIEvalNameSpaceObject+4b
fffff802`3737b953 ACPI!GetBaseObject =  (inline caller) ACPI!AMLIEvalNameSpaceObject+73
fffff802`3737b95e ACPI!ReferenceObjectEx =  (inline caller) ACPI!AMLIEvalNameSpaceObject+7e
fffff802`3737b95e ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!AMLIEvalNameSpaceObject+7e
fffff802`373b149d ACPI!KeGetCurrentThread =  (inline caller) ACPI!AMLIEvalNameSpaceObject+35bbd
fffff802`3737b98b ACPI!DereferenceObjectEx =  (inline caller) ACPI!AMLIEvalNameSpaceObject+ab
fffff802`3737b98b ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!AMLIEvalNameSpaceObject+ab
fffff802`373b1519 ACPI!Simulator_Post_EvalNameSpaceObject =  (inline caller) ACPI!AMLIEvalNameSpaceObject+35c39
fffff802`373b1519 ACPI!Simulator_Post_Generic =  (inline caller) ACPI!AMLIEvalNameSpaceObject+35c39
fffff802`3738215a ACPI!GetObjectFromHandle =  (inline caller) ACPI!AMLIEvalPackageElement+3a
fffff802`373a6a88 ACPI!KeGetCurrentThread =  (inline caller) ACPI!AMLIEvalPackageElement+24968
fffff802`373a4ae8 ACPI!KeGetCurrentThread =  (inline caller) ACPI!AMLIEvalPkgDataElement+25e0c
fffff802`3737ed3e ACPI!EvalPackageElement =  (inline caller) ACPI!AMLIEvalPkgDataElement+62
fffff802`373d32f3 ACPI!GetObjectFromHandle =  (inline caller) ACPI!AMLIFinalizeObject+37
fffff802`37383d4e ACPI!GetObjectFromHandle =  (inline caller) ACPI!AMLIFindNameSpaceObject+66
fffff802`373a72c9 ACPI!KeGetCurrentThread =  (inline caller) ACPI!AMLIFindNameSpaceObject+235e1
fffff802`3738d6f2 ACPI!FreeDataBuffs =  (inline caller) ACPI!AMLIFreeDataBuffs+12
fffff802`3738641f ACPI!IsListEmpty =  (inline caller) ACPI!AMLIGetFirstChild+23
fffff802`37386427 ACPI!CreateObjectHandle =  (inline caller) ACPI!AMLIGetFirstChild+2b
fffff802`37386427 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!AMLIGetFirstChild+2b
fffff802`37386432 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!AMLIGetFirstChild+36
fffff802`3738642e ACPI!GetSelfHandle =  (inline caller) ACPI!AMLIGetFirstChild+32
fffff802`3737ac1b ACPI!DereferenceObjectEx =  (inline caller) ACPI!AMLIGetNameSpaceObjectNoLock+ab
fffff802`3737ac1b ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!AMLIGetNameSpaceObjectNoLock+ab
fffff802`3737abfb ACPI!CreateObjectHandle =  (inline caller) ACPI!AMLIGetNameSpaceObjectNoLock+8b
fffff802`3737abfb ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!AMLIGetNameSpaceObjectNoLock+8b
fffff802`3737ac06 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!AMLIGetNameSpaceObjectNoLock+96
fffff802`3737ac02 ACPI!GetSelfHandle =  (inline caller) ACPI!AMLIGetNameSpaceObjectNoLock+92
fffff802`37381590 ACPI!GetObjectPath =  (inline caller) ACPI!AMLIGetNameSpaceObjectPath+30
fffff802`3738158d ACPI!GetObjectFromHandle =  (inline caller) ACPI!AMLIGetNameSpaceObjectPath+2d
fffff802`37390b5a ACPI!CreateObjectHandle =  (inline caller) ACPI!AMLIGetNamedChild+6a
fffff802`37390b5a ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!AMLIGetNamedChild+6a
fffff802`37390b5a ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!AMLIGetNamedChild+6a
fffff802`37390b60 ACPI!GetSelfHandle =  (inline caller) ACPI!AMLIGetNamedChild+70
fffff802`3738b110 ACPI!CreateObjectHandle =  (inline caller) ACPI!AMLIGetParent+28
fffff802`3738b110 ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!AMLIGetParent+28
fffff802`3738b11b ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!AMLIGetParent+33
fffff802`3738b117 ACPI!GetSelfHandle =  (inline caller) ACPI!AMLIGetParent+2f
fffff802`3742cf6f ACPI!AMLIAddNamespaceOverride =  (inline caller) ACPI!AMLIInitialize+3cf
fffff802`3742d02f ACPI!InitializeMutex =  (inline caller) ACPI!AMLIInitialize+48f
fffff802`3742d015 ACPI!InitializeMutex =  (inline caller) ACPI!AMLIInitialize+475
fffff802`3742cffb ACPI!InitializeMutex =  (inline caller) ACPI!AMLIInitialize+45b
fffff802`3742cfa9 ACPI!InitializeMutex =  (inline caller) ACPI!AMLIInitialize+409
fffff802`3742cfda ACPI!InitializeListHead =  (inline caller) ACPI!AMLIInitialize+43a
fffff802`3742cfc5 ACPI!InitializeListHead =  (inline caller) ACPI!AMLIInitialize+425
fffff802`3742cf94 ACPI!ExInitializeWorkItem =  (inline caller) ACPI!AMLIInitialize+3f4
fffff802`3742cf81 ACPI!InitializeMutex =  (inline caller) ACPI!AMLIInitialize+3e1
fffff802`3742d092 ACPI!InitializeListHead =  (inline caller) ACPI!AMLIInitialize+4f2
fffff802`3742d07d ACPI!InitializeListHead =  (inline caller) ACPI!AMLIInitialize+4dd
fffff802`3742d120 ACPI!ExInitializeWorkItem =  (inline caller) ACPI!AMLIInitialize+580
fffff802`37399bff ACPI!GetObjectFromHandle =  (inline caller) ACPI!AMLIIsObjectInGivenScope+3b
fffff802`37387372 ACPI!AMLIDereferenceHandleEx =  (inline caller) ACPI!AMLIIterateSiblingsNext+72
fffff802`37387372 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!AMLIIterateSiblingsNext+72
fffff802`373a90c7 ACPI!FreeObjectHandle =  (inline caller) ACPI!AMLIIterateSiblingsNext+21dc7
fffff802`3738730d ACPI!AMLIGetNextSibling =  (inline caller) ACPI!AMLIIterateSiblingsNext+d
fffff802`37387320 ACPI!GetObjectFromHandle =  (inline caller) ACPI!AMLIIterateSiblingsNext+20
fffff802`3738733c ACPI!CreateObjectHandle =  (inline caller) ACPI!AMLIIterateSiblingsNext+3c
fffff802`3738733c ACPI!AMLIReferenceHandleEx =  (inline caller) ACPI!AMLIIterateSiblingsNext+3c
fffff802`3738733c ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!AMLIIterateSiblingsNext+3c
fffff802`37387342 ACPI!GetSelfHandle =  (inline caller) ACPI!AMLIIterateSiblingsNext+42
fffff802`3742e26c ACPI!IsDeviceLockMutexSupported =  (inline caller) ACPI!AMLILoadDDB+54
fffff802`3742fd6e ACPI!KeGetCurrentThread =  (inline caller) ACPI!AMLILoadDDB+1b56
fffff802`3742fd51 ACPI!NameSegString =  (inline caller) ACPI!AMLILoadDDB+1b39
fffff802`373d3416 ACPI!IsListEmpty =  (inline caller) ACPI!AMLIPauseInterpreter+4a
fffff802`373d33f7 ACPI!AcquireMutex =  (inline caller) ACPI!AMLIPauseInterpreter+2b
fffff802`373d3466 ACPI!ReleaseMutex =  (inline caller) ACPI!AMLIPauseInterpreter+9a
fffff802`373d342f ACPI!InsertTailList =  (inline caller) ACPI!AMLIPauseInterpreter+63
fffff802`373d344e ACPI!FatalListEntryError =  (inline caller) ACPI!AMLIPauseInterpreter+82
fffff802`373d344e ACPI!RtlFailFast =  (inline caller) ACPI!AMLIPauseInterpreter+82
fffff802`373d34c3 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!AMLIReferenceHandleEx+7
fffff802`373b60c5 ACPI!Simulator_Post_RegEventHandler =  (inline caller) ACPI!AMLIRegEventHandler+1a189
fffff802`373b60c5 ACPI!Simulator_Post_Generic =  (inline caller) ACPI!AMLIRegEventHandler+1a189
fffff802`373d3511 ACPI!AcquireMutex =  (inline caller) ACPI!AMLIResumeInterpreter+11
fffff802`373d357e ACPI!IsListEmpty =  (inline caller) ACPI!AMLIResumeInterpreter+7e
fffff802`373d35bc ACPI!InitializeListHead =  (inline caller) ACPI!AMLIResumeInterpreter+bc
fffff802`373d358e ACPI!RemoveHeadList =  (inline caller) ACPI!AMLIResumeInterpreter+8e
fffff802`373d35f2 ACPI!IsListEmpty =  (inline caller) ACPI!AMLIResumeInterpreter+f2
fffff802`373d35d3 ACPI!InsertHeadList =  (inline caller) ACPI!AMLIResumeInterpreter+d3
fffff802`373d3655 ACPI!FatalListEntryError =  (inline caller) ACPI!AMLIResumeInterpreter+155
fffff802`373d3655 ACPI!RtlFailFast =  (inline caller) ACPI!AMLIResumeInterpreter+155
fffff802`373d3630 ACPI!ReleaseMutex =  (inline caller) ACPI!AMLIResumeInterpreter+130
fffff802`373d36b6 ACPI!Simulator_InitTestData =  (inline caller) ACPI!Simulator_AllocAndInitTestData+2a
fffff802`373d370f ACPI!Simulator_ProcessInternalError =  (inline caller) ACPI!Simulator_AsyncEvalObjectCallBack+2f
fffff802`373d382a ACPI!Simulator_GetRootNode =  (inline caller) ACPI!Simulator_CallbackWorker+aa
fffff802`373d383b ACPI!Simulator_FreeObjData =  (inline caller) ACPI!Simulator_CallbackWorker+bb
fffff802`373d37bd ACPI!Simulator_ResumeInterpreter =  (inline caller) ACPI!Simulator_CallbackWorker+3d
fffff802`373d39ae ACPI!GetSelfHandle =  (inline caller) ACPI!Simulator_EvaluateNode+3e
fffff802`373d3ab9 ACPI!IsListEmpty =  (inline caller) ACPI!Simulator_GetChildNode+31
fffff802`373d3c7d ACPI!GetSelfHandle =  (inline caller) ACPI!Simulator_NotifyNode+45
fffff802`373d3d1d ACPI!InitializeListHead =  (inline caller) ACPI!Simulator_PauseInterpreter+51
fffff802`373d40fd ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!Simulator_RemoveNode+6d
fffff802`373d4107 ACPI!GetSelfHandle =  (inline caller) ACPI!Simulator_RemoveNode+77
fffff802`373d417b ACPI!Simulator_ProcessInternalError =  (inline caller) ACPI!Simulator_TestNotifyRet+13
fffff802`373d4233 ACPI!GetObjectFromHandle =  (inline caller) ACPI!AMLICreateNativeNamespaceObject+7b
fffff802`373d4453 ACPI!GetObjectFromHandle =  (inline caller) ACPI!AMLIRemoveNativeObjectsFromNamespace+43
fffff802`37392e75 ACPI!ReferenceObjectEx =  (inline caller) ACPI!CreateNativeNameSpaceObject+111
fffff802`37392e75 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!CreateNativeNameSpaceObject+111
fffff802`37392e60 ACPI!ReferenceObjectEx =  (inline caller) ACPI!CreateNativeNameSpaceObject+fc
fffff802`37392e60 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!CreateNativeNameSpaceObject+fc
fffff802`373d4566 ACPI!SetClearAssociatedNativeObjectNoLock =  (inline caller) ACPI!MarkNativeObjectsDefunct+6a
fffff802`373d4597 ACPI!CheckIfObjectOrParentDefunct =  (inline caller) ACPI!MarkNativeObjectsDefunct+9b
fffff802`373d4624 ACPI!GetSelfHandle =  (inline caller) ACPI!PerformNativeMethodCall+64
fffff802`373d4618 ACPI!GetSelfHandle =  (inline caller) ACPI!PerformNativeMethodCall+58
fffff802`3739370f ACPI!SetClearAssociatedNativeObjectNoLock =  (inline caller) ACPI!SetClearAssociatedNativeObject+23
fffff802`373d4d4a ACPI!ReferenceObjectEx =  (inline caller) ACPI!AMLIGetNamespaceOverrideObject+46
fffff802`373d4d4a ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!AMLIGetNamespaceOverrideObject+46
fffff802`3737a09b ACPI!NewObjData =  (inline caller) ACPI!DupObjData+5b
fffff802`373b00af ACPI!ReferenceObjectEx =  (inline caller) ACPI!DupObjData+3606f
fffff802`373b00af ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!DupObjData+3606f
fffff802`373b0095 ACPI!ReferenceObjectEx =  (inline caller) ACPI!DupObjData+36055
fffff802`373b0095 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!DupObjData+36055
fffff802`373b00e2 ACPI!ReferenceObjectEx =  (inline caller) ACPI!DupObjData+360a2
fffff802`373b00e2 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!DupObjData+360a2
fffff802`373b00c9 ACPI!ReferenceObjectEx =  (inline caller) ACPI!DupObjData+36089
fffff802`373b00c9 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!DupObjData+36089
fffff802`37383f70 ACPI!RtlULongAdd =  (inline caller) ACPI!FindNSObj+80
fffff802`37384055 ACPI!IsListEmpty =  (inline caller) ACPI!FindNSObj+165
fffff802`37384075 ACPI!HeapFree =  (inline caller) ACPI!FindNSObj+185
fffff802`3738413f ACPI!ReleaseMutex =  (inline caller) ACPI!FindNSObj+24f
fffff802`3738409d ACPI!HeapInsertFreeList =  (inline caller) ACPI!FindNSObj+1ad
fffff802`373840bd ACPI!InsertTailList =  (inline caller) ACPI!FindNSObj+1cd
fffff802`373843c9 ACPI!RemoveEntryList =  (inline caller) ACPI!FindNSObj+4d9
fffff802`3738410a ACPI!RemoveEntryList =  (inline caller) ACPI!FindNSObj+21a
fffff802`37384324 ACPI!RemoveEntryList =  (inline caller) ACPI!FindNSObj+434
fffff802`37384079 ACPI!AcquireMutex =  (inline caller) ACPI!FindNSObj+189
fffff802`3738416b ACPI!HeapFree =  (inline caller) ACPI!FindNSObj+27b
fffff802`37384207 ACPI!ReleaseMutex =  (inline caller) ACPI!FindNSObj+317
fffff802`37384193 ACPI!HeapInsertFreeList =  (inline caller) ACPI!FindNSObj+2a3
fffff802`373841ad ACPI!InsertTailList =  (inline caller) ACPI!FindNSObj+2bd
fffff802`373842f6 ACPI!RemoveEntryList =  (inline caller) ACPI!FindNSObj+406
fffff802`373842c5 ACPI!RemoveEntryList =  (inline caller) ACPI!FindNSObj+3d5
fffff802`373843ef ACPI!RemoveEntryList =  (inline caller) ACPI!FindNSObj+4ff
fffff802`3738440d ACPI!FatalListEntryError =  (inline caller) ACPI!FindNSObj+51d
fffff802`3738440d ACPI!RtlFailFast =  (inline caller) ACPI!FindNSObj+51d
fffff802`3738416f ACPI!AcquireMutex =  (inline caller) ACPI!FindNSObj+27f
fffff802`37372fa3 ACPI!FreeData =  (inline caller) ACPI!FreeDataBuffs+13
fffff802`3737302a ACPI!HeapFree =  (inline caller) ACPI!FreeObjData+1a
fffff802`37373054 ACPI!HeapInsertFreeList =  (inline caller) ACPI!FreeObjData+44
fffff802`3737306e ACPI!InsertTailList =  (inline caller) ACPI!FreeObjData+5e
fffff802`3737328a ACPI!RemoveEntryList =  (inline caller) ACPI!FreeObjData+27a
fffff802`373730b8 ACPI!RemoveEntryList =  (inline caller) ACPI!FreeObjData+a8
fffff802`3737331a ACPI!RemoveEntryList =  (inline caller) ACPI!FreeObjData+30a
fffff802`3737331a ACPI!FatalListEntryError =  (inline caller) ACPI!FreeObjData+30a
fffff802`3737331a ACPI!RtlFailFast =  (inline caller) ACPI!FreeObjData+30a
fffff802`37373030 ACPI!AcquireMutex =  (inline caller) ACPI!FreeObjData+20
fffff802`3737311b ACPI!HeapFree =  (inline caller) ACPI!FreeObjData+10b
fffff802`37373145 ACPI!HeapInsertFreeList =  (inline caller) ACPI!FreeObjData+135
fffff802`3737315b ACPI!InsertTailList =  (inline caller) ACPI!FreeObjData+14b
fffff802`3737324a ACPI!RemoveEntryList =  (inline caller) ACPI!FreeObjData+23a
fffff802`373732d5 ACPI!RemoveEntryList =  (inline caller) ACPI!FreeObjData+2c5
fffff802`37373121 ACPI!AcquireMutex =  (inline caller) ACPI!FreeObjData+111
fffff802`373731fc ACPI!HeapFree =  (inline caller) ACPI!FreeObjData+1ec
fffff802`37373200 ACPI!AcquireMutex =  (inline caller) ACPI!FreeObjData+1f0
fffff802`373d5029 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!FreeObjOwner+3d
fffff802`373d520f ACPI!ReleaseMutex =  (inline caller) ACPI!FreeOwnedObjects+43
fffff802`373d51f2 ACPI!RemoveEntryList =  (inline caller) ACPI!FreeOwnedObjects+26
fffff802`373d52ba ACPI!FatalListEntryError =  (inline caller) ACPI!FreeOwnedObjects+ee
fffff802`373d52ba ACPI!RtlFailFast =  (inline caller) ACPI!FreeOwnedObjects+ee
fffff802`373d51d9 ACPI!AcquireMutex =  (inline caller) ACPI!FreeOwnedObjects+d
fffff802`373d5261 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!FreeOwnedObjects+95
fffff802`373d526b ACPI!GetSelfHandle =  (inline caller) ACPI!FreeOwnedObjects+9f
fffff802`37384527 ACPI!ReferenceObjectEx =  (inline caller) ACPI!GetBaseObject+b
fffff802`37384527 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!GetBaseObject+b
fffff802`37394703 ACPI!ReferenceObjectEx =  (inline caller) ACPI!GetFieldUnitRegionObj+6b
fffff802`37394703 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!GetFieldUnitRegionObj+6b
fffff802`3737948c ACPI!RtlStringCchCopyA =  (inline caller) ACPI!GetObjectPathNoLock+ac
fffff802`3737948c ACPI!RtlStringValidateDestA =  (inline caller) ACPI!GetObjectPathNoLock+ac
fffff802`373794b0 ACPI!RtlStringCopyWorkerA =  (inline caller) ACPI!GetObjectPathNoLock+d0
fffff802`373795af ACPI!RtlStringCchCatNA =  (inline caller) ACPI!GetObjectPathNoLock+1cf
fffff802`373795af ACPI!RtlStringValidateDestAndLengthA =  (inline caller) ACPI!GetObjectPathNoLock+1cf
fffff802`373795af ACPI!RtlStringValidateDestA =  (inline caller) ACPI!GetObjectPathNoLock+1cf
fffff802`373795d0 ACPI!RtlStringLengthWorkerA =  (inline caller) ACPI!GetObjectPathNoLock+1f0
fffff802`3737960f ACPI!RtlStringCopyWorkerA =  (inline caller) ACPI!GetObjectPathNoLock+22f
fffff802`373794fd ACPI!RtlStringCchCatA =  (inline caller) ACPI!GetObjectPathNoLock+11d
fffff802`373794fd ACPI!RtlStringValidateDestAndLengthA =  (inline caller) ACPI!GetObjectPathNoLock+11d
fffff802`373794fd ACPI!RtlStringValidateDestA =  (inline caller) ACPI!GetObjectPathNoLock+11d
fffff802`3737951f ACPI!RtlStringLengthWorkerA =  (inline caller) ACPI!GetObjectPathNoLock+13f
fffff802`37379561 ACPI!RtlStringCopyWorkerA =  (inline caller) ACPI!GetObjectPathNoLock+181
fffff802`37399db8 ACPI!KeGetCurrentIrql =  (inline caller) ACPI!MapUnmapPhysMem+28
fffff802`373b4e4f ACPI!KeGetCurrentIrql =  (inline caller) ACPI!MapUnmapPhysMem+1b0bf
fffff802`373d538d ACPI!MoveObjToNewOwner =  (inline caller) ACPI!MigrateDefunctObjectsToNewOwner+25
fffff802`373d538d ACPI!RemoveObjectFromOwnerList =  (inline caller) ACPI!MigrateDefunctObjectsToNewOwner+25
fffff802`3739346c ACPI!ReleaseMutex =  (inline caller) ACPI!NewObjOwner+a4
fffff802`37393442 ACPI!InsertTailList =  (inline caller) ACPI!NewObjOwner+7a
fffff802`373b250b ACPI!FatalListEntryError =  (inline caller) ACPI!NewObjOwner+1f143
fffff802`373b250b ACPI!RtlFailFast =  (inline caller) ACPI!NewObjOwner+1f143
fffff802`3739342f ACPI!AcquireMutex =  (inline caller) ACPI!NewObjOwner+67
fffff802`373d54b6 ACPI!GetSelfHandle =  (inline caller) ACPI!NotifyObjectDestruction+8e
fffff802`373d55f6 ACPI!RemoveEntryList =  (inline caller) ACPI!NotifyObjectDestruction+1ce
fffff802`373d570b ACPI!FatalListEntryError =  (inline caller) ACPI!NotifyObjectDestruction+2e3
fffff802`373d570b ACPI!RtlFailFast =  (inline caller) ACPI!NotifyObjectDestruction+2e3
fffff802`373d568a ACPI!GetSelfHandle =  (inline caller) ACPI!NotifyObjectDestruction+262
fffff802`373a584c ACPI!ReferenceObjectEx =  (inline caller) ACPI!PerformMutexDriverCallbacks+25784
fffff802`373a584c ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!PerformMutexDriverCallbacks+25784
fffff802`373a58c9 ACPI!GetSelfHandle =  (inline caller) ACPI!PerformMutexDriverCallbacks+25801
fffff802`373a58a4 ACPI!GetSelfHandle =  (inline caller) ACPI!PerformMutexDriverCallbacks+257dc
fffff802`3737af0c ACPI!MatchObjType =  (inline caller) ACPI!ValidateTarget+68
fffff802`3737af28 ACPI!FreeDataBuffs =  (inline caller) ACPI!ValidateTarget+84
fffff802`373d5c5d ACPI!CheckAndEnableDebugSpew =  (inline caller) ACPI!ConPrompt+15
fffff802`373d5c5d ACPI!KeGetCurrentIrql =  (inline caller) ACPI!ConPrompt+15
fffff802`373d5d77 ACPI!StringToUlongPtr =  (inline caller) ACPI!DebugExpr+ab
fffff802`373d5ed4 ACPI!StringToUlongPtr =  (inline caller) ACPI!DebugInPort+24
fffff802`373d5efd ACPI!InPort =  (inline caller) ACPI!DebugInPort+4d
fffff802`373d60ba ACPI!GetSelfHandle =  (inline caller) ACPI!DebugNotify+10a
fffff802`373d61a0 ACPI!StringToUlongPtr =  (inline caller) ACPI!DebugOutPort+20
fffff802`373d61e1 ACPI!OutPort =  (inline caller) ACPI!DebugOutPort+61
fffff802`373d6480 ACPI!GetSelfHandle =  (inline caller) ACPI!DebugRunMethod+1d0
fffff802`373d6641 ACPI!ReferenceObjectEx =  (inline caller) ACPI!FindObjSymbol+71
fffff802`373d6641 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!FindObjSymbol+71
fffff802`37399f8b ACPI!KeGetCurrentThread =  (inline caller) ACPI!LogSchedEvent+2b
fffff802`373d68ca ACPI!GetObjectFromHandle =  (inline caller) ACPI!RunMethodCallBack+a
fffff802`373d6919 ACPI!AMLIGetLastError =  (inline caller) ACPI!RunMethodCallBack+59
fffff802`373d6b29 ACPI!IsCommandInAMLIExtension =  (inline caller) ACPI!Debugger+81
fffff802`3739c38d ACPI!RtlStringValidateDestA =  (inline caller) ACPI!RtlStringCbPrintfA+11
fffff802`3739c3ac ACPI!RtlStringVPrintfWorkerA =  (inline caller) ACPI!RtlStringCbPrintfA+30
fffff802`37378a8b ACPI!RtlULongAdd =  (inline caller) ACPI!HeapAlloc+1b
fffff802`37378aac ACPI!RtlULongAdd =  (inline caller) ACPI!HeapAlloc+3c
fffff802`37378ab7 ACPI!AcquireMutex =  (inline caller) ACPI!HeapAlloc+47
fffff802`37378aea ACPI!HeapFindFirstFit =  (inline caller) ACPI!HeapAlloc+7a
fffff802`37378bc0 ACPI!RemoveEntryList =  (inline caller) ACPI!HeapAlloc+150
fffff802`37378b9d ACPI!HeapInsertFreeList =  (inline caller) ACPI!HeapAlloc+12d
fffff802`37378c19 ACPI!InsertTailList =  (inline caller) ACPI!HeapAlloc+1a9
fffff802`373af46d ACPI!RemoveEntryList =  (inline caller) ACPI!HeapAlloc+369fd
fffff802`373af492 ACPI!RemoveEntryList =  (inline caller) ACPI!HeapAlloc+36a22
fffff802`373af4bb ACPI!RemoveEntryList =  (inline caller) ACPI!HeapAlloc+36a4b
fffff802`373af4d9 ACPI!FatalListEntryError =  (inline caller) ACPI!HeapAlloc+36a69
fffff802`373af4d9 ACPI!RtlFailFast =  (inline caller) ACPI!HeapAlloc+36a69
fffff802`37378cb4 ACPI!NewLocalHeap =  (inline caller) ACPI!HeapAlloc+244
fffff802`37378cb4 ACPI!ExAllocateFromNPagedLookasideList =  (inline caller) ACPI!HeapAlloc+244
fffff802`37378ce7 ACPI!InitHeap =  (inline caller) ACPI!HeapAlloc+277
fffff802`37378d14 ACPI!InitializeListHead =  (inline caller) ACPI!HeapAlloc+2a4
fffff802`37378b49 ACPI!ReleaseMutex =  (inline caller) ACPI!HeapAlloc+d9
fffff802`37371fea ACPI!ReleaseMutex =  (inline caller) ACPI!HeapFree+ae
fffff802`37371f6d ACPI!HeapInsertFreeList =  (inline caller) ACPI!HeapFree+31
fffff802`37371f7d ACPI!InsertTailList =  (inline caller) ACPI!HeapFree+41
fffff802`37372037 ACPI!RemoveEntryList =  (inline caller) ACPI!HeapFree+fb
fffff802`3737206b ACPI!RemoveEntryList =  (inline caller) ACPI!HeapFree+12f
fffff802`37371fc9 ACPI!RemoveEntryList =  (inline caller) ACPI!HeapFree+8d
fffff802`3737208c ACPI!FatalListEntryError =  (inline caller) ACPI!HeapFree+150
fffff802`3737208c ACPI!RtlFailFast =  (inline caller) ACPI!HeapFree+150
fffff802`37371f50 ACPI!AcquireMutex =  (inline caller) ACPI!HeapFree+14
fffff802`37372bb5 ACPI!InsertTailList =  (inline caller) ACPI!HeapInsertFreeList+25
fffff802`37372c65 ACPI!RemoveEntryList =  (inline caller) ACPI!HeapInsertFreeList+d5
fffff802`37372c35 ACPI!RemoveEntryList =  (inline caller) ACPI!HeapInsertFreeList+a5
fffff802`37372c01 ACPI!RemoveEntryList =  (inline caller) ACPI!HeapInsertFreeList+71
fffff802`37372c83 ACPI!FatalListEntryError =  (inline caller) ACPI!HeapInsertFreeList+f3
fffff802`37372c83 ACPI!RtlFailFast =  (inline caller) ACPI!HeapInsertFreeList+f3
fffff802`37394056 ACPI!InitHeap =  (inline caller) ACPI!NewGlobalHeap+46
fffff802`3739407f ACPI!InitializeListHead =  (inline caller) ACPI!NewGlobalHeap+6f
fffff802`3737669a ACPI!InsertTailList =  (inline caller) ACPI!CreateNameSpaceObject+33a
fffff802`37376681 ACPI!ReferenceObjectEx =  (inline caller) ACPI!CreateNameSpaceObject+321
fffff802`37376681 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!CreateNameSpaceObject+321
fffff802`373764d9 ACPI!NewNameSpaceObject =  (inline caller) ACPI!CreateNameSpaceObject+179
fffff802`37376512 ACPI!InitializeListHead =  (inline caller) ACPI!CreateNameSpaceObject+1b2
fffff802`373765a9 ACPI!InsertTailList =  (inline caller) ACPI!CreateNameSpaceObject+249
fffff802`373ae24c ACPI!FatalListEntryError =  (inline caller) ACPI!CreateNameSpaceObject+37eec
fffff802`373ae24c ACPI!RtlFailFast =  (inline caller) ACPI!CreateNameSpaceObject+37eec
fffff802`37376584 ACPI!InsertOwnerObjList =  (inline caller) ACPI!CreateNameSpaceObject+224
fffff802`37376576 ACPI!ReferenceObjectEx =  (inline caller) ACPI!CreateNameSpaceObject+216
fffff802`37376576 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!CreateNameSpaceObject+216
fffff802`373739e8 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!DereferenceObjectEx+4
fffff802`373736ce ACPI!IsListEmpty =  (inline caller) ACPI!FreeNameSpaceObjects+3e
fffff802`3737372a ACPI!RemoveEntryList =  (inline caller) ACPI!FreeNameSpaceObjects+9a
fffff802`373737be ACPI!HeapFree =  (inline caller) ACPI!FreeNameSpaceObjects+12e
fffff802`373738ac ACPI!ReleaseMutex =  (inline caller) ACPI!FreeNameSpaceObjects+21c
fffff802`373737ef ACPI!HeapInsertFreeList =  (inline caller) ACPI!FreeNameSpaceObjects+15f
fffff802`37373809 ACPI!InsertTailList =  (inline caller) ACPI!FreeNameSpaceObjects+179
fffff802`37373989 ACPI!RemoveEntryList =  (inline caller) ACPI!FreeNameSpaceObjects+2f9
fffff802`37373853 ACPI!RemoveEntryList =  (inline caller) ACPI!FreeNameSpaceObjects+1c3
fffff802`3737388b ACPI!RemoveEntryList =  (inline caller) ACPI!FreeNameSpaceObjects+1fb
fffff802`373739d6 ACPI!FatalListEntryError =  (inline caller) ACPI!FreeNameSpaceObjects+346
fffff802`373739d6 ACPI!RtlFailFast =  (inline caller) ACPI!FreeNameSpaceObjects+346
fffff802`373737c8 ACPI!AcquireMutex =  (inline caller) ACPI!FreeNameSpaceObjects+138
fffff802`37373791 ACPI!FreeDataBuffs =  (inline caller) ACPI!FreeNameSpaceObjects+101
fffff802`37373791 ACPI!FreeData =  (inline caller) ACPI!FreeNameSpaceObjects+101
fffff802`37378e3a ACPI!IsListEmpty =  (inline caller) ACPI!GetNameSpaceObjectNoLock+9a
fffff802`37378efb ACPI!ReferenceObjectEx =  (inline caller) ACPI!GetNameSpaceObjectNoLock+15b
fffff802`37378efb ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!GetNameSpaceObjectNoLock+15b
fffff802`373934ed ACPI!ValidateTable =  (inline caller) ACPI!LoadDDB+21
fffff802`373b2589 ACPI!NameSegString =  (inline caller) ACPI!LoadDDB+1f0bd
fffff802`3739bb1a ACPI!InitializeListHead =  (inline caller) ACPI!NewNameSpaceObject+42
fffff802`3739277a ACPI!GetSelfHandle =  (inline caller) ACPI!Device+5a
fffff802`373d7279 ACPI!InitializeListHead =  (inline caller) ACPI!InitEvent+99
fffff802`37380234 ACPI!InitializeListHead =  (inline caller) ACPI!InitMutex+84
fffff802`37398934 ACPI!InitializeListHead =  (inline caller) ACPI!Method+174
fffff802`3739885b ACPI!AddObjSymbol =  (inline caller) ACPI!Method+9b
fffff802`37399d1d ACPI!InitializeListHead =  (inline caller) ACPI!OpRegion+dd
fffff802`37399d40 ACPI!GetSelfHandle =  (inline caller) ACPI!OpRegion+100
fffff802`37393a28 ACPI!GetSelfHandle =  (inline caller) ACPI!PowerRes+d8
fffff802`3739319e ACPI!GetSelfHandle =  (inline caller) ACPI!Processor+ce
fffff802`37394f9a ACPI!GetSelfHandle =  (inline caller) ACPI!ThermalZone+5a
fffff802`3739873e ACPI!IsListEmpty =  (inline caller) ACPI!DispatchCtxtQueue+3e
fffff802`3739871f ACPI!IsListEmpty =  (inline caller) ACPI!DispatchCtxtQueue+1f
fffff802`37398706 ACPI!AcquireMutex =  (inline caller) ACPI!DispatchCtxtQueue+6
fffff802`37398757 ACPI!IsListEmpty =  (inline caller) ACPI!DispatchCtxtQueue+57
fffff802`37398793 ACPI!ReleaseMutex =  (inline caller) ACPI!DispatchCtxtQueue+93
fffff802`37398781 ACPI!InitializeListHead =  (inline caller) ACPI!DispatchCtxtQueue+81
fffff802`37398763 ACPI!RemoveHeadList =  (inline caller) ACPI!DispatchCtxtQueue+63
fffff802`373987b3 ACPI!FatalListEntryError =  (inline caller) ACPI!DispatchCtxtQueue+b3
fffff802`373987b3 ACPI!RtlFailFast =  (inline caller) ACPI!DispatchCtxtQueue+b3
fffff802`37374421 ACPI!LogSchedEvent =  (inline caller) ACPI!InsertReadyQueue+41
fffff802`3737442a ACPI!LogEvent =  (inline caller) ACPI!InsertReadyQueue+4a
fffff802`37374421 ACPI!KeGetCurrentThread =  (inline caller) ACPI!InsertReadyQueue+41
fffff802`37374951 ACPI!AcquireMutex =  (inline caller) ACPI!InsertReadyQueue+571
fffff802`37374819 ACPI!AsyncCallBack =  (inline caller) ACPI!InsertReadyQueue+439
fffff802`37374931 ACPI!EvalMethodComplete =  (inline caller) ACPI!InsertReadyQueue+551
fffff802`37374848 ACPI!LogSchedEvent =  (inline caller) ACPI!InsertReadyQueue+468
fffff802`37374851 ACPI!LogEvent =  (inline caller) ACPI!InsertReadyQueue+471
fffff802`37374848 ACPI!KeGetCurrentThread =  (inline caller) ACPI!InsertReadyQueue+468
fffff802`373747ff ACPI!ReleaseMutex =  (inline caller) ACPI!InsertReadyQueue+41f
fffff802`373ad5cf ACPI!KeGetCurrentThread =  (inline caller) ACPI!InsertReadyQueue+391ef
fffff802`37374560 ACPI!IsListEmpty =  (inline caller) ACPI!InsertReadyQueue+180
fffff802`37374685 ACPI!IsListEmpty =  (inline caller) ACPI!InsertReadyQueue+2a5
fffff802`37374593 ACPI!LogSchedEvent =  (inline caller) ACPI!InsertReadyQueue+1b3
fffff802`3737459c ACPI!LogEvent =  (inline caller) ACPI!InsertReadyQueue+1bc
fffff802`37374593 ACPI!KeGetCurrentThread =  (inline caller) ACPI!InsertReadyQueue+1b3
fffff802`3737497e ACPI!LogSchedEvent =  (inline caller) ACPI!InsertReadyQueue+59e
fffff802`3737497e ACPI!KeGetCurrentThread =  (inline caller) ACPI!InsertReadyQueue+59e
fffff802`373746c9 ACPI!LogSchedEvent =  (inline caller) ACPI!InsertReadyQueue+2e9
fffff802`373746d2 ACPI!LogEvent =  (inline caller) ACPI!InsertReadyQueue+2f2
fffff802`373746c9 ACPI!KeGetCurrentThread =  (inline caller) ACPI!InsertReadyQueue+2e9
fffff802`373747bd ACPI!InsertTailList =  (inline caller) ACPI!InsertReadyQueue+3dd
fffff802`373ad676 ACPI!InsertTailList =  (inline caller) ACPI!InsertReadyQueue+39296
fffff802`373ad694 ACPI!FatalListEntryError =  (inline caller) ACPI!InsertReadyQueue+392b4
fffff802`373ad694 ACPI!RtlFailFast =  (inline caller) ACPI!InsertReadyQueue+392b4
fffff802`37393cac ACPI!KeGetCurrentIrql =  (inline caller) ACPI!RestartContext+11c
fffff802`37393bbb ACPI!LogSchedEvent =  (inline caller) ACPI!RestartContext+2b
fffff802`37393bc4 ACPI!LogEvent =  (inline caller) ACPI!RestartContext+34
fffff802`37393bbb ACPI!KeGetCurrentThread =  (inline caller) ACPI!RestartContext+2b
fffff802`37393cbf ACPI!AcquireMutex =  (inline caller) ACPI!RestartContext+12f
fffff802`37393ce7 ACPI!ReleaseMutex =  (inline caller) ACPI!RestartContext+157
fffff802`373b26d9 ACPI!AcquireMutex =  (inline caller) ACPI!RestartContext+1eb49
fffff802`373b2711 ACPI!ReleaseMutex =  (inline caller) ACPI!RestartContext+1eb81
fffff802`37393a9b ACPI!LogSchedEvent =  (inline caller) ACPI!RestartCtxtCallback+b
fffff802`37393ab4 ACPI!LogEvent =  (inline caller) ACPI!RestartCtxtCallback+24
fffff802`37393aab ACPI!KeGetCurrentThread =  (inline caller) ACPI!RestartCtxtCallback+1b
fffff802`3739a315 ACPI!ReleaseMutex =  (inline caller) ACPI!RestartCtxtPassive+35
fffff802`3739a2e9 ACPI!AcquireMutex =  (inline caller) ACPI!RestartCtxtPassive+9
fffff802`373d72ac ACPI!PopFrame =  (inline caller) ACPI!ProcessSleep+c
fffff802`373d7326 ACPI!IsListEmpty =  (inline caller) ACPI!SleepQueueDpc+46
fffff802`373d72f1 ACPI!AcquireMutex =  (inline caller) ACPI!SleepQueueDpc+11
fffff802`373d72e9 ACPI!InitializeListHead =  (inline caller) ACPI!SleepQueueDpc+9
fffff802`373d73b7 ACPI!IsListEmpty =  (inline caller) ACPI!SleepQueueDpc+d7
fffff802`373d739e ACPI!ReleaseMutex =  (inline caller) ACPI!SleepQueueDpc+be
fffff802`373d7359 ACPI!InsertTailList =  (inline caller) ACPI!SleepQueueDpc+79
fffff802`373d733b ACPI!RemoveHeadList =  (inline caller) ACPI!SleepQueueDpc+5b
fffff802`373d73c4 ACPI!RemoveHeadList =  (inline caller) ACPI!SleepQueueDpc+e4
fffff802`373d73f9 ACPI!FatalListEntryError =  (inline caller) ACPI!SleepQueueDpc+119
fffff802`373d73f9 ACPI!RtlFailFast =  (inline caller) ACPI!SleepQueueDpc+119
fffff802`373d7453 ACPI!AcquireMutex =  (inline caller) ACPI!SleepQueueRequest+43
fffff802`373d74b7 ACPI!InsertHeadList =  (inline caller) ACPI!SleepQueueRequest+a7
fffff802`373d7522 ACPI!ReleaseMutex =  (inline caller) ACPI!SleepQueueRequest+112
fffff802`373d74d8 ACPI!InsertHeadList =  (inline caller) ACPI!SleepQueueRequest+c8
fffff802`373d74e9 ACPI!FatalListEntryError =  (inline caller) ACPI!SleepQueueRequest+d9
fffff802`373d74e9 ACPI!RtlFailFast =  (inline caller) ACPI!SleepQueueRequest+d9
fffff802`37379e5f ACPI!NeedGlobalLock =  (inline caller) ACPI!AccFieldUnit+16f
fffff802`37379ee4 ACPI!AcquireGL =  (inline caller) ACPI!AccFieldUnit+1f4
fffff802`37379f45 ACPI!ReleaseGL =  (inline caller) ACPI!AccFieldUnit+255
fffff802`37379d68 ACPI!PopFrame =  (inline caller) ACPI!AccFieldUnit+78
fffff802`37379d6f ACPI!HeapFree =  (inline caller) ACPI!AccFieldUnit+7f
fffff802`37379e23 ACPI!ReleaseMutex =  (inline caller) ACPI!AccFieldUnit+133
fffff802`37379da1 ACPI!HeapInsertFreeList =  (inline caller) ACPI!AccFieldUnit+b1
fffff802`37379db2 ACPI!InsertTailList =  (inline caller) ACPI!AccFieldUnit+c2
fffff802`37379fce ACPI!RemoveEntryList =  (inline caller) ACPI!AccFieldUnit+2de
fffff802`373aff79 ACPI!RemoveEntryList =  (inline caller) ACPI!AccFieldUnit+36289
fffff802`37379e02 ACPI!RemoveEntryList =  (inline caller) ACPI!AccFieldUnit+112
fffff802`3737a024 ACPI!FatalListEntryError =  (inline caller) ACPI!AccFieldUnit+334
fffff802`3737a024 ACPI!RtlFailFast =  (inline caller) ACPI!AccFieldUnit+334
fffff802`37379d6f ACPI!AcquireMutex =  (inline caller) ACPI!AccFieldUnit+7f
fffff802`37371b1a ACPI!ReadSystemMem =  (inline caller) ACPI!AccessBaseField+1aa
fffff802`37371cc6 ACPI!READ_REGISTER_ULONG =  (inline caller) ACPI!AccessBaseField+356
fffff802`37371cb4 ACPI!READ_REGISTER_USHORT =  (inline caller) ACPI!AccessBaseField+344
fffff802`37371b5e ACPI!READ_REGISTER_UCHAR =  (inline caller) ACPI!AccessBaseField+1ee
fffff802`37371a4e ACPI!FindRSAccess =  (inline caller) ACPI!AccessBaseField+de
fffff802`37371bac ACPI!WriteSystemIO =  (inline caller) ACPI!AccessBaseField+23c
fffff802`373a2bec ACPI!WRITE_PORT_ULONG =  (inline caller) ACPI!AccessBaseField+3127c
fffff802`373a2bfe ACPI!WRITE_PORT_USHORT =  (inline caller) ACPI!AccessBaseField+3128e
fffff802`37371bde ACPI!WRITE_PORT_UCHAR =  (inline caller) ACPI!AccessBaseField+26e
fffff802`37371ab0 ACPI!GetSelfHandle =  (inline caller) ACPI!AccessBaseField+140
fffff802`373b3d44 ACPI!ACPIGetRootDeviceObject =  (inline caller) ACPI!CheckSystemIOAddressValidity+1ca14
fffff802`3739417e ACPI!PopFrame =  (inline caller) ACPI!PreserveWriteObj+6e
fffff802`373949e7 ACPI!PushFrame =  (inline caller) ACPI!PushAccFieldObj+37
fffff802`373714eb ACPI!WriteSystemMem =  (inline caller) ACPI!ReadFieldObj+eb
fffff802`37371595 ACPI!WRITE_REGISTER_UCHAR =  (inline caller) ACPI!ReadFieldObj+195
fffff802`37371582 ACPI!READ_REGISTER_UCHAR =  (inline caller) ACPI!ReadFieldObj+182
fffff802`373a2991 ACPI!WRITE_REGISTER_USHORT =  (inline caller) ACPI!ReadFieldObj+31591
fffff802`373a297e ACPI!READ_REGISTER_USHORT =  (inline caller) ACPI!ReadFieldObj+3157e
fffff802`373a296b ACPI!WRITE_REGISTER_ULONG =  (inline caller) ACPI!ReadFieldObj+3156b
fffff802`373a2959 ACPI!READ_REGISTER_ULONG =  (inline caller) ACPI!ReadFieldObj+31559
fffff802`373715f8 ACPI!WriteSystemMem =  (inline caller) ACPI!ReadFieldObj+1f8
fffff802`37371687 ACPI!WRITE_REGISTER_UCHAR =  (inline caller) ACPI!ReadFieldObj+287
fffff802`37371947 ACPI!READ_REGISTER_UCHAR =  (inline caller) ACPI!ReadFieldObj+547
fffff802`3737193d ACPI!WRITE_REGISTER_USHORT =  (inline caller) ACPI!ReadFieldObj+53d
fffff802`3737195e ACPI!READ_REGISTER_USHORT =  (inline caller) ACPI!ReadFieldObj+55e
fffff802`37371887 ACPI!WRITE_REGISTER_ULONG =  (inline caller) ACPI!ReadFieldObj+487
fffff802`37371875 ACPI!READ_REGISTER_ULONG =  (inline caller) ACPI!ReadFieldObj+475
fffff802`37371739 ACPI!PopFrame =  (inline caller) ACPI!ReadFieldObj+339
fffff802`37371746 ACPI!HeapFree =  (inline caller) ACPI!ReadFieldObj+346
fffff802`373717f7 ACPI!ReleaseMutex =  (inline caller) ACPI!ReadFieldObj+3f7
fffff802`37371775 ACPI!HeapInsertFreeList =  (inline caller) ACPI!ReadFieldObj+375
fffff802`37371786 ACPI!InsertTailList =  (inline caller) ACPI!ReadFieldObj+386
fffff802`373718e4 ACPI!RemoveEntryList =  (inline caller) ACPI!ReadFieldObj+4e4
fffff802`373a2acf ACPI!RemoveEntryList =  (inline caller) ACPI!ReadFieldObj+316cf
fffff802`373717d6 ACPI!RemoveEntryList =  (inline caller) ACPI!ReadFieldObj+3d6
fffff802`373a2af0 ACPI!FatalListEntryError =  (inline caller) ACPI!ReadFieldObj+316f0
fffff802`373a2af0 ACPI!RtlFailFast =  (inline caller) ACPI!ReadFieldObj+316f0
fffff802`37371746 ACPI!AcquireMutex =  (inline caller) ACPI!ReadFieldObj+346
fffff802`3737b11c ACPI!GetBaseData =  (inline caller) ACPI!ReadObject+1c
fffff802`3737b148 ACPI!CopyObjData =  (inline caller) ACPI!ReadObject+48
fffff802`373b3c88 ACPI!READ_PORT_ULONG =  (inline caller) ACPI!ReadSystemIO+1c9c0
fffff802`373b3c91 ACPI!READ_PORT_USHORT =  (inline caller) ACPI!ReadSystemIO+1c9c9
fffff802`37397300 ACPI!READ_PORT_UCHAR =  (inline caller) ACPI!ReadSystemIO+38
fffff802`3739498d ACPI!READ_REGISTER_ULONG =  (inline caller) ACPI!ReadSystemMem+71
fffff802`373949a5 ACPI!READ_REGISTER_USHORT =  (inline caller) ACPI!ReadSystemMem+89
fffff802`37394968 ACPI!READ_REGISTER_UCHAR =  (inline caller) ACPI!ReadSystemMem+4c
fffff802`37399878 ACPI!GetSelfHandle =  (inline caller) ACPI!WriteCookAccess+1d8
fffff802`37399798 ACPI!GetSelfHandle =  (inline caller) ACPI!WriteCookAccess+f8
fffff802`37399737 ACPI!PopFrame =  (inline caller) ACPI!WriteCookAccess+97
fffff802`3739292d ACPI!SupportsOnlyRawAccess =  (inline caller) ACPI!WriteField+5d
fffff802`37392946 ACPI!FindRSAccess =  (inline caller) ACPI!WriteField+76
fffff802`37392972 ACPI!PushFrame =  (inline caller) ACPI!WriteField+a2
fffff802`37397177 ACPI!PopFrame =  (inline caller) ACPI!WriteFieldLoop+187
fffff802`3739717e ACPI!HeapFree =  (inline caller) ACPI!WriteFieldLoop+18e
fffff802`3739722c ACPI!ReleaseMutex =  (inline caller) ACPI!WriteFieldLoop+23c
fffff802`373971ae ACPI!HeapInsertFreeList =  (inline caller) ACPI!WriteFieldLoop+1be
fffff802`373971bf ACPI!InsertTailList =  (inline caller) ACPI!WriteFieldLoop+1cf
fffff802`3739729c ACPI!RemoveEntryList =  (inline caller) ACPI!WriteFieldLoop+2ac
fffff802`373b3c51 ACPI!RemoveEntryList =  (inline caller) ACPI!WriteFieldLoop+1cc61
fffff802`3739720b ACPI!RemoveEntryList =  (inline caller) ACPI!WriteFieldLoop+21b
fffff802`373972ba ACPI!FatalListEntryError =  (inline caller) ACPI!WriteFieldLoop+2ca
fffff802`373972ba ACPI!RtlFailFast =  (inline caller) ACPI!WriteFieldLoop+2ca
fffff802`3739718f ACPI!AcquireMutex =  (inline caller) ACPI!WriteFieldLoop+19f
fffff802`37397032 ACPI!PushAccFieldObj =  (inline caller) ACPI!WriteFieldLoop+42
fffff802`37397065 ACPI!PushFrame =  (inline caller) ACPI!WriteFieldLoop+75
fffff802`373943ac ACPI!ReadSystemMem =  (inline caller) ACPI!WriteFieldObj+8c
fffff802`373945ad ACPI!READ_REGISTER_ULONG =  (inline caller) ACPI!WriteFieldObj+28d
fffff802`37394654 ACPI!READ_REGISTER_USHORT =  (inline caller) ACPI!WriteFieldObj+334
fffff802`373943ee ACPI!READ_REGISTER_UCHAR =  (inline caller) ACPI!WriteFieldObj+ce
fffff802`3739447a ACPI!PopFrame =  (inline caller) ACPI!WriteFieldObj+15a
fffff802`37394484 ACPI!HeapFree =  (inline caller) ACPI!WriteFieldObj+164
fffff802`37394535 ACPI!ReleaseMutex =  (inline caller) ACPI!WriteFieldObj+215
fffff802`373944b3 ACPI!HeapInsertFreeList =  (inline caller) ACPI!WriteFieldObj+193
fffff802`373944c4 ACPI!InsertTailList =  (inline caller) ACPI!WriteFieldObj+1a4
fffff802`3739460f ACPI!RemoveEntryList =  (inline caller) ACPI!WriteFieldObj+2ef
fffff802`373b2911 ACPI!RemoveEntryList =  (inline caller) ACPI!WriteFieldObj+1e5f1
fffff802`37394514 ACPI!RemoveEntryList =  (inline caller) ACPI!WriteFieldObj+1f4
fffff802`373b2932 ACPI!FatalListEntryError =  (inline caller) ACPI!WriteFieldObj+1e612
fffff802`373b2932 ACPI!RtlFailFast =  (inline caller) ACPI!WriteFieldObj+1e612
fffff802`37394484 ACPI!AcquireMutex =  (inline caller) ACPI!WriteFieldObj+164
fffff802`3737a8c5 ACPI!GetBaseData =  (inline caller) ACPI!WriteObject+25
fffff802`3737a903 ACPI!PushFrame =  (inline caller) ACPI!WriteObject+63
fffff802`3737a97b ACPI!IsCompatableDSDTRevision =  (inline caller) ACPI!WriteObject+db
fffff802`3737a9b7 ACPI!CopyObjBuffer =  (inline caller) ACPI!WriteObject+117
fffff802`373d7eb7 ACPI!WRITE_PORT_ULONG =  (inline caller) ACPI!WriteSystemIO+3b
fffff802`373d7ec2 ACPI!WRITE_PORT_USHORT =  (inline caller) ACPI!WriteSystemIO+46
fffff802`373d7ecd ACPI!WRITE_PORT_UCHAR =  (inline caller) ACPI!WriteSystemIO+51
fffff802`3739487d ACPI!WRITE_REGISTER_UCHAR =  (inline caller) ACPI!WriteSystemMem+a9
fffff802`373948c7 ACPI!READ_REGISTER_UCHAR =  (inline caller) ACPI!WriteSystemMem+f3
fffff802`373948de ACPI!WRITE_REGISTER_USHORT =  (inline caller) ACPI!WriteSystemMem+10a
fffff802`37394911 ACPI!READ_REGISTER_USHORT =  (inline caller) ACPI!WriteSystemMem+13d
fffff802`373948c3 ACPI!WRITE_REGISTER_ULONG =  (inline caller) ACPI!WriteSystemMem+ef
fffff802`3739490d ACPI!READ_REGISTER_ULONG =  (inline caller) ACPI!WriteSystemMem+139
fffff802`373d7f50 ACPI!ReleaseMutex =  (inline caller) ACPI!FreeContext+6c
fffff802`373d7f5b ACPI!InitializeListHead =  (inline caller) ACPI!FreeContext+77
fffff802`373d7f33 ACPI!RemoveEntryList =  (inline caller) ACPI!FreeContext+4f
fffff802`373d8083 ACPI!FatalListEntryError =  (inline caller) ACPI!FreeContext+19f
fffff802`373d8083 ACPI!RtlFailFast =  (inline caller) ACPI!FreeContext+19f
fffff802`373d7f0e ACPI!RemoveEntryList =  (inline caller) ACPI!FreeContext+2a
fffff802`373d7ef1 ACPI!AcquireMutex =  (inline caller) ACPI!FreeContext+d
fffff802`37393d4c ACPI!KeGetCurrentThread =  (inline caller) ACPI!GetThreadCurrentContext+0
fffff802`37393f72 ACPI!InitializeListHead =  (inline caller) ACPI!InitContext+ee
fffff802`37393f67 ACPI!InitializeListHead =  (inline caller) ACPI!InitContext+e3
fffff802`37393f5c ACPI!InitializeListHead =  (inline caller) ACPI!InitContext+d8
fffff802`37393f3f ACPI!ExInitializeWorkItem =  (inline caller) ACPI!InitContext+bb
fffff802`37393ef9 ACPI!InitHeap =  (inline caller) ACPI!InitContext+75
fffff802`37393f38 ACPI!InitializeListHead =  (inline caller) ACPI!InitContext+b4
fffff802`373d809d ACPI!IsListEmpty =  (inline caller) ACPI!InvokePauseCallbacks+d
fffff802`373d80a9 ACPI!RemoveHeadList =  (inline caller) ACPI!InvokePauseCallbacks+19
fffff802`373d80d3 ACPI!FatalListEntryError =  (inline caller) ACPI!InvokePauseCallbacks+43
fffff802`373d80d3 ACPI!RtlFailFast =  (inline caller) ACPI!InvokePauseCallbacks+43
fffff802`37393e4e ACPI!ReleaseMutex =  (inline caller) ACPI!NewContext+c6
fffff802`37393e20 ACPI!InsertTailList =  (inline caller) ACPI!NewContext+98
fffff802`373b27a1 ACPI!FatalListEntryError =  (inline caller) ACPI!NewContext+1ea19
fffff802`373b27a1 ACPI!RtlFailFast =  (inline caller) ACPI!NewContext+1ea19
fffff802`37393e0d ACPI!AcquireMutex =  (inline caller) ACPI!NewContext+85
fffff802`3739178e ACPI!PushFrame =  (inline caller) ACPI!PushCall+22
fffff802`373917e7 ACPI!ReferenceObjectEx =  (inline caller) ACPI!PushCall+7b
fffff802`373917e7 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!PushCall+7b
fffff802`373927fa ACPI!PushFrame =  (inline caller) ACPI!PushScope+22
fffff802`3739285c ACPI!ReferenceObjectEx =  (inline caller) ACPI!PushScope+84
fffff802`3739285c ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!PushScope+84
fffff802`37398cd5 ACPI!PushFrame =  (inline caller) ACPI!PushTerm+21
fffff802`37374a45 ACPI!SetThreadCurrentContext =  (inline caller) ACPI!RunContext+35
fffff802`37374a4f ACPI!IsListEmpty =  (inline caller) ACPI!RunContext+3f
fffff802`37374a58 ACPI!InsertTailList =  (inline caller) ACPI!RunContext+48
fffff802`37374a85 ACPI!KeGetCurrentThread =  (inline caller) ACPI!RunContext+75
fffff802`37374ab3 ACPI!LogSchedEvent =  (inline caller) ACPI!RunContext+a3
fffff802`37374abc ACPI!LogEvent =  (inline caller) ACPI!RunContext+ac
fffff802`37374ab3 ACPI!KeGetCurrentThread =  (inline caller) ACPI!RunContext+a3
fffff802`37374bd4 ACPI!IsStackEmpty =  (inline caller) ACPI!RunContext+1c4
fffff802`37374bba ACPI!ReleaseMutex =  (inline caller) ACPI!RunContext+1aa
fffff802`37374c10 ACPI!AcquireMutex =  (inline caller) ACPI!RunContext+200
fffff802`37374c5b ACPI!ReleaseMutex =  (inline caller) ACPI!RunContext+24b
fffff802`37374c9d ACPI!DupObjData =  (inline caller) ACPI!RunContext+28d
fffff802`373ad74b ACPI!ReferenceObjectEx =  (inline caller) ACPI!RunContext+38d3b
fffff802`373ad74b ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!RunContext+38d3b
fffff802`373ad731 ACPI!ReferenceObjectEx =  (inline caller) ACPI!RunContext+38d21
fffff802`373ad731 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!RunContext+38d21
fffff802`373ad77e ACPI!ReferenceObjectEx =  (inline caller) ACPI!RunContext+38d6e
fffff802`373ad77e ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!RunContext+38d6e
fffff802`373ad765 ACPI!ReferenceObjectEx =  (inline caller) ACPI!RunContext+38d55
fffff802`373ad765 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!RunContext+38d55
fffff802`373750eb ACPI!AsyncCallBack =  (inline caller) ACPI!RunContext+6db
fffff802`373753b5 ACPI!EvalMethodComplete =  (inline caller) ACPI!RunContext+9a5
fffff802`3737522e ACPI!GetSelfHandle =  (inline caller) ACPI!RunContext+81e
fffff802`37375136 ACPI!LogSchedEvent =  (inline caller) ACPI!RunContext+726
fffff802`3737513f ACPI!LogEvent =  (inline caller) ACPI!RunContext+72f
fffff802`37375136 ACPI!KeGetCurrentThread =  (inline caller) ACPI!RunContext+726
fffff802`37374ce4 ACPI!IsListEmpty =  (inline caller) ACPI!RunContext+2d4
fffff802`37374d10 ACPI!UnsetThreadCurrentContext =  (inline caller) ACPI!RunContext+300
fffff802`37374d38 ACPI!InitializeListHead =  (inline caller) ACPI!RunContext+328
fffff802`37374d17 ACPI!RemoveEntryList =  (inline caller) ACPI!RunContext+307
fffff802`37374cf0 ACPI!AcquireMutex =  (inline caller) ACPI!RunContext+2e0
fffff802`373ad7dc ACPI!RemoveHeadList =  (inline caller) ACPI!RunContext+38dcc
fffff802`373ad9e2 ACPI!IsListEmpty =  (inline caller) ACPI!RunContext+38fd2
fffff802`37374d4f ACPI!FreeContext =  (inline caller) ACPI!RunContext+33f
fffff802`37374dd3 ACPI!FreeDataBuffs =  (inline caller) ACPI!RunContext+3c3
fffff802`37374dda ACPI!FreeData =  (inline caller) ACPI!RunContext+3ca
fffff802`37374dae ACPI!ReleaseMutex =  (inline caller) ACPI!RunContext+39e
fffff802`37374db9 ACPI!InitializeListHead =  (inline caller) ACPI!RunContext+3a9
fffff802`37374d91 ACPI!RemoveEntryList =  (inline caller) ACPI!RunContext+381
fffff802`373ad9db ACPI!FatalListEntryError =  (inline caller) ACPI!RunContext+38fcb
fffff802`373ad9db ACPI!RtlFailFast =  (inline caller) ACPI!RunContext+38fcb
fffff802`37374d6c ACPI!RemoveEntryList =  (inline caller) ACPI!RunContext+35c
fffff802`37374d4f ACPI!AcquireMutex =  (inline caller) ACPI!RunContext+33f
fffff802`37374e64 ACPI!AcpiDiagTraceRecordAmlEvaluationStatistics =  (inline caller) ACPI!RunContext+454
fffff802`373ad918 ACPI!EventDataDescCreate =  (inline caller) ACPI!RunContext+38f08
fffff802`373ad8e5 ACPI!_tlgCreate2Binary =  (inline caller) ACPI!RunContext+38ed5
fffff802`373ad8fc ACPI!EventDataDescCreate =  (inline caller) ACPI!RunContext+38eec
fffff802`373ad8e5 ACPI!EventDataDescCreate =  (inline caller) ACPI!RunContext+38ed5
fffff802`37374e33 ACPI!AcpiDiagTraceAmlEvaluation =  (inline caller) ACPI!RunContext+423
fffff802`37374e33 ACPI!AcpiDiagTraceIsAmlTracingEnabled =  (inline caller) ACPI!RunContext+423
fffff802`373ad872 ACPI!EventDataDescCreate =  (inline caller) ACPI!RunContext+38e62
fffff802`373ad869 ACPI!EventDataDescCreate =  (inline caller) ACPI!RunContext+38e59
fffff802`373ad85e ACPI!EventDataDescCreate =  (inline caller) ACPI!RunContext+38e4e
fffff802`373ad827 ACPI!EventDataDescCreate =  (inline caller) ACPI!RunContext+38e17
fffff802`37374ea6 ACPI!AmliDisableWatchdog =  (inline caller) ACPI!RunContext+496
fffff802`37374f39 ACPI!DereferenceObjectEx =  (inline caller) ACPI!RunContext+529
fffff802`37374f39 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!RunContext+529
fffff802`37374f66 ACPI!DereferenceObjectEx =  (inline caller) ACPI!RunContext+556
fffff802`37374f66 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!RunContext+556
fffff802`37374f88 ACPI!ExFreeToNPagedLookasideList =  (inline caller) ACPI!RunContext+578
fffff802`37375284 ACPI!ExFreeToNPagedLookasideList =  (inline caller) ACPI!RunContext+874
fffff802`373ada02 ACPI!IsListEmpty =  (inline caller) ACPI!RunContext+38ff2
fffff802`37374fd2 ACPI!LogSchedEvent =  (inline caller) ACPI!RunContext+5c2
fffff802`37374fdd ACPI!LogEvent =  (inline caller) ACPI!RunContext+5cd
fffff802`37374fd2 ACPI!KeGetCurrentThread =  (inline caller) ACPI!RunContext+5c2
fffff802`373d81be ACPI!EvalMethodComplete =  (inline caller) ACPI!AsyncCallBack+76
fffff802`373d8209 ACPI!GetSelfHandle =  (inline caller) ACPI!AsyncCallBack+c1
fffff802`373755de ACPI!NewContext =  (inline caller) ACPI!AsyncEvalObject+10e
fffff802`373755de ACPI!ExAllocateFromNPagedLookasideList =  (inline caller) ACPI!AsyncEvalObject+10e
fffff802`3737586e ACPI!ReleaseMutex =  (inline caller) ACPI!AsyncEvalObject+39e
fffff802`37375849 ACPI!InsertTailList =  (inline caller) ACPI!AsyncEvalObject+379
fffff802`37375836 ACPI!AcquireMutex =  (inline caller) ACPI!AsyncEvalObject+366
fffff802`3737566a ACPI!InitContext =  (inline caller) ACPI!AsyncEvalObject+19a
fffff802`373757b8 ACPI!InitializeListHead =  (inline caller) ACPI!AsyncEvalObject+2e8
fffff802`373757a2 ACPI!InitializeListHead =  (inline caller) ACPI!AsyncEvalObject+2d2
fffff802`37375796 ACPI!InitializeListHead =  (inline caller) ACPI!AsyncEvalObject+2c6
fffff802`37375764 ACPI!ExInitializeWorkItem =  (inline caller) ACPI!AsyncEvalObject+294
fffff802`3737573e ACPI!InitHeap =  (inline caller) ACPI!AsyncEvalObject+26e
fffff802`37375787 ACPI!InitializeListHead =  (inline caller) ACPI!AsyncEvalObject+2b7
fffff802`37375513 ACPI!LogSchedEvent =  (inline caller) ACPI!AsyncEvalObject+43
fffff802`3737551c ACPI!LogEvent =  (inline caller) ACPI!AsyncEvalObject+4c
fffff802`37375513 ACPI!KeGetCurrentThread =  (inline caller) ACPI!AsyncEvalObject+43
fffff802`3737550f ACPI!KeGetCurrentIrql =  (inline caller) ACPI!AsyncEvalObject+3f
fffff802`373758c5 ACPI!ReferenceObjectEx =  (inline caller) ACPI!AsyncEvalObject+3f5
fffff802`373758c5 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!AsyncEvalObject+3f5
fffff802`373758b2 ACPI!ReferenceObjectEx =  (inline caller) ACPI!AsyncEvalObject+3e2
fffff802`373758b2 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!AsyncEvalObject+3e2
fffff802`37375be2 ACPI!ConvertMethodNameToUnicode =  (inline caller) ACPI!AsyncEvalObject+712
fffff802`37375bf4 ACPI!RtlStringCchLengthA =  (inline caller) ACPI!AsyncEvalObject+724
fffff802`37375c00 ACPI!RtlStringLengthWorkerA =  (inline caller) ACPI!AsyncEvalObject+730
fffff802`373758e5 ACPI!GetObjectPath =  (inline caller) ACPI!AsyncEvalObject+415
fffff802`37375919 ACPI!GetObjectPathNoLock =  (inline caller) ACPI!AsyncEvalObject+449
fffff802`373759ac ACPI!RtlStringCchCopyA =  (inline caller) ACPI!AsyncEvalObject+4dc
fffff802`373759ac ACPI!RtlStringValidateDestA =  (inline caller) ACPI!AsyncEvalObject+4dc
fffff802`373759d0 ACPI!RtlStringCopyWorkerA =  (inline caller) ACPI!AsyncEvalObject+500
fffff802`37375ad4 ACPI!RtlStringCchCatNA =  (inline caller) ACPI!AsyncEvalObject+604
fffff802`37375ad4 ACPI!RtlStringValidateDestAndLengthA =  (inline caller) ACPI!AsyncEvalObject+604
fffff802`37375ad4 ACPI!RtlStringValidateDestA =  (inline caller) ACPI!AsyncEvalObject+604
fffff802`37375af6 ACPI!RtlStringLengthWorkerA =  (inline caller) ACPI!AsyncEvalObject+626
fffff802`37375b38 ACPI!RtlStringCopyWorkerA =  (inline caller) ACPI!AsyncEvalObject+668
fffff802`37375a1d ACPI!RtlStringCchCatA =  (inline caller) ACPI!AsyncEvalObject+54d
fffff802`37375a1d ACPI!RtlStringValidateDestAndLengthA =  (inline caller) ACPI!AsyncEvalObject+54d
fffff802`37375a1d ACPI!RtlStringValidateDestA =  (inline caller) ACPI!AsyncEvalObject+54d
fffff802`37375a3f ACPI!RtlStringLengthWorkerA =  (inline caller) ACPI!AsyncEvalObject+56f
fffff802`37375a86 ACPI!RtlStringCopyWorkerA =  (inline caller) ACPI!AsyncEvalObject+5b6
fffff802`373ada6c ACPI!ReferenceObjectEx =  (inline caller) ACPI!AsyncEvalObject+3859c
fffff802`373ada6c ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!AsyncEvalObject+3859c
fffff802`37375ce5 ACPI!AmliEnableWatchdog =  (inline caller) ACPI!AsyncEvalObject+815
fffff802`37375ce5 ACPI!AmliComputeWatchdogTimeout =  (inline caller) ACPI!AsyncEvalObject+815
fffff802`37375d52 ACPI!AcpiDiagTraceFrequentAmlEvaluation =  (inline caller) ACPI!AsyncEvalObject+882
fffff802`37375d52 ACPI!AcpiDiagTraceIsFrequentAmlMethodTracingEnabled =  (inline caller) ACPI!AsyncEvalObject+882
fffff802`373adc81 ACPI!EventDataDescCreate =  (inline caller) ACPI!AsyncEvalObject+387b1
fffff802`373adc75 ACPI!EventDataDescCreate =  (inline caller) ACPI!AsyncEvalObject+387a5
fffff802`373adc6b ACPI!EventDataDescCreate =  (inline caller) ACPI!AsyncEvalObject+3879b
fffff802`37375d7e ACPI!AcpiDiagTraceAmlEvaluation =  (inline caller) ACPI!AsyncEvalObject+8ae
fffff802`37375d83 ACPI!AcpiDiagTraceIsAmlTracingEnabled =  (inline caller) ACPI!AsyncEvalObject+8b3
fffff802`373add00 ACPI!EventDataDescCreate =  (inline caller) ACPI!AsyncEvalObject+38830
fffff802`373adcf7 ACPI!EventDataDescCreate =  (inline caller) ACPI!AsyncEvalObject+38827
fffff802`373adceb ACPI!EventDataDescCreate =  (inline caller) ACPI!AsyncEvalObject+3881b
fffff802`373adce2 ACPI!EventDataDescCreate =  (inline caller) ACPI!AsyncEvalObject+38812
fffff802`3737606f ACPI!PushCall =  (inline caller) ACPI!AsyncEvalObject+b9f
fffff802`3737606f ACPI!PushFrame =  (inline caller) ACPI!AsyncEvalObject+b9f
fffff802`373760b6 ACPI!ReferenceObjectEx =  (inline caller) ACPI!AsyncEvalObject+be6
fffff802`373760b6 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!AsyncEvalObject+be6
fffff802`373ade12 ACPI!KeGetCurrentThread =  (inline caller) ACPI!AsyncEvalObject+38942
fffff802`37375e3c ACPI!ReadObject =  (inline caller) ACPI!AsyncEvalObject+96c
fffff802`37375e4c ACPI!GetBaseData =  (inline caller) ACPI!AsyncEvalObject+97c
fffff802`37375e76 ACPI!CopyObjData =  (inline caller) ACPI!AsyncEvalObject+9a6
fffff802`37375dec ACPI!PushPost =  (inline caller) ACPI!AsyncEvalObject+91c
fffff802`37375dec ACPI!PushFrame =  (inline caller) ACPI!AsyncEvalObject+91c
fffff802`37375ec3 ACPI!RestartContext =  (inline caller) ACPI!AsyncEvalObject+9f3
fffff802`37375fab ACPI!KeGetCurrentIrql =  (inline caller) ACPI!AsyncEvalObject+adb
fffff802`37375ed6 ACPI!LogSchedEvent =  (inline caller) ACPI!AsyncEvalObject+a06
fffff802`37375edf ACPI!LogEvent =  (inline caller) ACPI!AsyncEvalObject+a0f
fffff802`37375ed6 ACPI!KeGetCurrentThread =  (inline caller) ACPI!AsyncEvalObject+a06
fffff802`37375fbe ACPI!AcquireMutex =  (inline caller) ACPI!AsyncEvalObject+aee
fffff802`37375ffe ACPI!ReleaseMutex =  (inline caller) ACPI!AsyncEvalObject+b2e
fffff802`3737615d ACPI!AcquireMutex =  (inline caller) ACPI!AsyncEvalObject+c8d
fffff802`37376199 ACPI!ReleaseMutex =  (inline caller) ACPI!AsyncEvalObject+cc9
fffff802`373761c1 ACPI!OSQueueWorkItem =  (inline caller) ACPI!AsyncEvalObject+cf1
fffff802`373761d4 ACPI!InsertTailList =  (inline caller) ACPI!AsyncEvalObject+d04
fffff802`373adfd4 ACPI!FatalListEntryError =  (inline caller) ACPI!AsyncEvalObject+38b04
fffff802`373adfd4 ACPI!RtlFailFast =  (inline caller) ACPI!AsyncEvalObject+38b04
fffff802`37399918 ACPI!IsListEmpty =  (inline caller) ACPI!DequeueAndReadyContext+28
fffff802`373998ff ACPI!AcquireMutex =  (inline caller) ACPI!DequeueAndReadyContext+f
fffff802`37399924 ACPI!ReleaseMutex =  (inline caller) ACPI!DequeueAndReadyContext+34
fffff802`373b4c49 ACPI!InitializeListHead =  (inline caller) ACPI!DequeueAndReadyContext+1b359
fffff802`373b4c2a ACPI!RemoveHeadList =  (inline caller) ACPI!DequeueAndReadyContext+1b33a
fffff802`373b4c5b ACPI!FatalListEntryError =  (inline caller) ACPI!DequeueAndReadyContext+1b36b
fffff802`373b4c5b ACPI!RtlFailFast =  (inline caller) ACPI!DequeueAndReadyContext+1b36b
fffff802`373d82b1 ACPI!ReleaseMutex =  (inline caller) ACPI!NestAsyncEvalObject+45
fffff802`373d828a ACPI!AcquireMutex =  (inline caller) ACPI!NestAsyncEvalObject+1e
fffff802`373d8343 ACPI!ReferenceObjectEx =  (inline caller) ACPI!NestAsyncEvalObject+d7
fffff802`373d8343 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!NestAsyncEvalObject+d7
fffff802`373d832c ACPI!ReferenceObjectEx =  (inline caller) ACPI!NestAsyncEvalObject+c0
fffff802`373d832c ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!NestAsyncEvalObject+c0
fffff802`37371d16 ACPI!PopFrame =  (inline caller) ACPI!ProcessEvalObj+26
fffff802`37371d1d ACPI!HeapFree =  (inline caller) ACPI!ProcessEvalObj+2d
fffff802`37371dc9 ACPI!ReleaseMutex =  (inline caller) ACPI!ProcessEvalObj+d9
fffff802`37371d4f ACPI!HeapInsertFreeList =  (inline caller) ACPI!ProcessEvalObj+5f
fffff802`37371d60 ACPI!InsertTailList =  (inline caller) ACPI!ProcessEvalObj+70
fffff802`373a2d34 ACPI!RemoveEntryList =  (inline caller) ACPI!ProcessEvalObj+31044
fffff802`373a2d72 ACPI!RemoveEntryList =  (inline caller) ACPI!ProcessEvalObj+31082
fffff802`37371db0 ACPI!RemoveEntryList =  (inline caller) ACPI!ProcessEvalObj+c0
fffff802`37371df6 ACPI!FatalListEntryError =  (inline caller) ACPI!ProcessEvalObj+106
fffff802`37371df6 ACPI!RtlFailFast =  (inline caller) ACPI!ProcessEvalObj+106
fffff802`37371d1d ACPI!AcquireMutex =  (inline caller) ACPI!ProcessEvalObj+2d
fffff802`373d8589 ACPI!InsertTailList =  (inline caller) ACPI!QueueContext+35
fffff802`373d8592 ACPI!FatalListEntryError =  (inline caller) ACPI!QueueContext+3e
fffff802`373d8592 ACPI!RtlFailFast =  (inline caller) ACPI!QueueContext+3e
fffff802`373d8569 ACPI!AcquireMutex =  (inline caller) ACPI!QueueContext+15
fffff802`373d85d6 ACPI!ReleaseMutex =  (inline caller) ACPI!QueueContext+82
fffff802`37374117 ACPI!GetSelfHandle =  (inline caller) ACPI!SyncEvalObject+47
fffff802`373741d2 ACPI!ReleaseMutex =  (inline caller) ACPI!SyncEvalObject+102
fffff802`373741a1 ACPI!GetThreadCurrentContext =  (inline caller) ACPI!SyncEvalObject+d1
fffff802`373741a8 ACPI!KeGetCurrentThread =  (inline caller) ACPI!SyncEvalObject+d8
fffff802`37374188 ACPI!AcquireMutex =  (inline caller) ACPI!SyncEvalObject+b8
fffff802`373ad410 ACPI!KeGetCurrentIrql =  (inline caller) ACPI!SyncEvalObject+39340
fffff802`37374308 ACPI!KeGetCurrentIrql =  (inline caller) ACPI!SyncEvalObject+238
fffff802`373741f9 ACPI!LogSchedEvent =  (inline caller) ACPI!SyncEvalObject+129
fffff802`37374202 ACPI!LogEvent =  (inline caller) ACPI!SyncEvalObject+132
fffff802`373741f9 ACPI!KeGetCurrentThread =  (inline caller) ACPI!SyncEvalObject+129
fffff802`373741f5 ACPI!KeGetCurrentIrql =  (inline caller) ACPI!SyncEvalObject+125
fffff802`3742e34c ACPI!KeGetCurrentIrql =  (inline caller) ACPI!SyncLoadDDB+44
fffff802`3742e379 ACPI!ReleaseMutex =  (inline caller) ACPI!SyncLoadDDB+71
fffff802`3742e358 ACPI!AcquireMutex =  (inline caller) ACPI!SyncLoadDDB+50
fffff802`373d8676 ACPI!AcquireMutex =  (inline caller) ACPI!TimeoutCallback+6
fffff802`373d86c0 ACPI!InitializeListHead =  (inline caller) ACPI!TimeoutCallback+50
fffff802`373d86a7 ACPI!RemoveEntryList =  (inline caller) ACPI!TimeoutCallback+37
fffff802`373d86c9 ACPI!FatalListEntryError =  (inline caller) ACPI!TimeoutCallback+59
fffff802`373d86c9 ACPI!RtlFailFast =  (inline caller) ACPI!TimeoutCallback+59
fffff802`373d8709 ACPI!ReleaseMutex =  (inline caller) ACPI!TimeoutCallback+99
fffff802`37373a5f ACPI!MoveObjData =  (inline caller) ACPI!Name+4f
fffff802`373799a4 ACPI!PushScope =  (inline caller) ACPI!IfElse+f4
fffff802`373799a4 ACPI!PushFrame =  (inline caller) ACPI!IfElse+f4
fffff802`37379a0d ACPI!ReferenceObjectEx =  (inline caller) ACPI!IfElse+15d
fffff802`37379a0d ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!IfElse+15d
fffff802`37379934 ACPI!ParsePackageLen =  (inline caller) ACPI!IfElse+84
fffff802`37379a3c ACPI!ParsePackageLen =  (inline caller) ACPI!IfElse+18c
fffff802`37379a68 ACPI!PushScope =  (inline caller) ACPI!IfElse+1b8
fffff802`37379a68 ACPI!PushFrame =  (inline caller) ACPI!IfElse+1b8
fffff802`37379ae7 ACPI!ReferenceObjectEx =  (inline caller) ACPI!IfElse+237
fffff802`37379ae7 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!IfElse+237
fffff802`37394ebe ACPI!ReferenceObjectEx =  (inline caller) ACPI!Notify+4e
fffff802`37394ebe ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!Notify+4e
fffff802`37394ee5 ACPI!GetSelfHandle =  (inline caller) ACPI!Notify+75
fffff802`37392c49 ACPI!ReferenceObjectEx =  (inline caller) ACPI!Release+49
fffff802`37392c49 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!Release+49
fffff802`373d88a6 ACPI!ReferenceObjectEx =  (inline caller) ACPI!ResetSignal+36
fffff802`373d88a6 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ResetSignal+36
fffff802`373d892f ACPI!ResetASLEvent =  (inline caller) ACPI!ResetSignal+bf
fffff802`3737a1ec ACPI!DupObjData =  (inline caller) ACPI!Return+1c
fffff802`373b04d5 ACPI!ReferenceObjectEx =  (inline caller) ACPI!Return+36305
fffff802`373b04d5 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!Return+36305
fffff802`373b04bb ACPI!ReferenceObjectEx =  (inline caller) ACPI!Return+362eb
fffff802`373b04bb ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!Return+362eb
fffff802`373b04e8 ACPI!ReferenceObjectEx =  (inline caller) ACPI!Return+36318
fffff802`373b050e ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!Return+3633e
fffff802`373b04f5 ACPI!ReferenceObjectEx =  (inline caller) ACPI!Return+36325
fffff802`373b04f5 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!Return+36325
fffff802`3737aa92 ACPI!PushScope =  (inline caller) ACPI!While+52
fffff802`3737aa92 ACPI!PushFrame =  (inline caller) ACPI!While+52
fffff802`3737ab05 ACPI!ReferenceObjectEx =  (inline caller) ACPI!While+c5
fffff802`3737ab05 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!While+c5
fffff802`37392ad0 ACPI!ReferenceObjectEx =  (inline caller) ACPI!Acquire+40
fffff802`37392ad0 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!Acquire+40
fffff802`373d8f09 ACPI!ComputeDataChkSum =  (inline caller) ACPI!ConcatenateResTemplate+189
fffff802`373b7dc3 ACPI!AcpiBitScanReverse64 =  (inline caller) ACPI!ExprOp1_64+183c3
fffff802`3739fa80 ACPI!AcpiBitScanForward64 =  (inline caller) ACPI!ExprOp1_64+80
fffff802`3739105a ACPI!IsCompatableDSDTRevision =  (inline caller) ACPI!ExprOp2+a
fffff802`37390d3d ACPI!ValidateTarget =  (inline caller) ACPI!ExprOp2_64+3d
fffff802`37390d99 ACPI!MatchObjType =  (inline caller) ACPI!ExprOp2_64+99
fffff802`37390db2 ACPI!FreeDataBuffs =  (inline caller) ACPI!ExprOp2_64+b2
fffff802`37390db2 ACPI!FreeData =  (inline caller) ACPI!ExprOp2_64+b2
fffff802`37390e1a ACPI!WriteObject =  (inline caller) ACPI!ExprOp2_64+11a
fffff802`37390e1f ACPI!GetBaseData =  (inline caller) ACPI!ExprOp2_64+11f
fffff802`37390e48 ACPI!DupObjData =  (inline caller) ACPI!ExprOp2_64+148
fffff802`373b03d4 ACPI!ReferenceObjectEx =  (inline caller) ACPI!ExprOp2_64+1f6d4
fffff802`373b03d4 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ExprOp2_64+1f6d4
fffff802`373b03ba ACPI!ReferenceObjectEx =  (inline caller) ACPI!ExprOp2_64+1f6ba
fffff802`373b03ba ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ExprOp2_64+1f6ba
fffff802`373b0407 ACPI!ReferenceObjectEx =  (inline caller) ACPI!ExprOp2_64+1f707
fffff802`373b0407 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ExprOp2_64+1f707
fffff802`373b03ee ACPI!ReferenceObjectEx =  (inline caller) ACPI!ExprOp2_64+1f6ee
fffff802`373b03ee ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ExprOp2_64+1f6ee
fffff802`3739959b ACPI!PushPost =  (inline caller) ACPI!IncDec+2b
fffff802`3739959b ACPI!PushFrame =  (inline caller) ACPI!IncDec+2b
fffff802`3737971f ACPI!IsCompatableDSDTRevision =  (inline caller) ACPI!LogOp2+f
fffff802`37379770 ACPI!LogOp2_64 =  (inline caller) ACPI!LogOp2+60
fffff802`373797e1 ACPI!IsCompatableDSDTRevision =  (inline caller) ACPI!LogOp2+d1
fffff802`3739115e ACPI!PushFrame =  (inline caller) ACPI!Package+9e
fffff802`37391f8a ACPI!ParseString =  (inline caller) ACPI!ParsePackage+ea
fffff802`37391f51 ACPI!ParseIntObj =  (inline caller) ACPI!ParsePackage+b1
fffff802`373920d0 ACPI!PopFrame =  (inline caller) ACPI!ParsePackage+230
fffff802`373920d7 ACPI!HeapFree =  (inline caller) ACPI!ParsePackage+237
fffff802`37392188 ACPI!ReleaseMutex =  (inline caller) ACPI!ParsePackage+2e8
fffff802`37392106 ACPI!HeapInsertFreeList =  (inline caller) ACPI!ParsePackage+266
fffff802`37392117 ACPI!InsertTailList =  (inline caller) ACPI!ParsePackage+277
fffff802`373b1cc0 ACPI!RemoveEntryList =  (inline caller) ACPI!ParsePackage+1fe20
fffff802`373b1cf6 ACPI!RemoveEntryList =  (inline caller) ACPI!ParsePackage+1fe56
fffff802`37392167 ACPI!RemoveEntryList =  (inline caller) ACPI!ParsePackage+2c7
fffff802`373b1d17 ACPI!FatalListEntryError =  (inline caller) ACPI!ParsePackage+1fe77
fffff802`373b1d17 ACPI!RtlFailFast =  (inline caller) ACPI!ParsePackage+1fe77
fffff802`373920d7 ACPI!AcquireMutex =  (inline caller) ACPI!ParsePackage+237
fffff802`373da01d ACPI!PopFrame =  (inline caller) ACPI!ProcessDivide+10d
fffff802`3739a29a ACPI!PopFrame =  (inline caller) ACPI!ProcessIncDec+7a
fffff802`373da43d ACPI!PopFrame =  (inline caller) ACPI!ProcessLoadTable+3dd
fffff802`373da572 ACPI!PopFrame =  (inline caller) ACPI!ProcessWait+62
fffff802`3737a710 ACPI!ValidateTarget =  (inline caller) ACPI!Store+20
fffff802`3737a7f0 ACPI!FreeDataBuffs =  (inline caller) ACPI!Store+100
fffff802`3737a76b ACPI!MoveObjData =  (inline caller) ACPI!Store+7b
fffff802`373dafca ACPI!ReferenceObjectEx =  (inline caller) ACPI!Wait+3a
fffff802`373dafca ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!Wait+3a
fffff802`3737a360 ACPI!PerformMutexResourceBindings =  (inline caller) ACPI!ParseAcquire+60
fffff802`3737a391 ACPI!AcquireASLMutex =  (inline caller) ACPI!ParseAcquire+91
fffff802`3737a40c ACPI!InsertHeadList =  (inline caller) ACPI!ParseAcquire+10c
fffff802`3737a4a4 ACPI!PopFrame =  (inline caller) ACPI!ParseAcquire+1a4
fffff802`3737a4ab ACPI!HeapFree =  (inline caller) ACPI!ParseAcquire+1ab
fffff802`3737a537 ACPI!ReleaseMutex =  (inline caller) ACPI!ParseAcquire+237
fffff802`3737a4da ACPI!HeapInsertFreeList =  (inline caller) ACPI!ParseAcquire+1da
fffff802`3737a4eb ACPI!InsertTailList =  (inline caller) ACPI!ParseAcquire+1eb
fffff802`3737a5c1 ACPI!RemoveEntryList =  (inline caller) ACPI!ParseAcquire+2c1
fffff802`373b07c6 ACPI!RemoveEntryList =  (inline caller) ACPI!ParseAcquire+364c6
fffff802`3737a5fd ACPI!RemoveEntryList =  (inline caller) ACPI!ParseAcquire+2fd
fffff802`3737a61b ACPI!FatalListEntryError =  (inline caller) ACPI!ParseAcquire+31b
fffff802`3737a61b ACPI!RtlFailFast =  (inline caller) ACPI!ParseAcquire+31b
fffff802`3737a4ab ACPI!AcquireMutex =  (inline caller) ACPI!ParseAcquire+1ab
fffff802`37376e33 ACPI!PushFrame =  (inline caller) ACPI!ParseCall+693
fffff802`37376851 ACPI!NewObjOwner =  (inline caller) ACPI!ParseCall+b1
fffff802`373768d5 ACPI!ReleaseMutex =  (inline caller) ACPI!ParseCall+135
fffff802`373768bb ACPI!InsertTailList =  (inline caller) ACPI!ParseCall+11b
fffff802`373768a2 ACPI!AcquireMutex =  (inline caller) ACPI!ParseCall+102
fffff802`37376901 ACPI!PushScope =  (inline caller) ACPI!ParseCall+161
fffff802`37376901 ACPI!PushFrame =  (inline caller) ACPI!ParseCall+161
fffff802`373769b7 ACPI!ReferenceObjectEx =  (inline caller) ACPI!ParseCall+217
fffff802`373769b7 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ParseCall+217
fffff802`37376a54 ACPI!FreeDataBuffs =  (inline caller) ACPI!ParseCall+2b4
fffff802`37376a60 ACPI!FreeData =  (inline caller) ACPI!ParseCall+2c0
fffff802`37376b2d ACPI!FreeObjOwner =  (inline caller) ACPI!ParseCall+38d
fffff802`37376b56 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ParseCall+3b6
fffff802`37376b64 ACPI!HeapFree =  (inline caller) ACPI!ParseCall+3c4
fffff802`37376be8 ACPI!ReleaseMutex =  (inline caller) ACPI!ParseCall+448
fffff802`37376b8b ACPI!HeapInsertFreeList =  (inline caller) ACPI!ParseCall+3eb
fffff802`37376b9c ACPI!InsertTailList =  (inline caller) ACPI!ParseCall+3fc
fffff802`37376fe8 ACPI!RemoveEntryList =  (inline caller) ACPI!ParseCall+848
fffff802`373ae567 ACPI!RemoveEntryList =  (inline caller) ACPI!ParseCall+37dc7
fffff802`37376eab ACPI!RemoveEntryList =  (inline caller) ACPI!ParseCall+70b
fffff802`37376b68 ACPI!AcquireMutex =  (inline caller) ACPI!ParseCall+3c8
fffff802`37376a9f ACPI!FreeOwnedObjects =  (inline caller) ACPI!ParseCall+2ff
fffff802`37376ad9 ACPI!ReleaseMutex =  (inline caller) ACPI!ParseCall+339
fffff802`37376ab8 ACPI!RemoveEntryList =  (inline caller) ACPI!ParseCall+318
fffff802`37376a9f ACPI!AcquireMutex =  (inline caller) ACPI!ParseCall+2ff
fffff802`37376f5a ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ParseCall+7ba
fffff802`373ae4de ACPI!GetSelfHandle =  (inline caller) ACPI!ParseCall+37d3e
fffff802`37376c1d ACPI!DereferenceObjectEx =  (inline caller) ACPI!ParseCall+47d
fffff802`37376c1d ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ParseCall+47d
fffff802`37376ef0 ACPI!HeapFree =  (inline caller) ACPI!ParseCall+750
fffff802`37376f19 ACPI!ReleaseMutex =  (inline caller) ACPI!ParseCall+779
fffff802`37376ef0 ACPI!AcquireMutex =  (inline caller) ACPI!ParseCall+750
fffff802`37376ed4 ACPI!FreeDataBuffs =  (inline caller) ACPI!ParseCall+734
fffff802`37376c85 ACPI!PopFrame =  (inline caller) ACPI!ParseCall+4e5
fffff802`37376c8c ACPI!HeapFree =  (inline caller) ACPI!ParseCall+4ec
fffff802`37376d3c ACPI!ReleaseMutex =  (inline caller) ACPI!ParseCall+59c
fffff802`37376cba ACPI!HeapInsertFreeList =  (inline caller) ACPI!ParseCall+51a
fffff802`37376ccb ACPI!InsertTailList =  (inline caller) ACPI!ParseCall+52b
fffff802`37377028 ACPI!RemoveEntryList =  (inline caller) ACPI!ParseCall+888
fffff802`373ae5bb ACPI!RemoveEntryList =  (inline caller) ACPI!ParseCall+37e1b
fffff802`37376d1b ACPI!RemoveEntryList =  (inline caller) ACPI!ParseCall+57b
fffff802`373ae5dc ACPI!FatalListEntryError =  (inline caller) ACPI!ParseCall+37e3c
fffff802`373ae5dc ACPI!RtlFailFast =  (inline caller) ACPI!ParseCall+37e3c
fffff802`37376c8c ACPI!AcquireMutex =  (inline caller) ACPI!ParseCall+4ec
fffff802`37376c48 ACPI!ReleaseASLMutex =  (inline caller) ACPI!ParseCall+4a8
fffff802`37391afa ACPI!ReferenceObjectEx =  (inline caller) ACPI!ParseField+2a
fffff802`37391afa ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ParseField+2a
fffff802`37391bb6 ACPI!ParsePackageLen =  (inline caller) ACPI!ParseField+e6
fffff802`37391b70 ACPI!RtlStringCchCopyNA =  (inline caller) ACPI!ParseField+a0
fffff802`37391b80 ACPI!RtlStringCopyWorkerA =  (inline caller) ACPI!ParseField+b0
fffff802`37391cbe ACPI!DereferenceObjectEx =  (inline caller) ACPI!ParseField+1ee
fffff802`37391cbe ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ParseField+1ee
fffff802`373db9ea ACPI!RtlStringCbLengthA =  (inline caller) ACPI!ParseFieldConnection+146
fffff802`373db9f6 ACPI!RtlStringLengthWorkerA =  (inline caller) ACPI!ParseFieldConnection+152
fffff802`373932be ACPI!PopFrame =  (inline caller) ACPI!ParseLoad+ae
fffff802`373916fe ACPI!GetBaseObject =  (inline caller) ACPI!ParseNameObj+3e
fffff802`37391710 ACPI!ReferenceObjectEx =  (inline caller) ACPI!ParseNameObj+50
fffff802`37391710 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ParseNameObj+50
fffff802`373913b3 ACPI!RtlStringCchCopyNA =  (inline caller) ACPI!ParseNameTail+73
fffff802`373913b3 ACPI!RtlStringValidateDestA =  (inline caller) ACPI!ParseNameTail+73
fffff802`373913d0 ACPI!RtlStringCopyWorkerA =  (inline caller) ACPI!ParseNameTail+90
fffff802`37391440 ACPI!RtlStringCchCopyA =  (inline caller) ACPI!ParseNameTail+100
fffff802`37391440 ACPI!RtlStringValidateDestA =  (inline caller) ACPI!ParseNameTail+100
fffff802`37391462 ACPI!RtlStringCopyWorkerA =  (inline caller) ACPI!ParseNameTail+122
fffff802`373dbbde ACPI!PopFrame =  (inline caller) ACPI!ParseNestedContext+7e
fffff802`373922ee ACPI!CheckBP =  (inline caller) ACPI!ParseOpcode+1e
fffff802`3739238a ACPI!PushTerm =  (inline caller) ACPI!ParseOpcode+ba
fffff802`3739238a ACPI!PushFrame =  (inline caller) ACPI!ParseOpcode+ba
fffff802`373735da ACPI!DequeueAndReadyContext =  (inline caller) ACPI!ParseRelease+23a
fffff802`373735fb ACPI!IsListEmpty =  (inline caller) ACPI!ParseRelease+25b
fffff802`373735da ACPI!AcquireMutex =  (inline caller) ACPI!ParseRelease+23a
fffff802`37373607 ACPI!ReleaseMutex =  (inline caller) ACPI!ParseRelease+267
fffff802`373acec0 ACPI!InitializeListHead =  (inline caller) ACPI!ParseRelease+39b20
fffff802`373acea8 ACPI!RemoveHeadList =  (inline caller) ACPI!ParseRelease+39b08
fffff802`373aced6 ACPI!FatalListEntryError =  (inline caller) ACPI!ParseRelease+39b36
fffff802`373aced6 ACPI!RtlFailFast =  (inline caller) ACPI!ParseRelease+39b36
fffff802`373734d2 ACPI!HeapFree =  (inline caller) ACPI!ParseRelease+132
fffff802`373735bd ACPI!ReleaseMutex =  (inline caller) ACPI!ParseRelease+21d
fffff802`373734fe ACPI!HeapInsertFreeList =  (inline caller) ACPI!ParseRelease+15e
fffff802`37373518 ACPI!InsertTailList =  (inline caller) ACPI!ParseRelease+178
fffff802`373ace8a ACPI!RemoveEntryList =  (inline caller) ACPI!ParseRelease+39aea
fffff802`37373563 ACPI!RemoveEntryList =  (inline caller) ACPI!ParseRelease+1c3
fffff802`3737359c ACPI!RemoveEntryList =  (inline caller) ACPI!ParseRelease+1fc
fffff802`373734da ACPI!AcquireMutex =  (inline caller) ACPI!ParseRelease+13a
fffff802`373734b0 ACPI!RemoveEntryList =  (inline caller) ACPI!ParseRelease+110
fffff802`3737366e ACPI!PopFrame =  (inline caller) ACPI!ParseRelease+2ce
fffff802`3737851b ACPI!ParseOpcode =  (inline caller) ACPI!ParseScope+4b
fffff802`3737859c ACPI!CheckBP =  (inline caller) ACPI!ParseScope+cc
fffff802`3737891f ACPI!FindOpcodeTerm =  (inline caller) ACPI!ParseScope+44f
fffff802`373af1f5 ACPI!ParseArgObj =  (inline caller) ACPI!ParseScope+36d25
fffff802`373af287 ACPI!ParseLocalObj =  (inline caller) ACPI!ParseScope+36db7
fffff802`37378631 ACPI!PushTerm =  (inline caller) ACPI!ParseScope+161
fffff802`37378631 ACPI!PushFrame =  (inline caller) ACPI!ParseScope+161
fffff802`37378580 ACPI!FreeDataBuffs =  (inline caller) ACPI!ParseScope+b0
fffff802`37378580 ACPI!FreeData =  (inline caller) ACPI!ParseScope+b0
fffff802`373787c6 ACPI!DereferenceObjectEx =  (inline caller) ACPI!ParseScope+2f6
fffff802`373787c6 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ParseScope+2f6
fffff802`37378808 ACPI!PopFrame =  (inline caller) ACPI!ParseScope+338
fffff802`3737880f ACPI!HeapFree =  (inline caller) ACPI!ParseScope+33f
fffff802`373788c3 ACPI!ReleaseMutex =  (inline caller) ACPI!ParseScope+3f3
fffff802`37378841 ACPI!HeapInsertFreeList =  (inline caller) ACPI!ParseScope+371
fffff802`37378852 ACPI!InsertTailList =  (inline caller) ACPI!ParseScope+382
fffff802`37378976 ACPI!RemoveEntryList =  (inline caller) ACPI!ParseScope+4a6
fffff802`373af43c ACPI!RemoveEntryList =  (inline caller) ACPI!ParseScope+36f6c
fffff802`373788a2 ACPI!RemoveEntryList =  (inline caller) ACPI!ParseScope+3d2
fffff802`373af45d ACPI!FatalListEntryError =  (inline caller) ACPI!ParseScope+36f8d
fffff802`373af45d ACPI!RtlFailFast =  (inline caller) ACPI!ParseScope+36f8d
fffff802`3737880f ACPI!AcquireMutex =  (inline caller) ACPI!ParseScope+33f
fffff802`37379044 ACPI!ParseAndGetNameSpaceObject =  (inline caller) ACPI!ParseSuperName+b4
fffff802`37379044 ACPI!ParseName =  (inline caller) ACPI!ParseSuperName+b4
fffff802`37379066 ACPI!ParseNameTail =  (inline caller) ACPI!ParseSuperName+d6
fffff802`373790c0 ACPI!RtlStringCchCopyNA =  (inline caller) ACPI!ParseSuperName+130
fffff802`373790c0 ACPI!RtlStringValidateDestA =  (inline caller) ACPI!ParseSuperName+130
fffff802`373790e0 ACPI!RtlStringCopyWorkerA =  (inline caller) ACPI!ParseSuperName+150
fffff802`37379145 ACPI!GetNameSpaceObject =  (inline caller) ACPI!ParseSuperName+1b5
fffff802`3737922e ACPI!DereferenceObjectEx =  (inline caller) ACPI!ParseSuperName+29e
fffff802`3737922e ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ParseSuperName+29e
fffff802`37379215 ACPI!DereferenceObjectEx =  (inline caller) ACPI!ParseSuperName+285
fffff802`37379215 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ParseSuperName+285
fffff802`373791fc ACPI!GetBaseObject =  (inline caller) ACPI!ParseSuperName+26c
fffff802`37379207 ACPI!ReferenceObjectEx =  (inline caller) ACPI!ParseSuperName+277
fffff802`37379207 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ParseSuperName+277
fffff802`37377706 ACPI!ParsePackageLen =  (inline caller) ACPI!ParseTerm+646
fffff802`3737714b ACPI!ParseArg =  (inline caller) ACPI!ParseTerm+8b
fffff802`37377e3e ACPI!ParseIntObj =  (inline caller) ACPI!ParseTerm+d7e
fffff802`37377be0 ACPI!ParseObjName =  (inline caller) ACPI!ParseTerm+b20
fffff802`37377c0a ACPI!ParseName =  (inline caller) ACPI!ParseTerm+b4a
fffff802`37377c21 ACPI!ParseNameTail =  (inline caller) ACPI!ParseTerm+b61
fffff802`37377c7f ACPI!RtlStringCchCopyNA =  (inline caller) ACPI!ParseTerm+bbf
fffff802`37377c7f ACPI!RtlStringValidateDestA =  (inline caller) ACPI!ParseTerm+bbf
fffff802`37377ca0 ACPI!RtlStringCopyWorkerA =  (inline caller) ACPI!ParseTerm+be0
fffff802`3737714b ACPI!ParseOpcode =  (inline caller) ACPI!ParseTerm+8b
fffff802`3737719f ACPI!CheckBP =  (inline caller) ACPI!ParseTerm+df
fffff802`37377693 ACPI!ParseIntObj =  (inline caller) ACPI!ParseTerm+5d3
fffff802`37377f63 ACPI!ParseArgObj =  (inline caller) ACPI!ParseTerm+ea3
fffff802`37377f90 ACPI!CopyObjData =  (inline caller) ACPI!ParseTerm+ed0
fffff802`37377fdf ACPI!ParseLocalObj =  (inline caller) ACPI!ParseTerm+f1f
fffff802`37377ffa ACPI!CopyObjData =  (inline caller) ACPI!ParseTerm+f3a
fffff802`37377767 ACPI!ParseNameObj =  (inline caller) ACPI!ParseTerm+6a7
fffff802`37377767 ACPI!ParseAndGetNameSpaceObject =  (inline caller) ACPI!ParseTerm+6a7
fffff802`37377767 ACPI!ParseName =  (inline caller) ACPI!ParseTerm+6a7
fffff802`37377789 ACPI!ParseNameTail =  (inline caller) ACPI!ParseTerm+6c9
fffff802`373777e6 ACPI!RtlStringCchCopyNA =  (inline caller) ACPI!ParseTerm+726
fffff802`373777e6 ACPI!RtlStringValidateDestA =  (inline caller) ACPI!ParseTerm+726
fffff802`37377802 ACPI!RtlStringCopyWorkerA =  (inline caller) ACPI!ParseTerm+742
fffff802`37377866 ACPI!GetNameSpaceObject =  (inline caller) ACPI!ParseTerm+7a6
fffff802`3737791c ACPI!GetBaseObject =  (inline caller) ACPI!ParseTerm+85c
fffff802`3737792b ACPI!ReferenceObjectEx =  (inline caller) ACPI!ParseTerm+86b
fffff802`3737792b ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ParseTerm+86b
fffff802`373779cf ACPI!DereferenceObjectEx =  (inline caller) ACPI!ParseTerm+90f
fffff802`373779cf ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ParseTerm+90f
fffff802`373779c1 ACPI!DereferenceObjectEx =  (inline caller) ACPI!ParseTerm+901
fffff802`373779c1 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ParseTerm+901
fffff802`37377944 ACPI!ReadObject =  (inline caller) ACPI!ParseTerm+884
fffff802`37377952 ACPI!GetBaseData =  (inline caller) ACPI!ParseTerm+892
fffff802`37377d6a ACPI!PushFrame =  (inline caller) ACPI!ParseTerm+caa
fffff802`3737797c ACPI!CopyObjData =  (inline caller) ACPI!ParseTerm+8bc
fffff802`37377238 ACPI!PushTerm =  (inline caller) ACPI!ParseTerm+178
fffff802`37377238 ACPI!PushFrame =  (inline caller) ACPI!ParseTerm+178
fffff802`37377dc6 ACPI!ParseInteger =  (inline caller) ACPI!ParseTerm+d06
fffff802`373aee30 ACPI!GetSelfHandle =  (inline caller) ACPI!ParseTerm+37d70
fffff802`373aeed2 ACPI!GetSelfHandle =  (inline caller) ACPI!ParseTerm+37e12
fffff802`373aef0e ACPI!GetSelfHandle =  (inline caller) ACPI!ParseTerm+37e4e
fffff802`37377449 ACPI!HeapFree =  (inline caller) ACPI!ParseTerm+389
fffff802`373774f4 ACPI!ReleaseMutex =  (inline caller) ACPI!ParseTerm+434
fffff802`37377472 ACPI!HeapInsertFreeList =  (inline caller) ACPI!ParseTerm+3b2
fffff802`37377483 ACPI!InsertTailList =  (inline caller) ACPI!ParseTerm+3c3
fffff802`37377bba ACPI!RemoveEntryList =  (inline caller) ACPI!ParseTerm+afa
fffff802`373af082 ACPI!RemoveEntryList =  (inline caller) ACPI!ParseTerm+37fc2
fffff802`373774d3 ACPI!RemoveEntryList =  (inline caller) ACPI!ParseTerm+413
fffff802`3737744d ACPI!AcquireMutex =  (inline caller) ACPI!ParseTerm+38d
fffff802`373773ff ACPI!FreeDataBuffs =  (inline caller) ACPI!ParseTerm+33f
fffff802`3737740d ACPI!FreeData =  (inline caller) ACPI!ParseTerm+34d
fffff802`37377aba ACPI!FreeObjData =  (inline caller) ACPI!ParseTerm+9fa
fffff802`37377ac6 ACPI!HeapFree =  (inline caller) ACPI!ParseTerm+a06
fffff802`37377b67 ACPI!ReleaseMutex =  (inline caller) ACPI!ParseTerm+aa7
fffff802`37377af4 ACPI!HeapInsertFreeList =  (inline caller) ACPI!ParseTerm+a34
fffff802`37377b0a ACPI!InsertTailList =  (inline caller) ACPI!ParseTerm+a4a
fffff802`37378178 ACPI!RemoveEntryList =  (inline caller) ACPI!ParseTerm+10b8
fffff802`373af050 ACPI!RemoveEntryList =  (inline caller) ACPI!ParseTerm+37f90
fffff802`3737806d ACPI!RemoveEntryList =  (inline caller) ACPI!ParseTerm+fad
fffff802`37377acb ACPI!AcquireMutex =  (inline caller) ACPI!ParseTerm+a0b
fffff802`3737751b ACPI!PopFrame =  (inline caller) ACPI!ParseTerm+45b
fffff802`37377522 ACPI!HeapFree =  (inline caller) ACPI!ParseTerm+462
fffff802`373775d3 ACPI!ReleaseMutex =  (inline caller) ACPI!ParseTerm+513
fffff802`37377551 ACPI!HeapInsertFreeList =  (inline caller) ACPI!ParseTerm+491
fffff802`37377562 ACPI!InsertTailList =  (inline caller) ACPI!ParseTerm+4a2
fffff802`37377a77 ACPI!RemoveEntryList =  (inline caller) ACPI!ParseTerm+9b7
fffff802`373af0dd ACPI!RemoveEntryList =  (inline caller) ACPI!ParseTerm+3801d
fffff802`373775b2 ACPI!RemoveEntryList =  (inline caller) ACPI!ParseTerm+4f2
fffff802`373af0fe ACPI!FatalListEntryError =  (inline caller) ACPI!ParseTerm+3803e
fffff802`373af0fe ACPI!RtlFailFast =  (inline caller) ACPI!ParseTerm+3803e
fffff802`37377522 ACPI!AcquireMutex =  (inline caller) ACPI!ParseTerm+462
fffff802`37377b89 ACPI!DereferenceObjectEx =  (inline caller) ACPI!ParseTerm+ac9
fffff802`37377b89 ACPI!AMLIIsMultithreaded =  (inline caller) ACPI!ParseTerm+ac9
fffff802`373dbdb1 ACPI!PopFrame =  (inline caller) ACPI!ParseUnload+131
fffff802`3742d423 ACPI!IrqTraceInitialize =  (inline caller) ACPI!AcpiIrqLibConfigureLibrary+f
fffff802`3742d423 ACPI!TraceLoggingRegister_EtwRegister_EtwSetInformation =  (inline caller) ACPI!AcpiIrqLibConfigureLibrary+f
fffff802`37408555 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!AcpiIrqLibEjectArbiterInterface+9
fffff802`373a4cd3 ACPI!IrqLibReleaseArbiterLock =  (inline caller) ACPI!IrqLibAcquireArbiterLock+25d07
fffff802`374261d3 ACPI!KeGetCurrentIrql =  (inline caller) ACPI!IrqLibAllocateMessageTarget+73
fffff802`37426433 ACPI!KeGetCurrentIrql =  (inline caller) ACPI!IrqLibFreeMessageTarget+23
fffff802`3739dbcf ACPI!IrqLibReleaseArbiterLock =  (inline caller) ACPI!IrqLibpGetVectorInput+9f
fffff802`3737ea3f ACPI!AcpiIrqAcquireTreeLock =  (inline caller) ACPI!LinkNodeCrackPrt+18b
fffff802`3737ea87 ACPI!AcpiIrqReleaseTreeLock =  (inline caller) ACPI!LinkNodeCrackPrt+1d3
fffff802`373a46e0 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!LinkNodeCrackPrt+25e2c
fffff802`373a46a9 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!LinkNodeCrackPrt+25df5
fffff802`3737eb7e ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!LinkNodeCrackPrt+2ca
fffff802`3737eb63 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!LinkNodeCrackPrt+2af
fffff802`3737eb63 ACPI!FreeDataBuffs =  (inline caller) ACPI!LinkNodeCrackPrt+2af
fffff802`3737eb4d ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!LinkNodeCrackPrt+299
fffff802`3737eb4d ACPI!FreeDataBuffs =  (inline caller) ACPI!LinkNodeCrackPrt+299
fffff802`3737ecb0 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!LinkNodeCrackPrt+3fc
fffff802`373a478d ACPI!AcpiIrqAcquireTreeLock =  (inline caller) ACPI!LinkNodeCrackPrt+25ed9
fffff802`373a47d0 ACPI!AcpiIrqReleaseTreeLock =  (inline caller) ACPI!LinkNodeCrackPrt+25f1c
fffff802`3737ec24 ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!LinkNodeCrackPrt+370
fffff802`3737ec0a ACPI!AMLIFreeDataBuffs =  (inline caller) ACPI!LinkNodeCrackPrt+356
fffff802`373ff3d0 ACPI!InitializeListHead =  (inline caller) ACPI!LinkNodeInitGlobalState+0
fffff802`373dbe15 ACPI!IsListEmpty =  (inline caller) ACPI!LinkNodeRestoreHardwareState+29
fffff802`37426719 ACPI!InsertTailList =  (inline caller) ACPI!LinkNodepAddAttachedDevice+39
fffff802`37426722 ACPI!FatalListEntryError =  (inline caller) ACPI!LinkNodepAddAttachedDevice+42
fffff802`37426722 ACPI!RtlFailFast =  (inline caller) ACPI!LinkNodepAddAttachedDevice+42
fffff802`3740182b ACPI!InitializeListHead =  (inline caller) ACPI!LinkNodepAddLinkNodeWorker+4b
fffff802`3740185e ACPI!InsertTailList =  (inline caller) ACPI!LinkNodepAddLinkNodeWorker+7e
fffff802`37414648 ACPI!FatalListEntryError =  (inline caller) ACPI!LinkNodepAddLinkNodeWorker+12e68
fffff802`37414648 ACPI!RtlFailFast =  (inline caller) ACPI!LinkNodepAddLinkNodeWorker+12e68
fffff802`3737e84c ACPI!IsListEmpty =  (inline caller) ACPI!LinkNodepGetFilter+24
fffff802`373dc14f ACPI!_ACPIInternalError =  (inline caller) ACPI!LinkNodepRunSrsWorker+5f
fffff802`37414700 ACPI!LinkNodeGetName =  (inline caller) ACPI!PcisuppSetRoutingInfo+1290c
fffff802`374085e7 ACPI!IoGetCurrentIrpStackLocation =  (inline caller) ACPI!IrqTranslatorEjectInterface+13
fffff802`37404424 ACPI!ProcessorpInsertAssignment =  (inline caller) ACPI!ProcessorCopyData+254
fffff802`3740447e ACPI!ProcessorGetInstance =  (inline caller) ACPI!ProcessorCopyData+2ae
fffff802`374120bd ACPI!ProcessorGetInstance =  (inline caller) ACPI!ProcessorIdtEntryToGsiv+61
fffff802`3742ef48 ACPI!InitializeListHead =  (inline caller) ACPI!ProcessorInitGlobalState+54
fffff802`37401766 ACPI!ProcessorGetInstance =  (inline caller) ACPI!ProcessorMsiSupported+42
fffff802`373dc490 ACPI!IrqLibReleaseArbiterLock =  (inline caller) ACPI!ProcessorpAddInstanceCallback+20
fffff802`37402fcb ACPI!ProcessorGetInstance =  (inline caller) ACPI!ProcessorpFindAffinitizedIdtEntries+17b
fffff802`37402db1 ACPI!IrqPolicyQuerySteeringEnabledForInterrupt =  (inline caller) ACPI!ProcessorpFindIdtEntriesApic+1a1
fffff802`37407aba ACPI!InsertTailList =  (inline caller) ACPI!ProcessorpIndexInstance+e2
fffff802`37407ab3 ACPI!InitializeListHead =  (inline caller) ACPI!ProcessorpIndexInstance+db
fffff802`37407b36 ACPI!InsertTailList =  (inline caller) ACPI!ProcessorpIndexInstance+15e
fffff802`374167c2 ACPI!FatalListEntryError =  (inline caller) ACPI!ProcessorpIndexInstance+edea
fffff802`374167c2 ACPI!RtlFailFast =  (inline caller) ACPI!ProcessorpIndexInstance+edea
fffff802`3741078b ACPI!ProcessorGetInstance =  (inline caller) ACPI!ProcessorpReserveIdtEntriesApic+fb
fffff802`374058a9 ACPI!InsertTailList =  (inline caller) ACPI!ProcessorpSelectProcessorSet+5d
fffff802`37405888 ACPI!RemoveEntryList =  (inline caller) ACPI!ProcessorpSelectProcessorSet+3c
fffff802`37405996 ACPI!RemoveHeadList =  (inline caller) ACPI!ProcessorpSelectProcessorSet+14a
fffff802`3740591a ACPI!InsertTailList =  (inline caller) ACPI!ProcessorpSelectProcessorSet+ce
fffff802`374059c3 ACPI!FatalListEntryError =  (inline caller) ACPI!ProcessorpSelectProcessorSet+177
fffff802`374059c3 ACPI!RtlFailFast =  (inline caller) ACPI!ProcessorpSelectProcessorSet+177
fffff802`374058f9 ACPI!RemoveHeadList =  (inline caller) ACPI!ProcessorpSelectProcessorSet+ad
fffff802`3741482a ACPI!LinkNodeSetPossibleGsiv =  (inline caller) ACPI!IrqArbAddAllocation+1232a
fffff802`37414843 ACPI!LinkNodeAddPossibleReference =  (inline caller) ACPI!IrqArbAddAllocation+12343
fffff802`37414a2e ACPI!LinkNodeRemovePossibleReference =  (inline caller) ACPI!IrqArbAddAllocation+1252e
fffff802`37426d53 ACPI!ArbBacktrackAllocation =  (inline caller) ACPI!IrqArbBacktrackAllocation+133
fffff802`37426d50 ACPI!LinkNodeRemovePossibleReference =  (inline caller) ACPI!IrqArbBacktrackAllocation+130
fffff802`37403fe0 ACPI!ProcessorClearPossibleData =  (inline caller) ACPI!IrqArbBootAllocation+10
fffff802`37404001 ACPI!IcCopyData =  (inline caller) ACPI!IrqArbBootAllocation+31
fffff802`374040fd ACPI!IcCopyData =  (inline caller) ACPI!IrqArbBootAllocation+12d
fffff802`3740419c ACPI!ProcessorClearPossibleData =  (inline caller) ACPI!IrqArbBootAllocation+1cc
fffff802`374035fd ACPI!IrqArbClearStaleAllocations =  (inline caller) ACPI!IrqArbCommitAllocation+d
fffff802`374036ac ACPI!IcCopyData =  (inline caller) ACPI!IrqArbCommitAllocation+bc
fffff802`3740374c ACPI!ProcessorClearPossibleData =  (inline caller) ACPI!IrqArbCommitAllocation+15c
fffff802`3740385a ACPI!ProcessorClearPossibleData =  (inline caller) ACPI!IrqArbCommitAllocation+26a
fffff802`37414e0c ACPI!LinkNodeGetPreferredGsiv =  (inline caller) ACPI!IrqArbGetNextAllocationRange+1137c
fffff802`37427097 ACPI!IrqPolicyPciIrqExcluded =  (inline caller) ACPI!IrqArbpAssignIrqFromLinkNode+ab
fffff802`37401546 ACPI!MsiFindMsiDeliveryPath =  (inline caller) ACPI!IrqArbpFindSuitableRangeMsi+b2
fffff802`3740206a ACPI!IcUpdateControllers =  (inline caller) ACPI!IrqArbpPrepareForTestOrConflict+2a
fffff802`3740205b ACPI!ProcessorClearPossibleData =  (inline caller) ACPI!IrqArbpPrepareForTestOrConflict+1b
fffff802`374020e6 ACPI!IcCopyData =  (inline caller) ACPI!IrqArbpPrepareForTestOrConflict+a6
fffff802`3742724e ACPI!InsertTailList =  (inline caller) ACPI!IrqArbpQueryConflictIsa+42
fffff802`37427289 ACPI!ProcessorClearPossibleData =  (inline caller) ACPI!IrqArbpQueryConflictIsa+7d
fffff802`37414e6d ACPI!LinkNodeRemovePossibleReference =  (inline caller) ACPI!IrqArbpUnreferenceArbitrationList+111c1
fffff802`3742d76f ACPI!InsertTailList =  (inline caller) ACPI!IcAddApicInstance+9b
fffff802`3742f9f6 ACPI!FatalListEntryError =  (inline caller) ACPI!IcAddApicInstance+2322
fffff802`3742f9f6 ACPI!RtlFailFast =  (inline caller) ACPI!IcAddApicInstance+2322
fffff802`3742730a ACPI!InsertHeadList =  (inline caller) ACPI!IcAddGicInstance+4a
fffff802`37427325 ACPI!FatalListEntryError =  (inline caller) ACPI!IcAddGicInstance+65
fffff802`37427325 ACPI!RtlFailFast =  (inline caller) ACPI!IcAddGicInstance+65
fffff802`3740763f ACPI!IcQuerySecondaryGsivRange =  (inline caller) ACPI!IcAddSecondaryIcInstance+17
fffff802`3740768b ACPI!IcValidateSecondaryGsivRange =  (inline caller) ACPI!IcAddSecondaryIcInstance+63
fffff802`3740769b ACPI!RtlULongAdd =  (inline caller) ACPI!IcAddSecondaryIcInstance+73
fffff802`37407708 ACPI!InsertTailList =  (inline caller) ACPI!IcAddSecondaryIcInstance+e0
fffff802`37416718 ACPI!FatalListEntryError =  (inline caller) ACPI!IcAddSecondaryIcInstance+f0f0
fffff802`37416718 ACPI!RtlFailFast =  (inline caller) ACPI!IcAddSecondaryIcInstance+f0f0
fffff802`373ff3f0 ACPI!InitializeListHead =  (inline caller) ACPI!IcInitGlobalState+0
fffff802`37405e92 ACPI!TraceLoggingProviderEnabled =  (inline caller) ACPI!IrqTraceAffinityPolicy+2e
fffff802`37405fa9 ACPI!IrqpFreeInstancePath =  (inline caller) ACPI!IrqTraceAffinityPolicy+145
fffff802`37405f2f ACPI!EventDataDescCreate =  (inline caller) ACPI!IrqTraceAffinityPolicy+cb
fffff802`37405f2b ACPI!EventDataDescCreate =  (inline caller) ACPI!IrqTraceAffinityPolicy+c7
fffff802`37405f27 ACPI!EventDataDescCreate =  (inline caller) ACPI!IrqTraceAffinityPolicy+c3
fffff802`37405f23 ACPI!EventDataDescCreate =  (inline caller) ACPI!IrqTraceAffinityPolicy+bf
fffff802`37405f12 ACPI!_tlgCreate2Binary =  (inline caller) ACPI!IrqTraceAffinityPolicy+ae
fffff802`37405f1a ACPI!EventDataDescCreate =  (inline caller) ACPI!IrqTraceAffinityPolicy+b6
fffff802`37405f12 ACPI!EventDataDescCreate =  (inline caller) ACPI!IrqTraceAffinityPolicy+ae
fffff802`37415b7a ACPI!RtlUnicodeStringInit =  (inline caller) ACPI!IrqpAllocateInstancePath+f9a6
fffff802`37415b7a ACPI!RtlUnicodeStringInitWorker =  (inline caller) ACPI!IrqpAllocateInstancePath+f9a6
fffff802`37415b95 ACPI!RtlStringLengthWorkerW =  (inline caller) ACPI!IrqpAllocateInstancePath+f9c1
fffff802`374062b4 ACPI!RtlUnicodeStringInit =  (inline caller) ACPI!IrqpAllocateInstancePath+e0
fffff802`374062b4 ACPI!RtlUnicodeStringInitWorker =  (inline caller) ACPI!IrqpAllocateInstancePath+e0
fffff802`374062c8 ACPI!RtlStringLengthWorkerW =  (inline caller) ACPI!IrqpAllocateInstancePath+f4
fffff802`37405785 ACPI!ArbSortArbitrationList =  (inline caller) ACPI!ArbTestAllocation+e5
2: kd> .logclose
Closing open log file C:\sandbox\dumps\Bug_2005370\acpi.sym
